{
  "versions": [
    {
      "version": "0.14.10",
      "queries": {
        "exists": "SELECT 1 FROM apps WHERE bundle_identifier = 'com.anthropic.claudefordesktop';"
      },
      "installer_url": "https://storage.googleapis.com/osprey-downloads-c02f6a0d-347c-492b-a752-3e0651722e97/nest/release-0.14.10-artifact-fe3f5688c1c2a4b648d1bf6d9784d62ef9fc336a.zip",
      "install_script_ref": "25f95896",
      "uninstall_script_ref": "4cfbec7d",
      "sha256": "bf83ee2cc3655dfc237812ca06ccd941fa6051272ef0a85a03f6e20d8c765738",
      "default_categories": [
        "Productivity"
      ]
    }
  ],
  "refs": {
    "25f95896": "#!/bin/sh\n\n# variables\nAPPDIR=\"/Applications/\"\nTMPDIR=$(dirname \"$(realpath $INSTALLER_PATH)\")\n# functions\n\nquit_application() {\n  local bundle_id=\"$1\"\n  local timeout_duration=10\n\n  # check if the application is running\n  if ! osascript -e \"application id \\\"$bundle_id\\\" is running\" 2\u003e/dev/null; then\n    return\n  fi\n\n  local console_user\n  console_user=$(stat -f \"%Su\" /dev/console)\n  if [[ $EUID -eq 0 \u0026\u0026 \"$console_user\" == \"root\" ]]; then\n    echo \"Not logged into a non-root GUI; skipping quitting application ID '$bundle_id'.\"\n    return\n  fi\n\n  echo \"Quitting application '$bundle_id'...\"\n\n  # try to quit the application within the timeout period\n  local quit_success=false\n  SECONDS=0\n  while (( SECONDS \u003c timeout_duration )); do\n    if osascript -e \"tell application id \\\"$bundle_id\\\" to quit\" \u003e/dev/null 2\u003e\u00261; then\n      if ! pgrep -f \"$bundle_id\" \u003e/dev/null 2\u003e\u00261; then\n        echo \"Application '$bundle_id' quit successfully.\"\n        quit_success=true\n        break\n      fi\n    fi\n    sleep 1\n  done\n\n  if [[ \"$quit_success\" = false ]]; then\n    echo \"Application '$bundle_id' did not quit.\"\n  fi\n}\n\n\n# extract contents\nunzip \"$INSTALLER_PATH\" -d \"$TMPDIR\"\n# copy to the applications folder\nquit_application 'com.anthropic.claudefordesktop'\nif [ -d \"$APPDIR/Claude.app\" ]; then\n\tsudo mv \"$APPDIR/Claude.app\" \"$TMPDIR/Claude.app.bkp\"\nfi\nsudo cp -R \"$TMPDIR/Claude.app\" \"$APPDIR\"\n",
    "4cfbec7d": "#!/bin/sh\n\n# variables\nAPPDIR=\"/Applications/\"\nLOGGED_IN_USER=$(scutil \u003c\u003c\u003c \"show State:/Users/ConsoleUser\" | awk '/Name :/ { print $3 }')\n# functions\n\ntrash() {\n  local logged_in_user=\"$1\"\n  local target_file=\"$2\"\n  local timestamp=\"$(date +%Y-%m-%d-%s)\"\n  local rand=\"$(jot -r 1 0 99999)\"\n\n  # replace ~ with /Users/$logged_in_user\n  if [[ \"$target_file\" == ~* ]]; then\n    target_file=\"/Users/$logged_in_user${target_file:1}\"\n  fi\n\n  local trash=\"/Users/$logged_in_user/.Trash\"\n  local file_name=\"$(basename \"${target_file}\")\"\n\n  if [[ -e \"$target_file\" ]]; then\n    echo \"removing $target_file.\"\n    mv -f \"$target_file\" \"$trash/${file_name}_${timestamp}_${rand}\"\n  else\n    echo \"$target_file doesn't exist.\"\n  fi\n}\n\nsudo rm -rf \"$APPDIR/Claude.app\"\ntrash $LOGGED_IN_USER '~/Library/Application Support/Claude'\ntrash $LOGGED_IN_USER '~/Library/Application Support/com.apple.sharedfilelist/com.apple.LSSharedFileList.ApplicationRecentDocuments/com.anthropic.claudefordesktop.sfl*'\ntrash $LOGGED_IN_USER '~/Library/Caches/com.anthropic.claudefordesktop'\ntrash $LOGGED_IN_USER '~/Library/Caches/com.anthropic.claudefordesktop.ShipIt'\ntrash $LOGGED_IN_USER '~/Library/HTTPStorages/com.anthropic.claudefordesktop'\ntrash $LOGGED_IN_USER '~/Library/Logs/Claude'\ntrash $LOGGED_IN_USER '~/Library/Preferences/com.anthropic.claudefordesktop.plist'\ntrash $LOGGED_IN_USER '~/Library/Saved Application State/com.anthropic.claudefordesktop.savedState'\n"
  }
}