{
  "versions": [
    {
      "version": "135.0.3179.73",
      "queries": {
        "exists": "SELECT 1 FROM apps WHERE bundle_identifier = 'com.microsoft.edgemac';"
      },
      "installer_url": "https://msedge.sf.dl.delivery.mp.microsoft.com/filestreamingservice/files/62b79ad0-71e3-4583-be18-e85c2546f611/MicrosoftEdge-135.0.3179.73.dmg",
      "install_script_ref": "bdc4bed3",
      "uninstall_script_ref": "2ec79299",
      "sha256": "c82e8845b49c0bf44ad88a4134b9baf0fc078583096d60e6d8992024088c0054"
    }
  ],
  "refs": {
    "2ec79299": "#!/bin/sh\n\n# variables\nAPPDIR=\"/Applications/\"\nLOGGED_IN_USER=$(scutil \u003c\u003c\u003c \"show State:/Users/ConsoleUser\" | awk '/Name :/ { print $3 }')\n# functions\n\nremove_launchctl_service() {\n  local service=\"$1\"\n  local booleans=(\"true\" \"false\")\n  local plist_status\n  local paths\n  local should_sudo\n\n  echo \"Removing launchctl service ${service}\"\n\n  for should_sudo in \"${booleans[@]}\"; do\n    plist_status=$(launchctl list \"${service}\" 2\u003e/dev/null)\n\n    if [[ $plist_status == \\{* ]]; then\n      if [[ $should_sudo == \"true\" ]]; then\n        sudo launchctl remove \"${service}\"\n      else\n        launchctl remove \"${service}\"\n      fi\n      sleep 1\n    fi\n\n    paths=(\n      \"/Library/LaunchAgents/${service}.plist\"\n      \"/Library/LaunchDaemons/${service}.plist\"\n    )\n\n    # if not using sudo, prepend the home directory to the paths\n    if [[ $should_sudo == \"false\" ]]; then\n      for i in \"${!paths[@]}\"; do\n        paths[i]=\"${HOME}${paths[i]}\"\n      done\n    fi\n\n    for path in \"${paths[@]}\"; do\n      if [[ -e \"$path\" ]]; then\n        if [[ $should_sudo == \"true\" ]]; then\n          sudo rm -f -- \"$path\"\n        else\n          rm -f -- \"$path\"\n        fi\n      fi\n    done\n  done\n}\n\ntrash() {\n  local logged_in_user=\"$1\"\n  local target_file=\"$2\"\n  local timestamp=\"$(date +%Y-%m-%d-%s)\"\n  local rand=\"$(jot -r 1 0 99999)\"\n\n  # replace ~ with /Users/$logged_in_user\n  if [[ \"$target_file\" == ~* ]]; then\n    target_file=\"/Users/$logged_in_user${target_file:1}\"\n  fi\n\n  local trash=\"/Users/$logged_in_user/.Trash\"\n  local file_name=\"$(basename \"${target_file}\")\"\n\n  if [[ -e \"$target_file\" ]]; then\n    echo \"removing $target_file.\"\n    mv -f \"$target_file\" \"$trash/${file_name}_${timestamp}_${rand}\"\n  else\n    echo \"$target_file doesn't exist.\"\n  fi\n}\n\nremove_launchctl_service 'com.microsoft.EdgeUpdater.wake'\nsudo rm -rf \"$APPDIR/Microsoft Edge.app\"\nsudo rmdir '/Library/Application Support/Microsoft'\nsudo rmdir '~/Library/Microsoft'\ntrash $LOGGED_IN_USER '~/Library/Application Scripts/com.microsoft.edgemac.wdgExtension'\ntrash $LOGGED_IN_USER '~/Library/Application Support/Microsoft Edge'\ntrash $LOGGED_IN_USER '~/Library/Caches/com.microsoft.edgemac'\ntrash $LOGGED_IN_USER '~/Library/Caches/com.microsoft.EdgeUpdater'\ntrash $LOGGED_IN_USER '~/Library/Caches/Microsoft Edge'\ntrash $LOGGED_IN_USER '~/Library/Containers/com.microsoft.edgemac.wdgExtension'\ntrash $LOGGED_IN_USER '~/Library/HTTPStorages/com.microsoft.edgemac'\ntrash $LOGGED_IN_USER '~/Library/HTTPStorages/com.microsoft.EdgeUpdater'\ntrash $LOGGED_IN_USER '~/Library/LaunchAgents/com.microsoft.EdgeUpdater.*.plist'\ntrash $LOGGED_IN_USER '~/Library/Microsoft/MicrosoftSoftwareUpdate/Actives/com.microsoft.edgemac'\ntrash $LOGGED_IN_USER '~/Library/Preferences/com.microsoft.edgemac.plist'\ntrash $LOGGED_IN_USER '~/Library/Saved Application State/com.microsoft.edgemac.savedState'\ntrash $LOGGED_IN_USER '~/Library/WebKit/com.microsoft.edgemac'\n",
    "bdc4bed3": "#!/bin/sh\n\n# variables\nAPPDIR=\"/Applications/\"\nTMPDIR=$(dirname \"$(realpath $INSTALLER_PATH)\")\n# functions\n\nquit_application() {\n  local bundle_id=\"$1\"\n  local timeout_duration=10\n\n  # check if the application is running\n  if ! osascript -e \"application id \\\"$bundle_id\\\" is running\" 2\u003e/dev/null; then\n    return\n  fi\n\n  local console_user\n  console_user=$(stat -f \"%Su\" /dev/console)\n  if [[ $EUID -eq 0 \u0026\u0026 \"$console_user\" == \"root\" ]]; then\n    echo \"Not logged into a non-root GUI; skipping quitting application ID '$bundle_id'.\"\n    return\n  fi\n\n  echo \"Quitting application '$bundle_id'...\"\n\n  # try to quit the application within the timeout period\n  local quit_success=false\n  SECONDS=0\n  while (( SECONDS \u003c timeout_duration )); do\n    if osascript -e \"tell application id \\\"$bundle_id\\\" to quit\" \u003e/dev/null 2\u003e\u00261; then\n      if ! pgrep -f \"$bundle_id\" \u003e/dev/null 2\u003e\u00261; then\n        echo \"Application '$bundle_id' quit successfully.\"\n        quit_success=true\n        break\n      fi\n    fi\n    sleep 1\n  done\n\n  if [[ \"$quit_success\" = false ]]; then\n    echo \"Application '$bundle_id' did not quit.\"\n  fi\n}\n\n\n# copy to the applications folder\nquit_application 'com.microsoft.edgemac'\nsudo [ -d \"$APPDIR/Microsoft Edge.app\" ] \u0026\u0026 sudo mv \"$APPDIR/Microsoft Edge.app\" \"$TMPDIR/Microsoft Edge.app.bkp\"\nsudo cp -R \"$TMPDIR/Microsoft Edge.app\" \"$APPDIR\"\n"
  }
}