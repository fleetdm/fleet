{
  "versions": [
    {
      "version": "4.39.0",
      "queries": {
        "exists": "SELECT 1 FROM programs WHERE name = 'Docker Desktop' AND publisher = 'Docker Inc.';"
      },
      "installer_url": "https://desktop.docker.com/win/main/amd64/184744/Docker%20Desktop%20Installer.exe",
      "install_script_ref": "f938db79",
      "uninstall_script_ref": "ba939f05",
      "sha256": "e832d4c2c99300436096b2e990220068e69ede845137a9dd63eff0a51e8a14e9"
    }
  ],
  "refs": {
    "ba939f05": "# Define acceptable/expected exit codes\n$ExpectedExitCodes = @(0, 19)\n\n# Uninstall Registry Key\n$machineKey = 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\Docker Desktop'\n\n# Initialize exit code\n$exitCode = 0\n\ntry {\n    $key = Get-ItemProperty -Path $machineKey -ErrorAction Stop\n\n    # Get the uninstall command. Some uninstallers do not include 'QuietUninstallString'\n    $uninstallCommand = if ($key.QuietUninstallString) {\n        $key.QuietUninstallString\n    } else {\n        $key.UninstallString\n    }\n\n    # The expected uninstall command value is \"C:\\Program Files\\Docker\\Docker\\Docker Desktop Installer.exe\" \"uninstall\"\n    $splitArgs = $uninstallCommand.Split('\"')\n    if ($splitArgs.Length -ne 5) {\n      Throw \"Unexpected uninstall command. Please update the uninstall script.`nUninstall command: $uninstallCommand\"\n    }\n    $uninstallCommand = $splitArgs[1]\n    $uninstallArgs = $splitArgs[3]\n\n    Write-Host \"Uninstall command: $uninstallCommand\"\n    Write-Host \"Uninstall args: $uninstallArgs\"\n\n    $processOptions = @{\n        FilePath = $uninstallCommand\n        PassThru = $true\n        Wait     = $true\n    }\n    if ($uninstallArgs -ne '') {\n        $processOptions.ArgumentList = \"$uninstallArgs\"\n    }\n\n    # Start uninstall process\n    $process = Start-Process @processOptions\n    $exitCode = $process.ExitCode\n    Write-Host \"Uninstall exit code: $exitCode\"\n\n} catch {\n    Write-Host \"Error: $_\"\n    $exitCode = 1\n}\n\n# Treat acceptable exit codes as success\nif ($ExpectedExitCodes -contains $exitCode) {\n    Exit 0\n} else {\n    Exit $exitCode\n}\n",
    "f938db79": "# Learn more about .exe install scripts:\n# http://fleetdm.com/learn-more-about/exe-install-scripts\n\n$exeFilePath = \"${env:INSTALLER_PATH}\"\n\ntry {\n\n# Add argument to install silently\n# Argument to make install silent depends on installer,\n# each installer might use different argument (usually it's \"/S\" or \"/s\")\n$processOptions = @{\n  FilePath = \"$exeFilePath\"\n  ArgumentList = \"install --quiet\"\n  PassThru = $true\n  Wait = $true\n}\n    \n# Start process and track exit code\n$process = Start-Process @processOptions\n$exitCode = $process.ExitCode\n\n# Prints the exit code\nWrite-Host \"Install exit code: $exitCode\"\nExit $exitCode\n\n} catch {\n  Write-Host \"Error: $_\"\n  Exit 1\n}\n"
  }
}