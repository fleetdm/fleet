{
  "versions": [
    {
      "version": "138.0.7204.158",
      "queries": {
        "exists": "SELECT 1 FROM programs WHERE name = 'Google Chrome' AND publisher = 'Google LLC';"
      },
      "installer_url": "https://dl.google.com/release2/chrome/adoxq6yw64jzwswqufh3prv6wcra_138.0.7204.158/138.0.7204.158_chrome_installer_uncompressed.exe",
      "install_script_ref": "a36a7752",
      "uninstall_script_ref": "5b7ad3bf",
      "sha256": "c04b9bef1a1a4ee74b238e47d45db20280480897a8a444aa225ed53c7c647ad7",
      "default_categories": [
        "Browsers"
      ]
    }
  ],
  "refs": {
    "5b7ad3bf": "$softwareName = \"Google Chrome\"\n\n$uninstallArgs = \"--uninstall\"\n\n$expectedExitCodes = @(19, 20)\n\n$machineKey = `\n 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*'\n$machineKey32on64 = `\n 'HKLM:\\SOFTWARE\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\*'\n\n$exitCode = 0\n\ntry {\n\n    [array]$uninstallKeys = Get-ChildItem `\n        -Path @($machineKey, $machineKey32on64) `\n        -ErrorAction SilentlyContinue |\n            ForEach-Object { Get-ItemProperty $_.PSPath }\n\n    $foundUninstaller = $false\n    foreach ($key in $uninstallKeys) {\n        if ($key.DisplayName -eq $softwareName) {\n            $foundUninstaller = $true\n            # Get the uninstall command.\n            $uninstallCommand = if ($key.QuietUninstallString) {\n                $key.QuietUninstallString\n            } else {\n                $key.UninstallString\n            }\n\n            # Split the command and args\n            $splitArgs = $uninstallCommand.Split('\"')\n            if ($splitArgs.Length -gt 1) {\n                if ($splitArgs.Length -eq 3) {\n                    $uninstallArgs = \"$( $splitArgs[2] ) $uninstallArgs\".Trim()\n                } elseif ($splitArgs.Length -gt 3) {\n                    Throw `\n                        \"Uninstall command contains multiple quoted strings. \" +\n                            \"Please update the uninstall script.`n\" +\n                            \"Uninstall command: $uninstallCommand\"\n                }\n                $uninstallCommand = $splitArgs[1]\n            }\n            Write-Host \"Uninstall command: $uninstallCommand\"\n            Write-Host \"Uninstall args: $uninstallArgs\"\n\n            $processOptions = @{\n                FilePath = $uninstallCommand\n                PassThru = $true\n                Wait = $true\n                ArgumentList = \"$uninstallArgs --force-uninstall\".Split(' ')\n                NoNewWindow = $true\n            }\n\n            # Start process and track exit code\n            $process = Start-Process @processOptions\n            $exitCode = $process.ExitCode\n\n            Write-Host \"Uninstall exit code: $exitCode\"\n            break\n        }\n    }\n\n    if (-not $foundUninstaller) {\n        Write-Host \"Uninstaller for '$softwareName' not found.\"\n        Exit 1\n    }\n\n} catch {\n    Write-Host \"Error: $_\"\n    Exit 1\n}\n\nif ($expectedExitCodes -contains $exitCode) {\n    $exitCode = 0\n}\n\nExit $exitCode",
    "a36a7752": "$exeFilePath = \"${env:INSTALLER_PATH}\"\n\ntry {\n\n$processOptions = @{\n  FilePath = \"$exeFilePath\"\n  ArgumentList = \"--do-not-launch-chrome --system-level\"\n  PassThru = $true\n  Wait = $true\n}\n    \n# Start process and track exit code\n$process = Start-Process @processOptions\n$exitCode = $process.ExitCode\n\n# Prints the exit code\nWrite-Host \"Install exit code: $exitCode\"\nExit $exitCode\n\n} catch {\n  Write-Host \"Error: $_\"\n  Exit 1\n}"
  }
}