{
  "versions": [
    {
      "version": "6.7.0.278",
      "queries": {
        "exists": "SELECT 1 FROM apps WHERE bundle_identifier = 'com.adobe.acc.AdobeCreativeCloud';"
      },
      "installer_url": "https://ccmdls.adobe.com/AdobeProducts/StandaloneBuilds/ACCC/ESD/6.7.0/278/macarm64/ACCCx6_7_0_278.dmg",
      "install_script_ref": "1ad8f626",
      "uninstall_script_ref": "0f729ae8",
      "sha256": "d533b2e0ae3ea1d0e017c07ed75a7352d2108fe8a8c54479effab8c1909a35c1",
      "default_categories": [
        "Productivity"
      ]
    }
  ],
  "refs": {
    "0f729ae8": "#!/bin/sh\n\nquit_app() {\n  b=\"$1\"\n  # try a friendly quit if a GUI user is active\n  if osascript -e \"application id \\\"$b\\\" is running\" \u003e/dev/null 2\u003e\u00261; then\n    cu=\"$(stat -f \"%Su\" /dev/console 2\u003e/dev/null || true)\"\n    if [ \"$(id -u)\" -ne 0 ] || [ \"$cu\" != \"root\" ]; then\n      i=0\n      while [ \"$i\" -lt 10 ]; do\n        osascript -e \"tell application id \\\"$b\\\" to quit\" \u003e/dev/null 2\u003e\u00261 || true\n        if ! pgrep -f \"$b\" \u003e/dev/null 2\u003e\u00261; then break; fi\n        i=$((i+1))\n        sleep 1\n      done\n    fi\n  fi\n  # hard stop fallback\n  pkill -f \"$b\" \u003e/dev/null 2\u003e\u00261 || true\n}\n\nBUNDLE_ID=\"com.adobe.acc.AdobeCreativeCloud\"\nquit_app \"$BUNDLE_ID\"\n\n# Try the official Adobe Creative Cloud Uninstaller.app first\nUNINST_APP=\"\"\nfor p in \\\n  \"/Applications/Utilities/Adobe Creative Cloud/Utils/Creative Cloud Uninstaller.app\" \\\n  \"/Applications/Adobe Creative Cloud/Utils/Creative Cloud Uninstaller.app\" \\\n  \"/Applications/Utilities/Adobe Creative Cloud/Creative Cloud Uninstaller.app\"\ndo\n  [ -d \"$p\" ] \u0026\u0026 { UNINST_APP=\"$p\"; break; }\ndone\n[ -z \"$UNINST_APP\" ] \u0026\u0026 UNINST_APP=\"$(/usr/bin/find /Applications /Applications/Utilities -maxdepth 5 -type d -iname '*creative*cloud*uninstaller*.app' -print -quit 2\u003e/dev/null)\"\n\nif [ -n \"$UNINST_APP\" ] \u0026\u0026 [ -d \"$UNINST_APP\" ]; then\n  BIN=\"$(/usr/bin/find \"$UNINST_APP/Contents/MacOS\" -maxdepth 1 -type f -perm -111 -print -quit 2\u003e/dev/null)\"\n  [ -n \"$BIN\" ] \u0026\u0026 { \"$BIN\" -uninstall --force \u003e/dev/null 2\u003e\u00261 || \"$BIN\" \u003e/dev/null 2\u003e\u00261 || true; }\nfi\n\n# Remove app bundles\nrm -rf \"/Applications/Adobe Creative Cloud.app\" \\\n       \"/Applications/Creative Cloud.app\" \\\n       \"/Applications/Utilities/Adobe Creative Cloud/ACC/Creative Cloud.app\" \u003e/dev/null 2\u003e\u00261 || true\n\n# System support files\nrm -rf \"/Library/Application Support/Adobe/Creative Cloud\" \\\n       \"/Library/Application Support/Adobe/Adobe Desktop Common\" \u003e/dev/null 2\u003e\u00261 || true\nrm -f  \"/Library/Preferences/com.adobe.acc.AdobeCreativeCloud.plist\" \u003e/dev/null 2\u003e\u00261 || true\nrm -f  /var/db/receipts/com.adobe.acc*.bom /var/db/receipts/com.adobe.acc*.plist \u003e/dev/null 2\u003e\u00261 || true\n\n# Per-user cleanup\nfor udir in /Users/* /var/root; do\n  [ -d \"$udir/Library\" ] || continue\n  rm -rf \"$udir/Library/Application Support/Adobe/Creative Cloud\" \\\n         \"$udir/Library/Caches/com.adobe.acc.AdobeCreativeCloud\" \\\n         \"$udir/Library/Logs/Adobe/Creative Cloud\" \u003e/dev/null 2\u003e\u00261 || true\n  rm -f  \"$udir/Library/Preferences/com.adobe.acc.AdobeCreativeCloud.plist\" \u003e/dev/null 2\u003e\u00261 || true\ndone\n\necho \"adobe creative cloud uninstalled\"\n",
    "1ad8f626": "#!/bin/sh\n\nquit_application() {\n  bundle_id=\"$1\"\n  timeout_duration=10\n  if ! osascript -e \"application id \\\"$bundle_id\\\" is running\" \u003e/dev/null 2\u003e\u00261; then return; fi\n  console_user=\"$(stat -f \"%Su\" /dev/console 2\u003e/dev/null || true)\"\n  if [ \"$(id -u)\" -eq 0 ] \u0026\u0026 [ \"$console_user\" = \"root\" ]; then\n    echo \"Skipping quit for '$bundle_id'.\"\n    return\n  fi\n  echo \"Quitting '$bundle_id'...\"\n  i=0\n  while [ \"$i\" -lt \"$timeout_duration\" ]; do\n    osascript -e \"tell application id \\\"$bundle_id\\\" to quit\" \u003e/dev/null 2\u003e\u00261 || true\n    if ! pgrep -f \"$bundle_id\" \u003e/dev/null 2\u003e\u00261; then\n      echo \"'$bundle_id' quit successfully.\"\n      return\n    fi\n    i=$((i+1))\n    sleep 1\n  done\n  echo \"'$bundle_id' did not quit.\"\n}\n\n[ -n \"$INSTALLER_PATH\" ] \u0026\u0026 [ -f \"$INSTALLER_PATH\" ] || { echo \"missing installer\"; exit 1; }\n\nquit_application \"com.adobe.acc.AdobeCreativeCloud\"\n\n# Mount to a known path to avoid space-in-volume issues\nMOUNT_POINT=\"$(mktemp -d \"/tmp/adobe_cc.XXXXXX\")\"\nif ! hdiutil attach -nobrowse -readonly -mountpoint \"$MOUNT_POINT\" \"$INSTALLER_PATH\" \u003e/dev/null 2\u003e\u00261; then\n  rmdir \"$MOUNT_POINT\" \u003e/dev/null 2\u003e\u00261 || true\n  echo \"failed to mount dmg\"\n  exit 1\nfi\n\n# Find the installer app (handles Install.app or variants like *Install*.app)\nINSTALL_APP=\"$(/usr/bin/find \"$MOUNT_POINT\" -maxdepth 5 -type d \\( -name \"Install.app\" -o -iname \"*Install*.app\" \\) -print -quit)\"\n\nif [ -z \"$INSTALL_APP\" ] || [ ! -d \"$INSTALL_APP\" ]; then\n  hdiutil detach \"$MOUNT_POINT\" \u003e/dev/null 2\u003e\u00261 || true\n  rmdir \"$MOUNT_POINT\" \u003e/dev/null 2\u003e\u00261 || true\n  echo \"Install.app not found\"\n  exit 1\nfi\n\n# Prefer Contents/MacOS/Install, fall back to first executable in MacOS\nBIN=\"$INSTALL_APP/Contents/MacOS/Install\"\nif [ ! -x \"$BIN\" ]; then\n  BIN=\"$(/usr/bin/find \"$INSTALL_APP/Contents/MacOS\" -type f -perm +111 -print -quit 2\u003e/dev/null)\"\nfi\n[ -n \"$BIN\" ] \u0026\u0026 [ -x \"$BIN\" ] || { hdiutil detach \"$MOUNT_POINT\" \u003e/dev/null 2\u003e\u00261 || true; rmdir \"$MOUNT_POINT\" \u003e/dev/null 2\u003e\u00261 || true; echo \"installer binary not found\"; exit 1; }\n\n# Try silent, fall back to normal if needed\n\"$BIN\" --mode=silent \u003e/dev/null 2\u003e\u00261 || \"$BIN\" \u003e/dev/null 2\u003e\u00261\n\nhdiutil detach \"$MOUNT_POINT\" \u003e/dev/null 2\u003e\u00261 || true\nrmdir \"$MOUNT_POINT\" \u003e/dev/null 2\u003e\u00261 || true\n\necho \"adobe creative cloud installed\"\n"
  }
}