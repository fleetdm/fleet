import React, { useMemo } from "react";

import { IVulnerability } from "interfaces/vulnerability";

import Card from "components/Card";
import TableContainer from "components/TableContainer";

import generateColumnConfigs from "./SwVulnSwTableConfig";

const baseClass = "software-vuln-software-versions";

interface ISoftwareVulnSoftwareVersions {
  vulnSoftware: IVulnerability["software"];
  isPremiumTier: boolean;
}

const SoftwareVulnSoftwareVersions = ({
  vulnSoftware,
  isPremiumTier,
}: ISoftwareVulnSoftwareVersions) => {
  const columnConfigs = useMemo(() => generateColumnConfigs(isPremiumTier), []);

  const renderVulnerableSoftwareTable = () => {
    return (
      <TableContainer
        columnConfigs={columnConfigs}
        data={vulnSoftware}
        defaultSortHeader="hosts"
        defaultSortDirection="desc"
        isClientSidePagination
        resultsTitle={vulnSoftware.length > 1 ? "items" : "item"}
        isLoading={false} // not rendered otherwise
        emptyComponent={() => <></>}
        showMarkAllPages={false}
        isAllPagesSelected={false}
      />
    );
  };
  return (
    <Card borderRadiusSize="large" includeShadow className={`${baseClass}`}>
      <h2>Vulnerable software</h2>
      {renderVulnerableSoftwareTable()}
    </Card>
  );
};

export default SoftwareVulnSoftwareVersions;
