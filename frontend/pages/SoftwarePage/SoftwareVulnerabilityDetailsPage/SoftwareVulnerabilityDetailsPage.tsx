import React from "react";
import { useQuery } from "react-query";
import { RouteComponentProps } from "react-router";

import { ISoftwareVulnerability } from "interfaces/software";
import softwareVulnAPI, {
  IVulnerabilityResponse,
} from "services/entities/vulnerabilities";

import Spinner from "components/Spinner";
import DataError from "components/DataError";
import Fleet404 from "pages/errors/Fleet404";
import MainContent from "components/MainContent";

const baseClass = "software-vulnerability-details-page";

interface ISoftwareVulnerabilityDetailsRouteParams {
  cve: string;
}

type ISoftwareVulnerabilityDetailsPageProps = RouteComponentProps<
  undefined,
  ISoftwareVulnerabilityDetailsRouteParams
>;

const SoftwareVulnerabilityDetailsPage = ({
  router,
  routeParams,
}: ISoftwareVulnerabilityDetailsPageProps) => {
  const cve = routeParams.cve;
  // fetch data
  const {
    data: vuln,
    isLoading: isVulnLoading,
    isError: isVulnError,
  } = useQuery<IVulnerabilityResponse, Error, ISoftwareVulnerability>(
    ["softwareVulnByCVE", cve],
    () => softwareVulnAPI.getVulnerability(cve),
    {
      select: (data) => data.vulnerability,
    }
  );

  // render content
  const renderContent = () => {
    if (isVulnLoading) {
      return <Spinner />;
    }
    if (isVulnError) {
      return <DataError />;
    }
    if (!vuln) {
      return <Fleet404 />;
    }
    return (
      <>
        <SoftwareVulnSummary vuln={vuln} />
        <SoftwareVulnOSVersions vuln={vuln} />
        <SoftwareVulnSoftwareVersions vuln={vuln} />
      </>
    );
  };

  return (
    <MainContent className={baseClass}>
      <>{renderContent()}</>
    </MainContent>
  );
};

export default SoftwareVulnerabilityDetailsPage;
