import React from "react";
import ReactTooltip from "react-tooltip";
import { formatFloatAsPercentage } from "utilities/helpers";

import Icon from "components/Icon";
import { COLORS } from "styles/var/colors";

import TextCell from "../TextCell";

interface IProbabilityOfExploitCellProps {
  probabilityOfExploit?: number | null;
  cisaKnownExploit?: boolean | null;
  rowId: string;
}

const ProbabilityOfExploitCell = ({
  probabilityOfExploit,
  cisaKnownExploit,
  rowId,
}: IProbabilityOfExploitCellProps): JSX.Element => {
  // Includes edge case of probability being 0
  if (typeof probabilityOfExploit === "number") {
    return (
      <>
        {formatFloatAsPercentage(probabilityOfExploit)}{" "}
        {cisaKnownExploit && (
          <>
            <span
              className={`probability-of-exploit tooltip tooltip__tooltip-icon`}
              data-tip
              data-for={`probability-of-exploit__${rowId.toString()}`}
            >
              <Icon name="error" size="small" color={"status-error"} />
            </span>

            <ReactTooltip
              place="top"
              effect="solid"
              backgroundColor={COLORS["tooltip-bg"]}
              id={`probability-of-exploit__${rowId.toString()}`}
              data-html
            >
              <span className={`tooltip__tooltip-text`}>
                <>
                  The vulnerability has been actively exploited in the wild.
                  This data is reported by the Cybersecurity and Infrastructure
                  Security Agency (CISA).
                </>
              </span>
            </ReactTooltip>
          </>
        )}
      </>
    );
  }
  // Probability can return null or undefined
  return <TextCell greyed />;
};

export default ProbabilityOfExploitCell;
