{
  "generators": {
    "modules": {}
  },
  "_generatedWith": {
    "sails": "1.2.5",
    "sails-generate": "2.0.0"
  },
  "builtStaticContent": {
    "markdownPages": [
      {
        "url": "/docs",
        "title": "Readme.md",
        "lastModifiedAt": 1646430671000,
        "htmlId": "docs--readme--aa227e74e8",
        "sectionRelativeRepoPath": "README.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/api-versioning",
        "title": "API versioning",
        "lastModifiedAt": 1654007745000,
        "htmlId": "docs--api-versioning--57c877c34f",
        "pageOrderInSectionPath": 900,
        "sectionRelativeRepoPath": "Contributing/API-Versioning.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/api-for-contributors",
        "title": "API for contributors",
        "lastModifiedAt": 1654005243000,
        "htmlId": "docs--api-for-contributors--44d6f241cc",
        "pageOrderInSectionPath": 800,
        "sectionRelativeRepoPath": "Contributing/API-for-contributors.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/committing-changes",
        "title": "Committing changes",
        "lastModifiedAt": 1654005147000,
        "htmlId": "docs--committing-changes--97eda393db",
        "pageOrderInSectionPath": 400,
        "sectionRelativeRepoPath": "Contributing/Committing-Changes.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/faq",
        "title": "FAQ",
        "lastModifiedAt": 1654005101000,
        "htmlId": "docs--faq--a919dbaa55",
        "sectionRelativeRepoPath": "Contributing/FAQ.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/building-fleet",
        "title": "Building Fleet",
        "lastModifiedAt": 1654005189000,
        "htmlId": "docs--building-fleet--83e799877d",
        "pageOrderInSectionPath": 100,
        "sectionRelativeRepoPath": "Contributing/Building-Fleet.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/migrations",
        "title": "Migrations",
        "lastModifiedAt": 1654005018000,
        "htmlId": "docs--migrations--8dedb55f96",
        "pageOrderInSectionPath": 300,
        "sectionRelativeRepoPath": "Contributing/Migrations.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/releasing-fleet",
        "title": "Releasing Fleet",
        "lastModifiedAt": 1654102431000,
        "htmlId": "docs--releasing-fleet--e879c1e587",
        "pageOrderInSectionPath": 500,
        "sectionRelativeRepoPath": "Contributing/Releasing-Fleet.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/seeding-data",
        "title": "Seeding data",
        "lastModifiedAt": 1654004973000,
        "htmlId": "docs--seeding-data--fbe3b7326e",
        "pageOrderInSectionPath": 600,
        "sectionRelativeRepoPath": "Contributing/Seeding-Data.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing/testing",
        "title": "Testing",
        "lastModifiedAt": 1654022707000,
        "htmlId": "docs--testing--3bb59f239c",
        "pageOrderInSectionPath": 200,
        "sectionRelativeRepoPath": "Contributing/Testing.md",
        "meta": {}
      },
      {
        "url": "/docs/contributing",
        "title": "Contributing",
        "lastModifiedAt": 1652111795000,
        "htmlId": "docs--readme--b1fc891aa5",
        "sectionRelativeRepoPath": "Contributing/README.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying/configuration",
        "title": "Configuration",
        "lastModifiedAt": 1653066452000,
        "htmlId": "docs--configuration--12ffd5aa20",
        "pageOrderInSectionPath": 300,
        "sectionRelativeRepoPath": "Deploying/Configuration.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying/introduction",
        "title": "Introduction",
        "lastModifiedAt": 1654102431000,
        "htmlId": "docs--introduction--77e55e52db",
        "pageOrderInSectionPath": 100,
        "sectionRelativeRepoPath": "Deploying/Introduction.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying/faq",
        "title": "FAQ",
        "lastModifiedAt": 1651602643000,
        "htmlId": "docs--faq--97d197529f",
        "sectionRelativeRepoPath": "Deploying/FAQ.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying/load-testing",
        "title": "Load testing",
        "lastModifiedAt": 1648661196000,
        "htmlId": "docs--load-testing--80b5894ae1",
        "pageOrderInSectionPath": 500,
        "sectionRelativeRepoPath": "Deploying/Load-testing.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying",
        "title": "Deploying",
        "lastModifiedAt": 1645753714000,
        "htmlId": "docs--readme--047f1fab7a",
        "sectionRelativeRepoPath": "Deploying/README.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying/reference-architectures",
        "title": "Reference architectures",
        "lastModifiedAt": 1649782140000,
        "htmlId": "docs--reference-architectu--7de85ac33e",
        "pageOrderInSectionPath": 600,
        "sectionRelativeRepoPath": "Deploying/Reference-Architectures.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying/server-installation",
        "title": "Server installation",
        "lastModifiedAt": 1653681020000,
        "htmlId": "docs--server-installation--4f715af7e6",
        "pageOrderInSectionPath": 200,
        "sectionRelativeRepoPath": "Deploying/Server-Installation.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying/upgrading-fleet",
        "title": "Upgrading Fleet",
        "lastModifiedAt": 1645640275000,
        "htmlId": "docs--upgrading-fleet--1bd6163378",
        "pageOrderInSectionPath": 700,
        "sectionRelativeRepoPath": "Deploying/Upgrading-Fleet.md",
        "meta": {}
      },
      {
        "url": "/docs/deploying/fleetctl-agent-updates",
        "title": "Fleetctl agent updates",
        "lastModifiedAt": 1645640275000,
        "htmlId": "docs--fleetctl-agent-updat--4d07aa0698",
        "pageOrderInSectionPath": 400,
        "sectionRelativeRepoPath": "Deploying/fleetctl-agent-updates.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/adding-hosts",
        "title": "Adding hosts",
        "lastModifiedAt": 1654005296000,
        "htmlId": "docs--adding-hosts--9345891a98",
        "pageOrderInSectionPath": 500,
        "sectionRelativeRepoPath": "Using-Fleet/Adding-hosts.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/automations",
        "title": "Automations",
        "lastModifiedAt": 1649789295000,
        "htmlId": "docs--automations--da9a796777",
        "pageOrderInSectionPath": 1300,
        "sectionRelativeRepoPath": "Using-Fleet/Automations.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/faq",
        "title": "FAQ",
        "lastModifiedAt": 1652804598000,
        "htmlId": "docs--faq--32f44cc99e",
        "sectionRelativeRepoPath": "Using-Fleet/FAQ.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/fleet-ui",
        "title": "Fleet UI",
        "lastModifiedAt": 1645640275000,
        "htmlId": "docs--fleet-ui--ec45ca9029",
        "pageOrderInSectionPath": 200,
        "sectionRelativeRepoPath": "Using-Fleet/Fleet-UI.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/learn-how-to-use-fleet",
        "title": "Learn how to use Fleet",
        "lastModifiedAt": 1648740364000,
        "htmlId": "docs--learn-how-to-use-fle--5dbae873ca",
        "pageOrderInSectionPath": 100,
        "sectionRelativeRepoPath": "Using-Fleet/Learn-how-to-use-Fleet.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/monitoring-fleet",
        "title": "Monitoring Fleet",
        "lastModifiedAt": 1645640275000,
        "htmlId": "docs--monitoring-fleet--150abe4abf",
        "pageOrderInSectionPath": 700,
        "sectionRelativeRepoPath": "Using-Fleet/Monitoring-Fleet.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/osquery-logs",
        "title": "Osquery logs",
        "lastModifiedAt": 1649782140000,
        "htmlId": "docs--osquery-logs--be2cb71e6a",
        "pageOrderInSectionPath": 600,
        "sectionRelativeRepoPath": "Using-Fleet/Osquery-logs.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/permissions",
        "title": "Permissions",
        "lastModifiedAt": 1650298233000,
        "htmlId": "docs--permissions--981edfbb31",
        "pageOrderInSectionPath": 900,
        "sectionRelativeRepoPath": "Using-Fleet/Permissions.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet",
        "title": "Using Fleet",
        "lastModifiedAt": 1645640275000,
        "htmlId": "docs--readme--bbc56456cc",
        "sectionRelativeRepoPath": "Using-Fleet/README.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/rest-api",
        "title": "REST API",
        "lastModifiedAt": 1653334505000,
        "htmlId": "docs--rest-api--5808213ce0",
        "pageOrderInSectionPath": 400,
        "sectionRelativeRepoPath": "Using-Fleet/REST-API.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/security-audits",
        "title": "Security audits",
        "lastModifiedAt": 1652274318000,
        "htmlId": "docs--security-audits--4f6921dd8b",
        "pageOrderInSectionPath": 790,
        "sectionRelativeRepoPath": "Using-Fleet/Security-audits.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/security-best-practices",
        "title": "Security best practices",
        "lastModifiedAt": 1646243785000,
        "htmlId": "docs--security-best-practi--4999ec4e8e",
        "pageOrderInSectionPath": 800,
        "sectionRelativeRepoPath": "Using-Fleet/Security-best-practices.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/supported-browsers",
        "title": "Supported browsers",
        "lastModifiedAt": 1652913440000,
        "htmlId": "docs--supported-browsers--0040148814",
        "pageOrderInSectionPath": 1200,
        "sectionRelativeRepoPath": "Using-Fleet/Supported-browsers.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/supported-host-operating-systems",
        "title": "Supported host operating systems",
        "lastModifiedAt": 1647883352000,
        "htmlId": "docs--supported-host-opera--049c0d3554",
        "pageOrderInSectionPath": 1200,
        "sectionRelativeRepoPath": "Using-Fleet/Supported-host-operating-systems.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/teams",
        "title": "Teams",
        "lastModifiedAt": 1645640275000,
        "htmlId": "docs--teams--2c194c2622",
        "pageOrderInSectionPath": 1000,
        "sectionRelativeRepoPath": "Using-Fleet/Teams.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/usage-statistics",
        "title": "Usage statistics",
        "lastModifiedAt": 1645640275000,
        "htmlId": "docs--usage-statistics--9319e59be6",
        "pageOrderInSectionPath": 1100,
        "sectionRelativeRepoPath": "Using-Fleet/Usage-statistics.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/vulnerability-processing",
        "title": "Vulnerability processing",
        "lastModifiedAt": 1654005271000,
        "htmlId": "docs--vulnerability-proces--e52489129f",
        "pageOrderInSectionPath": 1300,
        "sectionRelativeRepoPath": "Using-Fleet/Vulnerability-Processing.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/fleetctl-cli",
        "title": "Fleetctl CLI",
        "lastModifiedAt": 1653069714000,
        "htmlId": "docs--fleetctl-cli--ff884ab720",
        "pageOrderInSectionPath": 300,
        "sectionRelativeRepoPath": "Using-Fleet/fleetctl-CLI.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/standard-query-library",
        "title": "Standard query library",
        "lastModifiedAt": 1651241893000,
        "htmlId": "docs--readme--440ed017cf",
        "sectionRelativeRepoPath": "01-Using-Fleet/standard-query-library/README.md",
        "meta": {}
      },
      {
        "url": "/docs/using-fleet/configuration-files",
        "title": "Configuration files",
        "lastModifiedAt": 1651589251000,
        "htmlId": "docs--readme--b65c987189",
        "sectionRelativeRepoPath": "Using-Fleet/configuration-files/README.md",
        "meta": {}
      },
      {
        "url": "/handbook",
        "title": "Readme.md",
        "lastModifiedAt": 1654159916000,
        "htmlId": "handbook--readme--3313f762ec",
        "sectionRelativeRepoPath": "README.md",
        "meta": {
          "maintainedBy": "mikermcneil"
        }
      },
      {
        "url": "/handbook/brand",
        "title": "Brand",
        "lastModifiedAt": 1654160033000,
        "htmlId": "handbook--brand--70e03ae5a0",
        "sectionRelativeRepoPath": "brand.md",
        "meta": {
          "maintainedBy": "mike-j-thomas"
        }
      },
      {
        "url": "/handbook/community",
        "title": "Community",
        "lastModifiedAt": 1653069684000,
        "htmlId": "handbook--community--6cd56599df",
        "sectionRelativeRepoPath": "community.md",
        "meta": {
          "maintainedBy": "ksatter"
        }
      },
      {
        "url": "/handbook/company",
        "title": "Company",
        "lastModifiedAt": 1653591323000,
        "htmlId": "handbook--company--8d11fb1d59",
        "sectionRelativeRepoPath": "company.md",
        "meta": {
          "maintainedBy": "mikermcneil"
        }
      },
      {
        "url": "/handbook/customers",
        "title": "Customers",
        "lastModifiedAt": 1653675605000,
        "htmlId": "handbook--customers--ab6234b41a",
        "sectionRelativeRepoPath": "customers.md",
        "meta": {
          "maintainedBy": "tgauda"
        }
      },
      {
        "url": "/handbook/engineering",
        "title": "Engineering",
        "lastModifiedAt": 1654131161000,
        "htmlId": "handbook--engineering--3d16c217e6",
        "sectionRelativeRepoPath": "engineering.md",
        "meta": {
          "maintainedBy": "zwass"
        }
      },
      {
        "url": "/handbook/growth",
        "title": "Growth",
        "lastModifiedAt": 1653591246000,
        "htmlId": "handbook--growth--52ebe31ee1",
        "sectionRelativeRepoPath": "growth.md",
        "meta": {
          "maintainedBy": "timmy-k"
        }
      },
      {
        "url": "/handbook/product",
        "title": "Product",
        "lastModifiedAt": 1651766481000,
        "htmlId": "handbook--product--f606957d6e",
        "sectionRelativeRepoPath": "product.md",
        "meta": {
          "maintainedBy": "noahtalerman"
        }
      },
      {
        "url": "/handbook/security-policies",
        "title": "Security policies",
        "lastModifiedAt": 1654093013000,
        "htmlId": "handbook--security-policies--c325ace36b",
        "sectionRelativeRepoPath": "security-policies.md",
        "meta": {
          "maintainedBy": "guillaumeross"
        }
      },
      {
        "url": "/handbook/handbook",
        "title": "Handbook",
        "lastModifiedAt": 1650424829000,
        "htmlId": "handbook--handbook--f6d8947d98",
        "sectionRelativeRepoPath": "handbook.md",
        "meta": {
          "maintainedBy": "mike-j-thomas"
        }
      },
      {
        "url": "/handbook/sales",
        "title": "Sales",
        "lastModifiedAt": 1653922917000,
        "htmlId": "handbook--sales--2bfc494910",
        "sectionRelativeRepoPath": "sales.md",
        "meta": {
          "maintainedBy": "alexmitchelliii"
        }
      },
      {
        "url": "/handbook/people",
        "title": "People",
        "lastModifiedAt": 1654106064000,
        "htmlId": "handbook--people--cb58f7c222",
        "sectionRelativeRepoPath": "people.md",
        "meta": {
          "maintainedBy": "eashaw"
        }
      },
      {
        "url": "/handbook/security",
        "title": "Security",
        "lastModifiedAt": 1651153035000,
        "htmlId": "handbook--security--56ba09a600",
        "sectionRelativeRepoPath": "security.md",
        "meta": {
          "maintainedBy": "guillaumeross"
        }
      },
      {
        "url": "/engineering/tips-for-github-actions-usability",
        "title": "Tips for github actions usability",
        "lastModifiedAt": 1652667959000,
        "htmlId": "articles--4-tips-for-github-ac--b24b56c8d2",
        "sectionRelativeRepoPath": "4-tips-for-github-actions-usability.md",
        "meta": {
          "category": "engineering",
          "authorGitHubUsername": "zwass",
          "authorFullName": "Zach Wasserman",
          "publishedOn": "2022-01-03",
          "articleTitle": "4 tips for GitHub Actions usability (+2 bonus tips for debugging)",
          "articleImageUrl": "/images/articles/4-tips-for-github-actions-usability-cover-800x450@2x.jpeg"
        }
      },
      {
        "url": "/announcements/a-new-fleet",
        "title": "A new Fleet",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--a-new-fleet--9432c8c243",
        "sectionRelativeRepoPath": "a-new-fleet.md",
        "meta": {
          "category": "announcements",
          "authorGitHubUsername": "zwass",
          "authorFullName": "Zach Wasserman",
          "publishedOn": "2020-01-05",
          "articleTitle": "A new Fleet",
          "articleImageUrl": "/images/articles/a-new-fleet-cover-700x340@2x.jpeg"
        }
      },
      {
        "url": "/securing/apply-byod-to-soothe-supply-chain-pain",
        "title": "Apply byod to soothe supply chain pain",
        "lastModifiedAt": 1653605532000,
        "htmlId": "articles--apply-byod-to-soothe--2d340397d4",
        "sectionRelativeRepoPath": "apply-byod-to-soothe-supply-chain-pain.md",
        "meta": {
          "category": "security",
          "authorGitHubUsername": "GuillaumeRoss",
          "authorFullName": "Guillaume Ross",
          "publishedOn": "2022-02-10",
          "articleTitle": "Apply BYOD to soothe supply chain pain",
          "articleImageUrl": "/images/articles/apply-byod-to-soothe-supply-chain-pain-cover-700x393@2x.png"
        }
      },
      {
        "url": "/use-cases/converting-unix-timestamps-with-osquery",
        "title": "Converting unix timestamps with osquery",
        "lastModifiedAt": 1652664523000,
        "htmlId": "articles--converting-unix-time--d3794671cf",
        "sectionRelativeRepoPath": "converting-unix-timestamps-with-osquery.md",
        "meta": {
          "category": "product",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2021-06-15",
          "articleTitle": "Converting unix timestamps with osquery",
          "articleImageUrl": "/images/articles/converting-unix-timestamps-with-osquery-cover-800x450@2x.jpeg"
        }
      },
      {
        "url": "/use-cases/correlate-network-connections-with-community-id-in-osquery",
        "title": "Correlate network connections with community id in osquery",
        "lastModifiedAt": 1652918877000,
        "htmlId": "articles--correlate-network-co--8c0a52a8b7",
        "sectionRelativeRepoPath": "correlate-network-connections-with-community-id-in-osquery.md",
        "meta": {
          "category": "product",
          "authorFullName": "Zach Wasserman",
          "authorGitHubUsername": "zwass",
          "publishedOn": "2021-06-02",
          "articleTitle": "Correlate network connections with community ID in osquery.",
          "articleImageUrl": "/images/articles/correlate-network-connections-with-community-id-in-osquery-cover-800x502@2x.jpeg"
        }
      },
      {
        "url": "/guides/delivering-data-to-snowflake-from-fleet-and-osquery",
        "title": "Delivering data to snowflake from Fleet and osquery",
        "lastModifiedAt": 1652667959000,
        "htmlId": "articles--delivering-data-to-s--56eb474d05",
        "sectionRelativeRepoPath": "delivering-data-to-snowflake-from-fleet-and-osquery.md",
        "meta": {
          "category": "guides",
          "authorGitHubUsername": "t-lark",
          "authorFullName": "Tom Larkin",
          "publishedOn": "2022-02-01",
          "articleTitle": "Delivering data to Snowflake from Fleet and osquery.",
          "articleImageUrl": "/images/articles/delivering-data-to-snowflake-from-fleet-and-osquery-cover-700x393@2x.png"
        }
      },
      {
        "url": "/guides/deploying-fleet-on-aws-with-terraform",
        "title": "Deploying Fleet on aws with terraform",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--deploying-fleet-on-a--1beaa1d8b0",
        "sectionRelativeRepoPath": "deploying-fleet-on-aws-with-terraform.md",
        "meta": {
          "category": "guides",
          "authorGitHubUsername": "edwardsb",
          "authorFullName": "Ben Edwards",
          "publishedOn": "2021-11-30",
          "articleTitle": "Deploying Fleet on AWS with Terraform",
          "articleImageUrl": "/images/articles/deploying-fleet-on-aws-with-terraform-cover-800x450@2x.png"
        }
      },
      {
        "url": "/guides/deploying-fleet-on-render",
        "title": "Deploying Fleet on render",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--deploying-fleet-on-r--748c8166a7",
        "sectionRelativeRepoPath": "deploying-fleet-on-render.md",
        "meta": {
          "category": "guides",
          "authorGitHubUsername": "edwardsb",
          "authorFullName": "Ben Edwards",
          "publishedOn": "2021-09-21",
          "articleTitle": "Deploying Fleet on Render",
          "articleImageUrl": "/images/articles/deploying-fleet-on-render-cover-800x450@2x.jpeg"
        }
      },
      {
        "url": "/securing/detect-log4j-with-osquery-and-fleet",
        "title": "Detect log4j with osquery and Fleet",
        "lastModifiedAt": 1652667959000,
        "htmlId": "articles--detect-log4j-with-os--c61a73444b",
        "sectionRelativeRepoPath": "detect-log4j-with-osquery-and-fleet.md",
        "meta": {
          "category": "security",
          "authorFullName": "Zach Wasserman",
          "authorGitHubUsername": "zwass",
          "publishedOn": "2021-12-15",
          "articleTitle": "Detect Log4j with osquery (and Fleet)",
          "articleImageUrl": "/images/articles/detect-log4j-with-osquery-and-fleet-cover-800x400@2x.png"
        }
      },
      {
        "url": "/use-cases/ebpf-the-future-of-osquery-on-linux",
        "title": "Ebpf the future of osquery on linux",
        "lastModifiedAt": 1652918836000,
        "htmlId": "articles--ebpf-the-future-of-o--77c10b56a1",
        "sectionRelativeRepoPath": "ebpf-the-future-of-osquery-on-linux.md",
        "meta": {
          "category": "product",
          "authorGitHubUsername": "zwass",
          "authorFullName": "Zach Wasserman",
          "publishedOn": "2021-01-25",
          "articleTitle": "eBPF & the future of osquery on Linux",
          "articleImageUrl": "/images/articles/ebpf-the-future-of-osquery-on-linux-cover-700x394@2x.png"
        }
      },
      {
        "url": "/guides/enrolling-a-digital-ocean-droplet-on-a-fleet-instance",
        "title": "Enrolling a digital ocean droplet on a Fleet instance",
        "lastModifiedAt": 1653600825000,
        "htmlId": "articles--enrolling-a-digital---d6dbc0e8ae",
        "sectionRelativeRepoPath": "enrolling-a-digital-ocean-droplet-on-a-fleet-instance.md",
        "meta": {
          "category": "guides",
          "authorGitHubUsername": "DominusKelvin",
          "authorFullName": "Kelvin Omereshone",
          "publishedOn": "2022-05-26",
          "articleTitle": "Enrolling a DigitalOcean Droplet on a Fleet instance"
        }
      },
      {
        "url": "/releases/fleet-3.10.0",
        "title": "Fleet 3.10.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-3100--28f50d0635",
        "sectionRelativeRepoPath": "fleet-3.10.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-04-01",
          "articleTitle": "Fleet 3.10.0 released with agent auto-updates beta"
        }
      },
      {
        "url": "/releases/fleet-3.11.0",
        "title": "Fleet 3.11.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-3110--e1eec01de4",
        "sectionRelativeRepoPath": "fleet-3.11.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-04-29",
          "articleTitle": "Fleet 3.11.0 released with software inventory"
        }
      },
      {
        "url": "/releases/fleet-3.12.0",
        "title": "Fleet 3.12.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-3120--be0a9edb38",
        "sectionRelativeRepoPath": "fleet-3.12.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-05-20",
          "articleTitle": "Fleet 3.12.0",
          "articleImageUrl": "/images/articles/fleet-3.12.0-cover-700x393@2x.jpg"
        }
      },
      {
        "url": "/releases/fleet-3.13.0",
        "title": "Fleet 3.13.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-3130--4c4edd987b",
        "sectionRelativeRepoPath": "fleet-3.13.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-06-04",
          "articleTitle": "Fleet 3.13.0",
          "articleImageUrl": "/images/articles/fleet-3.13.0-cover-700x437@2x.jpg"
        }
      },
      {
        "url": "/releases/fleet-3.5.0",
        "title": "Fleet 3.5.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-350--98425dffee",
        "sectionRelativeRepoPath": "fleet-3.5.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2020-12-12",
          "articleTitle": "Fleet 3.5.0"
        }
      },
      {
        "url": "/releases/fleet-3.6.0",
        "title": "Fleet 3.6.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-360--1aa44a688f",
        "sectionRelativeRepoPath": "fleet-3.6.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-01-09",
          "articleTitle": "Fleet 3.6.0"
        }
      },
      {
        "url": "/releases/fleet-3.7.1",
        "title": "Fleet 3.7.1",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-371--a6503a6610",
        "sectionRelativeRepoPath": "fleet-3.7.1.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-02-04",
          "articleTitle": "Fleet 3.7.1"
        }
      },
      {
        "url": "/releases/fleet-3.8.0",
        "title": "Fleet 3.8.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-380--32c82d122b",
        "sectionRelativeRepoPath": "fleet-3.8.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-02-26",
          "articleTitle": "Fleet 3.8.0",
          "articleImageUrl": "/images/articles/fleet-3.8.0-cover-960x600@2x.jpg"
        }
      },
      {
        "url": "/releases/fleet-3.9.0",
        "title": "Fleet 3.9.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-390--cd24bc19b2",
        "sectionRelativeRepoPath": "fleet-3.9.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-03-10",
          "articleTitle": "Fleet 3.9.0",
          "articleImageUrl": "/images/articles/fleet-3.9.0-cover-700x437@2x.jpg"
        }
      },
      {
        "url": "/releases/fleet-4.0.0",
        "title": "Fleet 4.0.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-400--095e6ec3ce",
        "sectionRelativeRepoPath": "fleet-4.0.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-06-30",
          "articleTitle": "Fleet 4.0.0 released with Role-based access control and Teams features"
        }
      },
      {
        "url": "/releases/fleet-4.1.0",
        "title": "Fleet 4.1.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-410--c7d0558e02",
        "sectionRelativeRepoPath": "fleet-4.1.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-07-27",
          "articleTitle": "Fleet 4.1.0 released with Schedule and Activity feed features",
          "articleImageUrl": "/images/articles/fleet-4.1.0-cover-700x393@2x.jpg"
        }
      },
      {
        "url": "/releases/fleet-4.10.0",
        "title": "Fleet 4.10.0",
        "lastModifiedAt": 1652919535000,
        "htmlId": "articles--fleet-4100--7469faa0d7",
        "sectionRelativeRepoPath": "fleet-4.10.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2022-02-14",
          "articleTitle": "Fleet 4.10.0 brings new features and improvements for vulnerability analysts.",
          "articleImageUrl": "/images/articles/fleet-4.10.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.11.0",
        "title": "Fleet 4.11.0",
        "lastModifiedAt": 1652919535000,
        "htmlId": "articles--fleet-4110--13df51a1a3",
        "sectionRelativeRepoPath": "fleet-4.11.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2022-03-07",
          "articleTitle": "Fleet 4.11.0 brings impact clarity, improvements to vulnerability processing, and performance updates.",
          "articleImageUrl": "/images/articles/fleet-4.11.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.13.0",
        "title": "Fleet 4.13.0",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--fleet-4130--762f4aaecb",
        "sectionRelativeRepoPath": "fleet-4.13.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Fleet",
          "authorGitHubUsername": "fleetdm",
          "publishedOn": "2022-04-19",
          "articleTitle": "Fleet 4.13.0 | Security fixes, policy automations for teams, and aggregated macOS versions for MacAdmins.",
          "articleImageUrl": "/images/articles/fleet-4.13.0-cover-800x450@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.12.0",
        "title": "Fleet 4.12.0",
        "lastModifiedAt": 1652919535000,
        "htmlId": "articles--fleet-4120--f0500f7244",
        "sectionRelativeRepoPath": "fleet-4.12.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2022-03-25",
          "articleTitle": "Fleet 4.12.0 | Platform-specific policies, and improved query results",
          "articleImageUrl": "/images/articles/fleet-4.12.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.14.0",
        "title": "Fleet 4.14.0",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--fleet-4140--60da2382df",
        "sectionRelativeRepoPath": "fleet-4.14.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Kathy Satterlee",
          "authorGitHubUsername": "ksatter",
          "publishedOn": "2022-05-06",
          "articleTitle": "Fleet 4.14.0 adds beta support for automatic ticket creation and improves the live query experience.",
          "articleImageUrl": "/images/articles/fleet-4.14.0-cover-1600x900@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.15.0",
        "title": "Fleet 4.15.0",
        "lastModifiedAt": 1654111404000,
        "htmlId": "articles--fleet-4150--17b01e403b",
        "sectionRelativeRepoPath": "fleet-4.15.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Kathy Satterlee",
          "authorGitHubUsername": "ksatter",
          "publishedOn": "2022-05-30",
          "articleTitle": "Fleet 4.15.0 adds beta support for Self-service, Scope transparency, and brings Zendesk to the party.",
          "articleImageUrl": "/images/articles/fleet-4.15.0-cover-1600x900@2x.jpg"
        }
      },
      {
        "url": "/releases/fleet-4.2.0",
        "title": "Fleet 4.2.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-420--605c97e592",
        "sectionRelativeRepoPath": "fleet-4.2.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Noah Talerman",
          "authorGitHubUsername": "noahtalerman",
          "publishedOn": "2021-08-12",
          "articleTitle": "Fleet 4.2.0",
          "articleImageUrl": "/images/articles/fleet-4.7.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.3.0",
        "title": "Fleet 4.3.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-430--417d891ab3",
        "sectionRelativeRepoPath": "fleet-4.3.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2021-09-07",
          "articleTitle": "Fleet 4.3.0",
          "articleImageUrl": "/images/articles/fleet-4.3.0-cover-700x393@2x.jpg"
        }
      },
      {
        "url": "/releases/fleet-4.4.0",
        "title": "Fleet 4.4.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-440--4bac272903",
        "sectionRelativeRepoPath": "fleet-4.4.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2021-10-07",
          "articleTitle": "Fleet 4.4.0 releases aggregated software inventory, team policies, and improved team scheduling",
          "articleImageUrl": "/images/articles/fleet-4.4.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.6.0",
        "title": "Fleet 4.6.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-460--3fffe92609",
        "sectionRelativeRepoPath": "fleet-4.6.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2021-11-19",
          "articleTitle": "Fleet 4.6.0 with osquery installer, enroll secret management, and improved host vitals",
          "articleImageUrl": "/images/articles/fleet-4.6.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.5.0",
        "title": "Fleet 4.5.0",
        "lastModifiedAt": 1654106046000,
        "htmlId": "articles--fleet-450--0cb05ce5ef",
        "sectionRelativeRepoPath": "fleet-4.5.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2021-11-02",
          "articleTitle": "Fleet 4.5.0 with new team admin role, live OS compatibility checking, query performance impact, and a new-look dashboard",
          "articleImageUrl": "/images/articles/fleet-4.5.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.7.0",
        "title": "Fleet 4.7.0",
        "lastModifiedAt": 1652919535000,
        "htmlId": "articles--fleet-470--e2c13a41d3",
        "sectionRelativeRepoPath": "fleet-4.7.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2021-12-14",
          "articleTitle": "Does Fleet 4.7.0 bring more power to your osquery compliance policies? Yes.",
          "articleImageUrl": "/images/articles/fleet-4.7.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.8.0",
        "title": "Fleet 4.8.0",
        "lastModifiedAt": 1652919535000,
        "htmlId": "articles--fleet-480--cfa068046a",
        "sectionRelativeRepoPath": "fleet-4.8.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Drew Baker",
          "authorGitHubUsername": "DrewBakerfdm",
          "publishedOn": "2021-12-31",
          "articleTitle": "Looking for policy automations, Google Chrome profile search, and Munki details from your hosts? Upgrade to Fleet 4.8.0",
          "articleImageUrl": "/images/articles/fleet-4.8.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/releases/fleet-4.9.0",
        "title": "Fleet 4.9.0",
        "lastModifiedAt": 1652919535000,
        "htmlId": "articles--fleet-490--7dc4e3623f",
        "sectionRelativeRepoPath": "fleet-4.9.0.md",
        "meta": {
          "category": "releases",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2022-01-24",
          "articleTitle": "Fleet 4.9.0 brings performance updates, paginated live query results, and policy YAML doc support.",
          "articleImageUrl": "/images/articles/fleet-4.9.0-cover-700x393@2x.png"
        }
      },
      {
        "url": "/use-cases/fleet-quick-tips-querying-procdump-eula-has-been-accepted",
        "title": "Fleet quick tips querying procdump eula has been accepted",
        "lastModifiedAt": 1652918836000,
        "htmlId": "articles--fleet-quick-tips-que--03bd6acb28",
        "sectionRelativeRepoPath": "fleet-quick-tips-querying-procdump-eula-has-been-accepted.md",
        "meta": {
          "category": "product",
          "authorGitHubUsername": "mike-j-thomas",
          "authorFullName": "Mike Thomas",
          "publishedOn": "2021-05-11",
          "articleTitle": "Fleet quick tips — identify systems where the ProcDump EULA has been accepted",
          "articleImageUrl": "/images/articles/fleet-quick-tips-querying-procdump-eula-has-been-accepted-cover-700x440@2x.png"
        }
      },
      {
        "url": "/device-management/fleet-user-stories-f100",
        "title": "Fleet user stories f100",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--fleet-user-stories-f--b5e12c75dc",
        "sectionRelativeRepoPath": "fleet-user-stories-f100.md",
        "meta": {
          "category": "success stories",
          "authorGitHubUsername": "mike-j-thomas",
          "authorFullName": "Mike Thomas",
          "publishedOn": "2021-09-29",
          "articleTitle": "Fleet user stories — F100",
          "articleImageUrl": "/images/articles/fleet-user-stories-f100-cover-800x450@2x.jpeg"
        }
      },
      {
        "url": "/device-management/fleet-user-stories-schrodinger",
        "title": "Fleet user stories schrodinger",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--fleet-user-stories-s--fbf6b95784",
        "sectionRelativeRepoPath": "fleet-user-stories-schrodinger.md",
        "meta": {
          "category": "success stories",
          "authorGitHubUsername": "mike-j-thomas",
          "authorFullName": "Mike Thomas",
          "publishedOn": "2021-09-10",
          "articleTitle": "Fleet user stories — Schrödinger",
          "articleImageUrl": "/images/articles/fleet-user-stories-schrodinger-cover-800x450@2x.jpeg"
        }
      },
      {
        "url": "/device-management/fleet-user-stories-wayfair",
        "title": "Fleet user stories wayfair",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--fleet-user-stories-w--02fd4a1643",
        "sectionRelativeRepoPath": "fleet-user-stories-wayfair.md",
        "meta": {
          "category": "success stories",
          "authorGitHubUsername": "mike-j-thomas",
          "authorFullName": "Mike Thomas",
          "publishedOn": "2021-08-20",
          "articleTitle": "Fleet user stories — Wayfair",
          "articleImageUrl": "/images/articles/fleet-user-stories-wayfair-cover-800x450@2x.jpeg"
        }
      },
      {
        "url": "/announcements/from-osquery-to-fleet-planting-the-seed",
        "title": "From osquery to Fleet planting the seed",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--from-osquery-to-flee--df489ce739",
        "sectionRelativeRepoPath": "from-osquery-to-fleet-planting-the-seed.md",
        "meta": {
          "category": "announcements",
          "authorGitHubUsername": "zwass",
          "authorFullName": "Zach Wasserman",
          "publishedOn": "2022-01-20",
          "articleTitle": "The next step for Fleet: our $5M seed round 🌱",
          "articleImageUrl": "/images/articles/from-osquery-to-fleet-planting-the-seed-cover-800x450@2x.png"
        }
      },
      {
        "url": "/use-cases/generate-process-trees-with-osquery",
        "title": "Generate process trees with osquery",
        "lastModifiedAt": 1652918836000,
        "htmlId": "articles--generate-process-tre--22db1801e7",
        "sectionRelativeRepoPath": "generate-process-trees-with-osquery.md",
        "meta": {
          "category": "product",
          "authorGitHubUsername": "zwass",
          "authorFullName": "Zach Wasserman",
          "publishedOn": "2020-03-17",
          "articleTitle": "Generate process trees with osquery",
          "articleImageUrl": "/images/articles/generate-process-trees-with-osquery-cover-700x393@2x.jpeg"
        }
      },
      {
        "url": "/use-cases/get-and-stay-compliant-across-your-devices-with-fleet",
        "title": "Get and stay compliant across your devices with Fleet",
        "lastModifiedAt": 1652664523000,
        "htmlId": "articles--get-and-stay-complia--61439fe4ca",
        "sectionRelativeRepoPath": "get-and-stay-compliant-across-your-devices-with-fleet.md",
        "meta": {
          "category": "product",
          "authorFullName": "Drew Baker",
          "authorGitHubUsername": "DrewBakerfdm",
          "publishedOn": "2022-03-09",
          "articleTitle": "Get and stay compliant across your devices with Fleet.",
          "articleImageUrl": "/images/articles/get-and-stay-compliant-across-your-devices-with-fleet-cover-700x385@2x.png"
        }
      },
      {
        "url": "/announcements/happy-1st-anniversary-fleet",
        "title": "Happy 1st anniversary Fleet",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--happy-1st-anniversar--991f775ee7",
        "sectionRelativeRepoPath": "happy-1st-anniversary-fleet.md",
        "meta": {
          "category": "announcements",
          "authorGitHubUsername": "mike-j-thomas",
          "authorFullName": "Mike Thomas",
          "publishedOn": "2021-10-08",
          "articleTitle": "Happy 1st anniversary, Fleet.",
          "articleImageUrl": "/images/articles/happy-1st-anniversary-fleet-cover-800x450@2x.png"
        }
      },
      {
        "url": "/guides/how-to-install-osquery-and-enroll-macos-devices-into-fleet",
        "title": "How to install osquery and enroll macos devices into Fleet",
        "lastModifiedAt": 1653605532000,
        "htmlId": "articles--how-to-install-osque--9ea7d81425",
        "sectionRelativeRepoPath": "how-to-install-osquery-and-enroll-macos-devices-into-fleet.md",
        "meta": {
          "category": "guides",
          "authorFullName": "Kelvin Omereshone",
          "authorGitHubUsername": "dominuskelvin",
          "publishedOn": "2022-01-13",
          "articleTitle": "How to install osquery and enroll macOS devices into Fleet",
          "articleImageUrl": "/images/articles/install-osquery-and-enroll-macos-devices-into-fleet-cover@2x.jpg"
        }
      },
      {
        "url": "/guides/how-to-install-osquery-and-enroll-linux-devices-into-fleet",
        "title": "How to install osquery and enroll linux devices into Fleet",
        "lastModifiedAt": 1653605532000,
        "htmlId": "articles--how-to-install-osque--df7e1e072c",
        "sectionRelativeRepoPath": "how-to-install-osquery-and-enroll-linux-devices-into-fleet.md",
        "meta": {
          "category": "guides",
          "authorFullName": "Katheryn Satterlee",
          "authorGitHubUsername": "ksatter",
          "publishedOn": "2022-03-19",
          "articleTitle": "How to install osquery and enroll Linux devices into Fleet",
          "articleImageUrl": "/images/articles/install-osquery-and-enroll-linux-devices-into-fleet-cover@2x.jpg"
        }
      },
      {
        "url": "/guides/how-to-install-osquery-and-enroll-windows-devices-into-fleet",
        "title": "How to install osquery and enroll windows devices into Fleet",
        "lastModifiedAt": 1653624600000,
        "htmlId": "articles--how-to-install-osque--823c6872fb",
        "sectionRelativeRepoPath": "how-to-install-osquery-and-enroll-windows-devices-into-fleet.md",
        "meta": {
          "category": "guides",
          "authorFullName": "Kelvin Omereshone",
          "authorGitHubUsername": "dominuskelvin",
          "publishedOn": "2022-02-03",
          "articleTitle": "How to install osquery and enroll Windows devices into Fleet",
          "articleImageUrl": "/images/articles/install-osquery-and-enroll-windows-devices-into-fleet-cover@2x.jpg"
        }
      },
      {
        "url": "/guides/how-to-uninstall-osquery",
        "title": "How to uninstall osquery",
        "lastModifiedAt": 1652667959000,
        "htmlId": "articles--how-to-uninstall-osq--d2a1aa5379",
        "sectionRelativeRepoPath": "how-to-uninstall-osquery.md",
        "meta": {
          "category": "guides",
          "authorFullName": "Eric Shaw",
          "authorGitHubUsername": "eashaw",
          "publishedOn": "2021-11-08",
          "articleTitle": "How to uninstall osquery",
          "articleImageUrl": "/images/articles/how-to-uninstall-osquery-cover-700x393@2x.png"
        }
      },
      {
        "url": "/use-cases/import-and-export-queries-and-packs-in-fleet",
        "title": "Import and export queries and packs in Fleet",
        "lastModifiedAt": 1652918836000,
        "htmlId": "articles--import-and-export-qu--dbf6e440f8",
        "sectionRelativeRepoPath": "import-and-export-queries-and-packs-in-fleet.md",
        "meta": {
          "category": "product",
          "authorGitHubUsername": "noahtalerman",
          "authorFullName": "Noah Talerman",
          "publishedOn": "2021-02-16",
          "articleTitle": "Import and export queries and packs in Fleet",
          "articleImageUrl": "/images/articles/import-and-export-queries-and-packs-in-fleet-cover-700x343@2x.png"
        }
      },
      {
        "url": "/use-cases/locate-assets-with-osquery",
        "title": "Locate assets with osquery",
        "lastModifiedAt": 1652918836000,
        "htmlId": "articles--locate-assets-with-o--ffdc9147d4",
        "sectionRelativeRepoPath": "locate-assets-with-osquery.md",
        "meta": {
          "category": "product",
          "authorGitHubUsername": "zwass",
          "authorFullName": "Zach Wasserman",
          "publishedOn": "2021-05-11",
          "articleTitle": "Locate device assets in the event of an emergency.",
          "articleImageUrl": "/images/articles/locate-assets-with-osquery-cover-700x393@2x.jpeg"
        }
      },
      {
        "url": "/use-cases/osquery-a-tool-to-easily-ask-questions-about-operating-systems",
        "title": "Osquery a tool to easily ask questions about operating systems",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--osquery-a-tool-to-ea--a719a65ef5",
        "sectionRelativeRepoPath": "osquery-a-tool-to-easily-ask-questions-about-operating-systems.md",
        "meta": {
          "category": "product",
          "authorGitHubUsername": "dominuskelvin",
          "authorFullName": "Kelvin Omereshone",
          "publishedOn": "2022-04-04",
          "articleTitle": "Osquery: a tool to easily ask questions about operating systems",
          "articleImageUrl": "/images/articles/osquery-a-tool-to-easily-ask-questions-about-operating-systems-cover-800x450@2x.png"
        }
      },
      {
        "url": "/use-cases/osquery-consider-joining-against-the-users-table",
        "title": "Osquery consider joining against the users table",
        "lastModifiedAt": 1652918836000,
        "htmlId": "articles--osquery-consider-joi--1d48cf4fb8",
        "sectionRelativeRepoPath": "osquery-consider-joining-against-the-users-table.md",
        "meta": {
          "category": "product",
          "authorGitHubUsername": "zwass",
          "authorFullName": "Zach Wasserman",
          "publishedOn": "2021-05-06",
          "articleTitle": "Osquery: Consider joining against the users table",
          "articleImageUrl": "/images/articles/osquery-consider-joining-against-the-users-table-cover-700x437@2x.jpeg"
        }
      },
      {
        "url": "/engineering/saving-over-100x-on-egress-switching-from-aws-to-hetzner",
        "title": "Saving over 100x on egress switching from aws to hetzner",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--saving-over-100x-on---bca2d968c2",
        "sectionRelativeRepoPath": "saving-over-100x-on-egress-switching-from-aws-to-hetzner.md",
        "meta": {
          "category": "engineering",
          "authorGitHubUsername": "zwass",
          "authorFullName": "Zach Wasserman",
          "publishedOn": "2022-01-25",
          "articleTitle": "Saving over 100x on egress switching from AWS to Hetzner",
          "articleImageUrl": "/images/articles/saving-over-100x-on-egress-switching-from-aws-to-hetzner-cover-800x533@2x.jpeg"
        }
      },
      {
        "url": "/securing/security-testing-at-fleet-fleet-pentest",
        "title": "Security testing at Fleet Fleet pentest",
        "lastModifiedAt": 1652804551000,
        "htmlId": "articles--security-testing-at---b8f92bc14f",
        "sectionRelativeRepoPath": "security-testing-at-fleet-fleet-pentest.md",
        "meta": {
          "category": "security",
          "authorGitHubUsername": "GuillaumeRoss",
          "authorFullName": "Guillaume Ross",
          "publishedOn": "2022-05-10",
          "articleTitle": "Penetration testing of Fleet (April 2022)"
        }
      },
      {
        "url": "/securing/security-testing-at-fleet-orbit-auto-updater-audit",
        "title": "Security testing at Fleet orbit auto updater audit",
        "lastModifiedAt": 1651126567000,
        "htmlId": "articles--security-testing-at---fd9746574c",
        "sectionRelativeRepoPath": "security-testing-at-fleet-orbit-auto-updater-audit.md",
        "meta": {
          "category": "security",
          "authorGitHubUsername": "GuillaumeRoss",
          "authorFullName": "Guillaume Ross",
          "publishedOn": "2022-03-30",
          "articleTitle": "Security testing at Fleet/Orbit auto-updater audit"
        }
      },
      {
        "url": "/securing/tales-from-fleet-security-securing-1password",
        "title": "Tales from Fleet security securing 1password",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--tales-from-fleet-sec--ef78d63841",
        "sectionRelativeRepoPath": "tales-from-fleet-security-securing-1password.md",
        "meta": {
          "category": "security",
          "authorFullName": "Guillaume Ross",
          "authorGitHubUsername": "GuillaumeRoss",
          "publishedOn": "2022-05-06",
          "articleTitle": "Tales from Fleet security: securing 1Password",
          "articleImageUrl": "/images/articles/tales-from-fleet-security-securing-1password-cover-1600x900@2x.png"
        }
      },
      {
        "url": "/securing/tales-from-fleet-security-securing-google-workspace",
        "title": "Tales from Fleet security securing google workspace",
        "lastModifiedAt": 1652664107000,
        "htmlId": "articles--tales-from-fleet-sec--45a16fe510",
        "sectionRelativeRepoPath": "tales-from-fleet-security-securing-google-workspace.md",
        "meta": {
          "category": "security",
          "authorFullName": "Guillaume Ross",
          "authorGitHubUsername": "GuillaumeRoss",
          "publishedOn": "2022-03-25",
          "articleTitle": "Tales from Fleet security: securing Google Workspace"
        }
      },
      {
        "url": "/securing/tales-from-fleet-security-securing-the-startup",
        "title": "Tales from Fleet security securing the startup",
        "lastModifiedAt": 1652667959000,
        "htmlId": "articles--tales-from-fleet-sec--2b3c639bdf",
        "sectionRelativeRepoPath": "tales-from-fleet-security-securing-the-startup.md",
        "meta": {
          "category": "security",
          "authorFullName": "Guillaume Ross",
          "authorGitHubUsername": "GuillaumeRoss",
          "publishedOn": "2022-03-17",
          "articleTitle": "Tales from Fleet security: securing the startup"
        }
      },
      {
        "url": "/use-cases/using-elasticsearch-and-kibana-to-visualize-osquery-performance",
        "title": "Using elasticsearch and kibana to visualize osquery performance",
        "lastModifiedAt": 1652918877000,
        "htmlId": "articles--using-elasticsearch---5677cbe562",
        "sectionRelativeRepoPath": "using-elasticsearch-and-kibana-to-visualize-osquery-performance.md",
        "meta": {
          "category": "product",
          "authorFullName": "Zach Wasserman",
          "authorGitHubUsername": "zwass",
          "publishedOn": "2021-05-26",
          "articleTitle": "Using Elasticsearch and Kibana to visualize osquery performance",
          "articleImageUrl": "/images/articles/using-elasticsearch-and-kibana-to-visualize-osquery-performance-cover-700x393@2x.jpeg"
        }
      },
      {
        "url": "/securing/what-are-fleet-policies",
        "title": "What are Fleet policies",
        "lastModifiedAt": 1653082808000,
        "htmlId": "articles--what-are-fleet-polic--9e5011ee43",
        "sectionRelativeRepoPath": "what-are-fleet-policies.md",
        "meta": {
          "category": "security",
          "authorGitHubUsername": "DrewBakerfdm",
          "authorFullName": "Andrew Baker",
          "publishedOn": "2022-05-20",
          "articleTitle": "What are Fleet policies?",
          "articleImageUrl": "/images/articles/get-and-stay-compliant-across-your-devices-with-fleet-1-700x523@2x.jpeg"
        }
      },
      {
        "url": "/use-cases/work-may-be-watching-but-it-might-not-be-as-bad-as-you-think",
        "title": "Work may be watching but it might not be as bad as you think",
        "lastModifiedAt": 1652664523000,
        "htmlId": "articles--work-may-be-watching--58a05cf17d",
        "sectionRelativeRepoPath": "work-may-be-watching-but-it-might-not-be-as-bad-as-you-think.md",
        "meta": {
          "category": "product",
          "authorFullName": "Mike Thomas",
          "authorGitHubUsername": "mike-j-thomas",
          "publishedOn": "2021-10-22",
          "articleTitle": "Work may be watching, but it might not be as bad as you think.",
          "articleImageUrl": "/images/articles/work-may-be-watching-but-it-might-not-be-as-bad-as-you-think-cover-800x502@2x.png"
        }
      }
    ],
    "queries": [
      {
        "name": "Get OpenSSL versions",
        "platforms": "Linux",
        "description": "Retrieves the OpenSSL version.",
        "query": "SELECT name AS name, version AS version, 'deb_packages' AS source FROM deb_packages WHERE name LIKE 'openssl%' UNION SELECT name AS name, version AS version, 'apt_sources' AS source FROM apt_sources WHERE name LIKE 'openssl%' UNION SELECT name AS name, version AS version, 'rpm_packages' AS source FROM rpm_packages WHERE name LIKE 'openssl%';",
        "purpose": "Informational",
        "tags": [
          "inventory"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-open-ssl-versions",
        "resolution": "N/A"
      },
      {
        "name": "Get authorized SSH keys",
        "platforms": "macOS, Linux",
        "description": "Presence of authorized SSH keys may be unusual on laptops. Could be completely normal on servers, but may be worth auditing for unusual keys and/or changes.",
        "query": "SELECT username, authorized_keys. * FROM users CROSS JOIN authorized_keys USING (uid);",
        "purpose": "Informational",
        "remediation": "Check out the linked table (https://github.com/fleetdm/fleet/blob/32b4d53e7f1428ce43b0f9fa52838cbe7b413eed/handbook/queries/detect-hosts-with-high-severity-vulnerable-versions-of-openssl.md#table-of-vulnerable-openssl-versions) to determine if the installed version is a high severity vulnerability and view the corresponding CVE(s)",
        "tags": [
          "built-in",
          "ssh"
        ],
        "contributors": [
          {
            "name": "Mike Thomas",
            "handle": "mike-j-thomas",
            "avatarUrl": "https://avatars.githubusercontent.com/u/78363703?v=4",
            "htmlUrl": "https://github.com/mike-j-thomas"
          }
        ],
        "kind": "query",
        "slug": "get-authorized-ssh-keys",
        "resolution": "N/A"
      },
      {
        "name": "Get authorized keys for Domain Joined Accounts",
        "platforms": "macOS, Linux",
        "description": "List authorized_keys for each user on the system.",
        "query": "SELECT *  FROM users CROSS JOIN  authorized_keys USING(uid) WHERE  username IN (SELECT distinct(username) FROM last);",
        "purpose": "Informational",
        "tags": [
          "active directory",
          "ssh"
        ],
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-authorized-keys-for-domain-joined-accounts",
        "resolution": "N/A"
      },
      {
        "name": "Get crashes",
        "platforms": "macOS",
        "description": "Retrieve application, system, and mobile app crash logs.",
        "query": "SELECT uid, datetime, responsible, exception_type, identifier, version, crash_path FROM users CROSS JOIN crashes USING (uid);",
        "purpose": "Informational",
        "tags": [
          "troubleshooting"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-crashes",
        "resolution": "N/A"
      },
      {
        "name": "Get installed Chrome Extensions",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "List installed Chrome Extensions for all users.",
        "query": "SELECT * FROM users CROSS JOIN chrome_extensions USING (uid);",
        "purpose": "Informational",
        "tags": [
          "browser",
          "built-in",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-installed-chrome-extensions",
        "resolution": "N/A"
      },
      {
        "name": "Get installed FreeBSD software",
        "platforms": "FreeBSD",
        "description": "Get all software installed on a FreeBSD computer, including browser plugins and installed packages. Note that this does not include other running processes in the processes table.",
        "query": "SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Package (pkg)' AS type, 'pkg_packages' AS source FROM pkg_packages;",
        "purpose": "Informational",
        "tags": [
          "inventory"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-installed-free-bsd-software",
        "resolution": "N/A"
      },
      {
        "name": "Get installed Linux software",
        "platforms": "Linux",
        "description": "Get all software installed on a Linux computer, including browser plugins and installed packages. Note that this does not include other running processes in the processes table.",
        "query": "SELECT name AS name, version AS version, 'Package (APT)' AS type, 'apt_sources' AS source FROM apt_sources UNION SELECT name AS name, version AS version, 'Package (deb)' AS type, 'deb_packages' AS source FROM deb_packages UNION SELECT package AS name, version AS version, 'Package (Portage)' AS type, 'portage_packages' AS source FROM portage_packages UNION SELECT name AS name, version AS version, 'Package (RPM)' AS type, 'rpm_packages' AS source FROM rpm_packages UNION SELECT name AS name, '' AS version, 'Package (YUM)' AS type, 'yum_sources' AS source FROM yum_sources UNION SELECT name AS name, version AS version, 'Package (NPM)' AS type, 'npm_packages' AS source FROM npm_packages UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages;",
        "purpose": "Informational",
        "tags": [
          "inventory",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-installed-linux-software",
        "resolution": "N/A"
      },
      {
        "name": "Get installed macOS software",
        "platforms": "macOS",
        "description": "Get all software installed on a macOS computer, including apps, browser plugins, and installed packages. Note that this does not include other running processes in the processes table.",
        "query": "SELECT name AS name, bundle_short_version AS version, 'Application (macOS)' AS type, 'apps' AS source FROM apps UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name As name, version AS version, 'Browser plugin (Safari)' AS type, 'safari_extensions' AS source FROM safari_extensions UNION SELECT name AS name, version AS version, 'Package (Homebrew)' AS type, 'homebrew_packages' AS source FROM homebrew_packages;",
        "purpose": "Informational",
        "tags": [
          "inventory",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-installed-mac-os-software",
        "resolution": "N/A"
      },
      {
        "name": "Get installed Safari extensions",
        "platforms": "macOS",
        "description": "Retrieves the list of installed Safari Extensions for all users in the target system.",
        "query": "SELECT safari_extensions.* FROM users join safari_extensions USING (uid);",
        "purpose": "Informational",
        "tags": [
          "browser",
          "built-in",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-installed-safari-extensions",
        "resolution": "N/A"
      },
      {
        "name": "Get installed Windows software",
        "platforms": "Windows",
        "description": "Get all software installed on a Windows computer, including programs, browser plugins, and installed packages. Note that this does not include other running processes in the processes table.",
        "query": "SELECT name AS name, version AS version, 'Program (Windows)' AS type, 'programs' AS source FROM programs UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Browser plugin (IE)' AS type, 'ie_extensions' AS source FROM ie_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name AS name, version AS version, 'Package (Chocolatey)' AS type, 'chocolatey_packages' AS source FROM chocolatey_packages UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages;",
        "purpose": "Informational",
        "tags": [
          "inventory",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-installed-windows-software",
        "resolution": "N/A"
      },
      {
        "name": "Get laptops with failing batteries",
        "platforms": "macOS",
        "description": "Lists all laptops with under-performing or failing batteries.",
        "query": "SELECT * FROM battery WHERE health != 'Good' AND condition NOT IN ('', 'Normal');",
        "purpose": "Informational",
        "tags": [
          "troubleshooting",
          "hardware",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          }
        ],
        "kind": "query",
        "slug": "get-laptops-with-failing-batteries",
        "resolution": "N/A"
      },
      {
        "name": "Get current users with active shell/console on the system",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Get current users with active shell/console on the system and associated process",
        "query": "SELECT user,host,time, p.name, p.cmdline, p.cwd, p.root FROM logged_in_users liu, processes p WHERE liu.pid = p.pid and liu.type='user' and liu.user <> '' ORDER BY time;",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-current-users-with-active-shell-console-on-the-system",
        "resolution": "N/A"
      },
      {
        "name": "Get unencrypted SSH keys for local accounts",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Identify SSH keys created without a passphrase which can be used in Lateral Movement (MITRE. TA0008)",
        "query": "SELECT uid, username, description, path, encrypted FROM users CROSS JOIN user_ssh_keys using (uid) WHERE encrypted=0;",
        "purpose": "Informational",
        "tags": [
          "inventory",
          "compliance",
          "ssh",
          "built-in"
        ],
        "remediation": "First, make the user aware about the impact of SSH keys.  Then rotate the unencrypted keys detected.",
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-unencrypted-ssh-keys-for-local-accounts",
        "resolution": "N/A"
      },
      {
        "name": "Get unencrypted SSH keys for domain-joined accounts",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Identify SSH keys created without a passphrase which can be used in Lateral Movement (MITRE. TA0008)",
        "query": "SELECT uid, username, description, path, encrypted FROM users CROSS JOIN user_ssh_keys using (uid) WHERE encrypted=0 and username in (SELECT distinct(username) FROM last);",
        "purpose": "Informational",
        "tags": [
          "inventory",
          "compliance",
          "ssh",
          "active directory"
        ],
        "remediation": "First, make the user aware about the impact of SSH keys.  Then rotate the unencrypted keys detected.",
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-unencrypted-ssh-keys-for-domain-joined-accounts",
        "resolution": "N/A"
      },
      {
        "name": "Get dynamic linker hijacking on Linux (MITRE. T1574.006)",
        "platforms": "Linux",
        "description": "Detect any processes that run with LD_PRELOAD environment variable",
        "query": "SELECT env.pid, env.key, env.value, p.name,p.path, p.cmdline, p.cwd FROM process_envs env join processes p USING (pid) WHERE key='LD_PRELOAD';",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "attack",
          "t1574"
        ],
        "remediation": "Identify the process/binary detected and confirm with the system's owner.",
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-dynamic-linker-hijacking-on-linux-mitre-t-1574-006",
        "resolution": "N/A"
      },
      {
        "name": "Get dynamic linker hijacking on macOS (MITRE. T1574.006)",
        "platforms": "macOS",
        "description": "Detect any processes that run with DYLD_INSERT_LIBRARIES environment variable",
        "query": "SELECT env.pid, env.key, env.value, p.name,p.path, p.cmdline, p.cwd FROM process_envs env join processes p USING (pid) WHERE key='DYLD_INSERT_LIBRARIES';",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "attack",
          "t1574"
        ],
        "remediation": "Identify the process/binary detected and confirm with the system's owner.",
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-dynamic-linker-hijacking-on-mac-os-mitre-t-1574-006",
        "resolution": "N/A"
      },
      {
        "name": "Get etc hosts entries",
        "platforms": "macOS, Linux",
        "description": "Line-parsed /etc/hosts",
        "query": "SELECT * FROM etc_hosts WHERE address not in ('127.0.0.1', '::1');",
        "purpose": "informational",
        "tags": [
          "hunting",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-etc-hosts-entries",
        "resolution": "N/A"
      },
      {
        "name": "Get network interfaces",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Network interfaces MAC address",
        "query": "SELECT a.interface, a.address, d.mac FROM interface_addresses a JOIN interface_details d USING (interface) WHERE address not in ('127.0.0.1', '::1');",
        "purpose": "informational",
        "tags": [
          "hunting",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-network-interfaces",
        "resolution": "N/A"
      },
      {
        "name": "Get local user accounts",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Local user accounts (including domain accounts that have logged on locally (Windows)).",
        "query": "SELECT uid, gid, username, description, directory, shell FROM users;",
        "purpose": "informational",
        "tags": [
          "hunting",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-local-user-accounts",
        "resolution": "N/A"
      },
      {
        "name": "Get active user accounts on servers",
        "platforms": "Linux",
        "description": "Domain Joined environments normally have root or other service only account and users are SSH-ing using their Domain Accounts.",
        "query": "SELECT * FROM shadow WHERE password_status='active' and username!='root';",
        "purpose": "informational",
        "tags": [
          "hunting",
          "inventory",
          "active directory"
        ],
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-active-user-accounts-on-servers",
        "resolution": "N/A"
      },
      {
        "name": "Get Nmap scanner",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Get Nmap scanner process, as well as its user, parent, and process details.",
        "query": "SELECT p.pid, name, p.path, cmdline, cwd, start_time, parent, (SELECT name FROM processes WHERE pid=p.parent) AS parent_name, (SELECT username FROM users WHERE uid=p.uid) AS username FROM processes as p WHERE cmdline like 'nmap%';",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "attack",
          "t1046"
        ],
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-nmap-scanner",
        "resolution": "N/A"
      },
      {
        "name": "Get Docker contained processes on a system",
        "platforms": "macOS, Linux",
        "description": "Docker containers Processes, can be used on normal system or a kubenode.",
        "query": "SELECT c.id, c.name, c.image, c.image_id, c.command, c.created, c.state, c.status, p.cmdline  FROM docker_containers c CROSS JOIN docker_container_processes p using(id);",
        "purpose": "Informational",
        "tags": [
          "built-in",
          "containers",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Ahmed Elshaer",
            "handle": "anelshaer",
            "avatarUrl": "https://avatars.githubusercontent.com/u/4087461?v=4",
            "htmlUrl": "https://github.com/anelshaer"
          }
        ],
        "kind": "query",
        "slug": "get-docker-contained-processes-on-a-system",
        "resolution": "N/A"
      },
      {
        "name": "Get Windows print spooler remote code execution vulnerability",
        "platforms": "Windows",
        "description": "Detects devices that are potentially vulnerable to CVE-2021-1675 because the print spooler service is not disabled.",
        "query": "SELECT CASE cnt WHEN 2 THEN \"TRUE\" ELSE \"FALSE\" END \"Vulnerable\" FROM (SELECT name start_type, COUNT(name) AS cnt FROM services WHERE name = 'NTDS' or (name = 'Spooler' and start_type <> 'DISABLED')) WHERE cnt = 2;",
        "purpose": "Informational",
        "tags": [
          "vulnerability"
        ],
        "contributors": [
          {
            "name": null,
            "handle": "maravedi",
            "avatarUrl": "https://avatars.githubusercontent.com/u/9169890?v=4",
            "htmlUrl": "https://github.com/maravedi"
          }
        ],
        "kind": "query",
        "slug": "get-windows-print-spooler-remote-code-execution-vulnerability",
        "resolution": "N/A"
      },
      {
        "name": "Get local users and their privileges",
        "platforms": "macOS, Linux, Windows",
        "description": "Collects the local user accounts and their respective user group.",
        "query": "SELECT uid, username, type, groupname FROM users u JOIN groups g ON g.gid = u.gid;",
        "purpose": "informational",
        "tags": [
          "inventory"
        ],
        "contributors": [
          {
            "name": "Noah Talerman",
            "handle": "noahtalerman",
            "avatarUrl": "https://avatars.githubusercontent.com/u/47070608?v=4",
            "htmlUrl": "https://github.com/noahtalerman"
          }
        ],
        "kind": "query",
        "slug": "get-local-users-and-their-privileges",
        "resolution": "N/A"
      },
      {
        "name": "Get processes that no longer exist on disk",
        "platforms": "Linux, macOS, Windows",
        "description": "Lists all processes of which the binary which launched them no longer exists on disk. Attackers often delete files from disk after launching process to mask presence.",
        "query": "SELECT name, path, pid FROM processes WHERE on_disk = 0;",
        "purpose": "Incident response",
        "tags": [
          "hunting",
          "built-in"
        ],
        "contributors": [
          {
            "name": "AndrewB",
            "handle": "alphabrevity",
            "avatarUrl": "https://avatars.githubusercontent.com/u/3847973?v=4",
            "htmlUrl": "https://github.com/alphabrevity"
          }
        ],
        "kind": "query",
        "slug": "get-processes-that-no-longer-exist-on-disk",
        "resolution": "N/A"
      },
      {
        "name": "Get user files matching a specific hash",
        "platforms": "macOS, Linux",
        "description": "Looks for specific hash in the Users/ directories for files that are less than 50MB (osquery file size limitation.)",
        "query": "SELECT path, sha256 FROM hash WHERE path IN (SELECT path FROM file WHERE size < 50000000 AND path LIKE '/Users/%/Documents/%%') AND sha256 = '16d28cd1d78b823c4f961a6da78d67a8975d66cde68581798778ed1f98a56d75';",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "built-in"
        ],
        "contributors": [
          {
            "name": "AndrewB",
            "handle": "alphabrevity",
            "avatarUrl": "https://avatars.githubusercontent.com/u/3847973?v=4",
            "htmlUrl": "https://github.com/alphabrevity"
          }
        ],
        "kind": "query",
        "slug": "get-user-files-matching-a-specific-hash",
        "resolution": "N/A"
      },
      {
        "name": "Get local administrator accounts on macOS",
        "platforms": "macOS",
        "description": "The query allows you to check macOS systems for local administrator accounts.",
        "query": "SELECT uid, username, type, group name FROM users u JOIN groups g ON g.gid = u.gid;",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "inventory"
        ],
        "contributors": [
          {
            "name": "AndrewB",
            "handle": "alphabrevity",
            "avatarUrl": "https://avatars.githubusercontent.com/u/3847973?v=4",
            "htmlUrl": "https://github.com/alphabrevity"
          }
        ],
        "kind": "query",
        "slug": "get-local-administrator-accounts-on-mac-os",
        "resolution": "N/A"
      },
      {
        "name": "Get all listening ports, by process",
        "platforms": "Linux, macOS, Windows",
        "description": "List ports that are listening on all interfaces, along with the process to which they are attached.",
        "query": "SELECT lp.address, lp.pid, lp.port, lp.protocol, p.name, p.path, p.cmdline FROM listening_ports lp JOIN processes p ON lp.pid = p.pid WHERE lp.address = \"0.0.0.0\";",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "network"
        ],
        "contributors": [
          {
            "name": "AndrewB",
            "handle": "alphabrevity",
            "avatarUrl": "https://avatars.githubusercontent.com/u/3847973?v=4",
            "htmlUrl": "https://github.com/alphabrevity"
          }
        ],
        "kind": "query",
        "slug": "get-all-listening-ports-by-process",
        "resolution": "N/A"
      },
      {
        "name": "Get whether TeamViewer is installed/running",
        "platforms": "Windows",
        "description": "Looks for the TeamViewer service running on machines. This is often used when attackers gain access to a machine, running TeamViewer to allow them to access a machine.",
        "query": "SELECT display_name,status,s.pid,p.path FROM services AS s JOIN processes AS p USING(pid) WHERE s.name LIKE \"%teamviewer%\";",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "inventory"
        ],
        "contributors": [
          {
            "name": "AndrewB",
            "handle": "alphabrevity",
            "avatarUrl": "https://avatars.githubusercontent.com/u/3847973?v=4",
            "htmlUrl": "https://github.com/alphabrevity"
          }
        ],
        "kind": "query",
        "slug": "get-whether-team-viewer-is-installed-running",
        "resolution": "N/A"
      },
      {
        "name": "Get malicious Python backdoors",
        "platforms": "macOS, Linux, Windows",
        "description": "Watches for the backdoored Python packages installed on the system. See (http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/index.html)",
        "query": "SELECT CASE cnt WHEN 0 THEN \"NONE_INSTALLED\" ELSE \"INSTALLED\" END AS \"Malicious Python Packages\", package_name, package_version FROM (SELECT COUNT(name) AS cnt, name AS package_name, version AS package_version, path AS package_path FROM python_packages WHERE package_name IN ('acqusition', 'apidev-coop', 'bzip', 'crypt', 'django-server', 'pwd', 'setup-tools', 'telnet', 'urlib3', 'urllib'));",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "inventory",
          "malware"
        ],
        "contributors": [
          {
            "name": "AndrewB",
            "handle": "alphabrevity",
            "avatarUrl": "https://avatars.githubusercontent.com/u/3847973?v=4",
            "htmlUrl": "https://github.com/alphabrevity"
          }
        ],
        "kind": "query",
        "slug": "get-malicious-python-backdoors",
        "resolution": "N/A"
      },
      {
        "name": "Check for artifacts of the Floxif trojan",
        "platforms": "Windows",
        "description": "Checks for artifacts from the Floxif trojan on Windows machines.",
        "query": "SELECT * FROM registry WHERE path LIKE 'HKEY_LOCAL_MACHINE\\\\SOFTWARE\\\\Piriform\\\\Agomo%';",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "malware"
        ],
        "contributors": [
          {
            "name": "Babatunde Micheal Okutubo",
            "handle": "micheal-o",
            "avatarUrl": "https://avatars.githubusercontent.com/u/22627292?v=4",
            "htmlUrl": "https://github.com/micheal-o"
          }
        ],
        "kind": "query",
        "slug": "check-for-artifacts-of-the-floxif-trojan",
        "resolution": "N/A"
      },
      {
        "name": "Get Shimcache table",
        "platforms": "Windows",
        "description": "Returns forensic data showing evidence of likely file execution, in addition to the last modified timestamp of the file, order of execution, full file path order of execution, and the order in which files were executed.",
        "query": "select * from Shimcache",
        "purpose": "Informational",
        "tags": [
          "hunting"
        ],
        "contributors": [
          {
            "name": null,
            "handle": "puffyCid",
            "avatarUrl": "https://avatars.githubusercontent.com/u/16283453?v=4",
            "htmlUrl": "https://github.com/puffyCid"
          }
        ],
        "kind": "query",
        "slug": "get-shimcache-table",
        "resolution": "N/A"
      },
      {
        "name": "Get running docker containers",
        "platforms": "macOS, Linux",
        "description": "Returns the running Docker containers",
        "query": "SELECT id, name, image, image_id, state, status FROM docker_containers WHERE state = \"running\";",
        "purpose": "Informational",
        "tags": [
          "containers",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Kelvin Oghenerhoro Omereshone",
            "handle": "DominusKelvin",
            "avatarUrl": "https://avatars.githubusercontent.com/u/24433274?v=4",
            "htmlUrl": "https://github.com/DominusKelvin"
          }
        ],
        "kind": "query",
        "slug": "get-running-docker-containers",
        "resolution": "N/A"
      },
      {
        "name": "Get applications hogging memory",
        "platforms": "macOS, Linux, Windows",
        "description": "Returns top 10 applications or processes hogging memory the most.",
        "query": "SELECT pid, name, ROUND((total_size * '10e-7'), 2) AS memory_used FROM processes ORDER BY total_size DESC LIMIT 10;",
        "purpose": "Informational",
        "tags": [
          "troubleshooting"
        ],
        "contributors": [
          {
            "name": "Kelvin Oghenerhoro Omereshone",
            "handle": "DominusKelvin",
            "avatarUrl": "https://avatars.githubusercontent.com/u/24433274?v=4",
            "htmlUrl": "https://github.com/DominusKelvin"
          }
        ],
        "kind": "query",
        "slug": "get-applications-hogging-memory",
        "resolution": "N/A"
      },
      {
        "name": "Get servers with root login in the last 24 hours",
        "platforms": "macOS, Linux, Windows",
        "description": "Returns servers with root login in the last 24 hours and the time the users where logged in.",
        "query": "SELECT * FROM last WHERE username = \"root\" AND time > (( SELECT unix_time FROM time ) - 86400 );",
        "purpose": "Informational",
        "tags": [
          "hunting"
        ],
        "contributors": [
          {
            "name": "Kelvin Oghenerhoro Omereshone",
            "handle": "DominusKelvin",
            "avatarUrl": "https://avatars.githubusercontent.com/u/24433274?v=4",
            "htmlUrl": "https://github.com/DominusKelvin"
          }
        ],
        "kind": "query",
        "slug": "get-servers-with-root-login-in-the-last-24-hours",
        "resolution": "N/A"
      },
      {
        "name": "Detect active processes with Log4j running",
        "platforms": "macOS, Linux",
        "description": "Returns a list of active processes and the Jar paths which are using Log4j. Version numbers are usually within the Jar filename. Note: This query is resource intensive and has caused problems on systems with limited swap space. Test on some systems before running this widely.",
        "query": "WITH target_jars AS (\n  SELECT DISTINCT path\n  FROM (\n      WITH split(word, str) AS(\n        SELECT '', cmdline || ' '\n        FROM processes\n        UNION ALL\n        SELECT substr(str, 0, instr(str, ' ')), substr(str, instr(str, ' ') + 1)\n        FROM split\n        WHERE str != '')\n      SELECT word AS path\n      FROM split\n      WHERE word LIKE '%.jar'\n    UNION ALL\n      SELECT path\n      FROM process_open_files\n      WHERE path LIKE '%.jar'\n  )\n)\nSELECT path, matches\nFROM yara\nWHERE path IN (SELECT path FROM target_jars)\n  AND count > 0\n  AND sigrule IN (\n    'rule log4jJndiLookup {\n      strings:\n        $jndilookup = \"JndiLookup\"\n      condition:\n        $jndilookup\n    }',\n    'rule log4jJavaClass {\n      strings:\n        $javaclass = \"org/apache/logging/log4j\"\n      condition:\n        $javaclass\n    }'\n  );\n",
        "purpose": "Detection",
        "tags": [
          "vulnerability"
        ],
        "contributors": [
          {
            "name": "Zach Wasserman",
            "handle": "zwass",
            "avatarUrl": "https://avatars.githubusercontent.com/u/575602?v=4",
            "htmlUrl": "https://github.com/zwass"
          },
          {
            "name": "Tony Gauda",
            "handle": "tgauda",
            "avatarUrl": "https://avatars.githubusercontent.com/u/5620541?v=4",
            "htmlUrl": "https://github.com/tgauda"
          }
        ],
        "kind": "query",
        "slug": "detect-active-processes-with-log-4-j-running",
        "resolution": "N/A"
      },
      {
        "name": "Get applications that were opened within the last 24 hours",
        "platforms": "macOS",
        "description": "Returns applications that were opened within the last 24 hours starting with the last opened application.",
        "query": "SELECT * FROM apps WHERE last_opened_time > (( SELECT unix_time FROM time ) - 86400 ) ORDER BY last_opened_time DESC;",
        "purpose": "Informational",
        "tags": [
          "inventory"
        ],
        "contributors": [
          {
            "name": "Kelvin Oghenerhoro Omereshone",
            "handle": "DominusKelvin",
            "avatarUrl": "https://avatars.githubusercontent.com/u/24433274?v=4",
            "htmlUrl": "https://github.com/DominusKelvin"
          }
        ],
        "kind": "query",
        "slug": "get-applications-that-were-opened-within-the-last-24-hours",
        "resolution": "N/A"
      },
      {
        "name": "Get applications that are not in the Applications directory",
        "platforms": "macOS",
        "description": "Returns applications that are not in the `/Applications` directory",
        "query": "SELECT * FROM apps WHERE path NOT LIKE '/Applications/%';",
        "purpose": "Informational",
        "tags": [
          "hunting",
          "inventory"
        ],
        "contributors": [
          {
            "name": "Kelvin Oghenerhoro Omereshone",
            "handle": "DominusKelvin",
            "avatarUrl": "https://avatars.githubusercontent.com/u/24433274?v=4",
            "htmlUrl": "https://github.com/DominusKelvin"
          }
        ],
        "kind": "query",
        "slug": "get-applications-that-are-not-in-the-applications-directory",
        "resolution": "N/A"
      },
      {
        "name": "Get subscription-based applications that have not been opened for the last 30 days",
        "platforms": "macOS",
        "description": "Returns applications that are subscription-based and have not been opened for the last 30 days. You can replace the list of applications with those specific to your use case.",
        "query": "SELECT * FROM apps WHERE path LIKE '/Applications/%' AND name IN (\"Photoshop.app\", \"Adobe XD.app\", \"Sketch.app\", \"Illustrator.app\") AND last_opened_time < (( SELECT unix_time FROM time ) - 2592000000000 );",
        "purpose": "Informational",
        "tags": [
          "inventory"
        ],
        "contributors": [
          {
            "name": "Kelvin Oghenerhoro Omereshone",
            "handle": "DominusKelvin",
            "avatarUrl": "https://avatars.githubusercontent.com/u/24433274?v=4",
            "htmlUrl": "https://github.com/DominusKelvin"
          }
        ],
        "kind": "query",
        "slug": "get-subscription-based-applications-that-have-not-been-opened-for-the-last-30-days",
        "resolution": "N/A"
      },
      {
        "name": "Gatekeeper enabled (macOS)",
        "query": "SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;",
        "description": "Checks to make sure that the Gatekeeper feature is enabled on macOS devices. Gatekeeper tries to ensure only trusted software is run on a mac machine.",
        "resolution": "To enable Gatekeeper, on the failing device, run the following command in the Terminal app: /usr/sbin/spctl --master-enable.",
        "platforms": "macOS",
        "tags": [
          "compliance",
          "hardening",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Victor Vrantchan",
            "handle": "groob",
            "avatarUrl": "https://avatars.githubusercontent.com/u/1526945?v=4",
            "htmlUrl": "https://github.com/groob"
          }
        ],
        "kind": "policy",
        "slug": "gatekeeper-enabled-mac-os"
      },
      {
        "name": "Full disk encryption enabled (Windows)",
        "query": "SELECT 1 FROM bitlocker_info where protection_status = 1;",
        "description": "Checks to make sure that full disk encryption is enabled on Windows devices.",
        "resolution": "To get additional information, run the following osquery query on the failing device: SELECT * FROM bitlocker_info. In the query results, if protection_status is 2, then the status cannot be determined. If it is 0, it is considered unprotected. Use the additional results (percent_encrypted, conversion_status, etc.) to help narrow down the specific reason why Windows considers the volume unprotected.",
        "platforms": "Windows",
        "platform": "windows",
        "tags": [
          "compliance",
          "hardening",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Josh Brower",
            "handle": "defensivedepth",
            "avatarUrl": "https://avatars.githubusercontent.com/u/954732?v=4",
            "htmlUrl": "https://github.com/defensivedepth"
          }
        ],
        "kind": "policy",
        "slug": "full-disk-encryption-enabled-windows"
      },
      {
        "name": "Full disk encryption enabled (macOS)",
        "query": "SELECT 1 FROM disk_encryption WHERE user_uuid IS NOT \"\" AND filevault_status = 'on' LIMIT 1;",
        "description": "Checks to make sure that full disk encryption (FileVault) is enabled on macOS devices.",
        "resolution": "To enable full disk encryption, on the failing device, select System Preferences > Security & Privacy > FileVault > Turn On FileVault.",
        "platforms": "macOS",
        "tags": [
          "compliance",
          "hardening",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Victor Vrantchan",
            "handle": "groob",
            "avatarUrl": "https://avatars.githubusercontent.com/u/1526945?v=4",
            "htmlUrl": "https://github.com/groob"
          }
        ],
        "kind": "policy",
        "slug": "full-disk-encryption-enabled-mac-os"
      },
      {
        "name": "Full disk encryption enabled (Linux)",
        "query": "SELECT 1 FROM disk_encryption WHERE encrypted=1 AND name LIKE '/dev/dm-1';",
        "description": "Checks if the root drive is encrypted. There are many ways to encrypt Linux systems. This is the default on distributions such as Ubuntu.",
        "resolution": "Ensure the image deployed to your Linux workstation includes full disk encryption.",
        "platforms": "Linux",
        "platform": "linux",
        "tags": [
          "compliance",
          "hardening",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "policy",
        "slug": "full-disk-encryption-enabled-linux"
      },
      {
        "name": "System Integrity Protection enabled (macOS)",
        "query": "SELECT 1 FROM sip_config WHERE config_flag = 'sip' AND enabled = 1;",
        "description": "Checks to make sure that the System Integrity Protection feature is enabled.",
        "resolution": "To enable System Integrity Protection, on the failing device, run the following command in the Terminal app: /usr/sbin/spctl --master-enable.",
        "platforms": "macOS",
        "tags": [
          "compliance",
          "malware",
          "hardening",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Victor Vrantchan",
            "handle": "groob",
            "avatarUrl": "https://avatars.githubusercontent.com/u/1526945?v=4",
            "htmlUrl": "https://github.com/groob"
          }
        ],
        "kind": "policy",
        "slug": "system-integrity-protection-enabled-mac-os"
      },
      {
        "name": "Automatic login disabled (macOS)",
        "query": "SELECT 1 FROM managed_policies WHERE domain = 'com.apple.loginwindow' AND name = 'com.apple.login.mcx.DisableAutoLoginClient' AND value = 1 LIMIT 1;",
        "description": "Required: You’re already enforcing a policy via Moble Device Management (MDM). Checks to make sure that the device user cannot log in to the device without a password.",
        "resolution": "The following example profile includes a setting to disable automatic login: https://github.com/gregneagle/profiles/blob/fecc73d66fa17b6fa78b782904cb47cdc1913aeb/loginwindow.mobileconfig#L64-L65.",
        "platforms": "macOS",
        "tags": [
          "compliance",
          "hardening",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Victor Vrantchan",
            "handle": "groob",
            "avatarUrl": "https://avatars.githubusercontent.com/u/1526945?v=4",
            "htmlUrl": "https://github.com/groob"
          }
        ],
        "kind": "policy",
        "slug": "automatic-login-disabled-mac-os"
      },
      {
        "name": "Guest users disabled (macOS)",
        "query": "SELECT 1 FROM managed_policies WHERE domain = 'com.apple.loginwindow' AND name = 'DisableGuestAccount' AND value = 1 LIMIT 1;",
        "description": "Required: You’re already enforcing a policy via Moble Device Management (MDM). Checks to make sure that guest accounts cannot be used to log in to the device without a password.",
        "resolution": "The following example profile includes a setting to disable guest users: https://github.com/gregneagle/profiles/blob/fecc73d66fa17b6fa78b782904cb47cdc1913aeb/loginwindow.mobileconfig#L68-L71.",
        "platforms": "macOS",
        "tags": [
          "compliance",
          "hardening",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Victor Vrantchan",
            "handle": "groob",
            "avatarUrl": "https://avatars.githubusercontent.com/u/1526945?v=4",
            "htmlUrl": "https://github.com/groob"
          }
        ],
        "kind": "policy",
        "slug": "guest-users-disabled-mac-os"
      },
      {
        "name": "Secure keyboard entry for Terminal.app enabled (macOS)",
        "query": "SELECT 1 FROM managed_policies WHERE domain = 'com.apple.Terminal' AND name = 'SecureKeyboardEntry' AND value = 1 LIMIT 1;",
        "description": "Required: You’re already enforcing a policy via Moble Device Management (MDM). Checks to make sure that the Secure Keyboard Entry setting is enabled.",
        "platforms": "macOS",
        "tags": [
          "compliance",
          "hardening",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Victor Vrantchan",
            "handle": "groob",
            "avatarUrl": "https://avatars.githubusercontent.com/u/1526945?v=4",
            "htmlUrl": "https://github.com/groob"
          }
        ],
        "kind": "policy",
        "slug": "secure-keyboard-entry-for-terminal-app-enabled-mac-os",
        "resolution": "N/A"
      },
      {
        "name": "Get built-in antivirus status on macOS",
        "platforms": "macOS",
        "query": "SELECT path, value AS version FROM plist WHERE (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/MRT.app/Contents/Info.plist') OR (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/XProtect.bundle/Contents/Info.plist');",
        "description": "Reads the version numbers from the Malware Removal Tool (MRT) and built-in antivirus (XProtect) plists",
        "purpose": "Informational",
        "tags": [
          "compliance",
          "malware",
          "hardening",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "query",
        "slug": "get-built-in-antivirus-status-on-mac-os",
        "resolution": "N/A"
      },
      {
        "name": "Get antivirus status from the Windows Security Center",
        "platforms": "Windows",
        "query": "SELECT antivirus, signatures_up_to_date from windows_security_center CROSS JOIN windows_security_products WHERE type = 'Antivirus';",
        "description": "Selects the antivirus and signatures status from Windows Security Center.",
        "purpose": "Informational",
        "tags": [
          "compliance",
          "malware",
          "hardening",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "query",
        "slug": "get-antivirus-status-from-the-windows-security-center",
        "resolution": "N/A"
      },
      {
        "name": "Get antivirus (ClamAV/clamd) and updater (freshclam) process status",
        "platforms": "Linux",
        "query": "SELECT pid, state, cmdline, name FROM processes WHERE name='clamd' OR name='freshclam';",
        "description": "Selects the clamd and freshclam processes to ensure AV and its updater are running",
        "purpose": "Informational",
        "tags": [
          "compliance",
          "malware",
          "hardening",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "query",
        "slug": "get-antivirus-clam-av-clamd-and-updater-freshclam-process-status",
        "resolution": "N/A"
      },
      {
        "name": "Antivirus healthy (macOS)",
        "query": "SELECT score FROM (SELECT case when COUNT(*) = 2 then 1 ELSE 0 END AS score FROM plist WHERE (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/XProtect.bundle/Contents/Info.plist' AND value>=2155) OR (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/MRT.app/Contents/Info.plist' and value>=1.88)) WHERE score == 1;",
        "description": "Checks the version of Malware Removal Tool (MRT) and the built-in macOS AV (Xprotect). Replace version numbers with latest version regularly.",
        "resolution": "To enable automatic security definition updates, on the failing device, select System Preferences > Software Update > Advanced > Turn on Install system data files and security updates.",
        "platforms": "macOS",
        "tags": [
          "compliance",
          "malware",
          "hardening",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "policy",
        "slug": "antivirus-healthy-mac-os"
      },
      {
        "name": "Antivirus healthy (Windows)",
        "query": "SELECT 1 from windows_security_center wsc CROSS JOIN windows_security_products wsp WHERE antivirus = 'Good' AND type = 'Antivirus' AND signatures_up_to_date=1;",
        "description": "Checks the status of antivirus and signature updates from the Windows Security Center.",
        "resolution": "Ensure Windows Defender or your third-party antivirus is running, up to date, and visible in the Windows Security Center.",
        "platforms": "Windows",
        "tags": [
          "compliance",
          "malware",
          "hardening",
          "built-in"
        ],
        "platform": "windows",
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "policy",
        "slug": "antivirus-healthy-windows"
      },
      {
        "name": "Antivirus healthy (Linux)",
        "query": "SELECT score FROM (SELECT case when COUNT(*) = 2 then 1 ELSE 0 END AS score FROM processes WHERE (name = 'clamd') OR (name = 'freshclam')) WHERE score == 1;",
        "description": "Checks that both ClamAV's daemon and its updater service (freshclam) are running.",
        "resolution": "Ensure ClamAV and Freshclam are installed and running.",
        "platforms": "Linux",
        "tags": [
          "compliance",
          "malware",
          "hardening",
          "built-in"
        ],
        "platform": "linux",
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "policy",
        "slug": "antivirus-healthy-linux"
      },
      {
        "name": "MDM Enrolled (macOS)",
        "query": "SELECT 1 from mdm WHERE enrolled='true';",
        "description": "Required: osquery deployed with Orbit, or manual installation of macadmins/osquery-extension. Checks that a mac is enrolled to MDM. Add a AND on identity_certificate_uuid to check for a specific MDM.",
        "resolution": "Enroll device to MDM",
        "platforms": "macOS",
        "tags": [
          "compliance",
          "hardening",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "policy",
        "slug": "mdm-enrolled-mac-os"
      },
      {
        "name": "Application is up to date or not present (macOS)",
        "query": "SELECT 1 WHERE EXISTS (SELECT 1 FROM apps a1 WHERE a1.bundle_identifier = 'com.electron.dockerdesktop' AND a1.bundle_short_version>='4.6.1') OR NOT EXISTS (SELECT 1 FROM apps a2 WHERE a2.bundle_identifier = 'com.electron.dockerdesktop');",
        "description": "Checks if the application (Docker Desktop example) is installed and up to date, or not installed. Fails if the application is installed and on a lower version. You can copy this query and replace the bundle_identifier and bundle_version values to apply the same type of policy to other applications.",
        "resolution": "Update Docker or remove it if not used.",
        "platforms": "macOS",
        "tags": [
          "inventory",
          "vulnerability",
          "built-in"
        ],
        "platform": "darwin",
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "kind": "policy",
        "slug": "application-is-up-to-date-or-not-present-mac-os"
      },
      {
        "name": "SSH keys encrypted",
        "query": "SELECT 1 WHERE NOT EXISTS (SELECT 1 FROM users CROSS JOIN user_ssh_keys USING (uid) WHERE encrypted='0');",
        "description": "Required: osquery must have Full Disk Access. Policy passes if all keys are encrypted, including if no keys are present.",
        "resolution": "Use this command to encrypt existing SSH keys by providing the path to the file: ssh-keygen -o -p -f /path/to/file",
        "platforms": "macOS, Linux, Windows",
        "tags": [
          "compliance",
          "ssh",
          "built-in"
        ],
        "contributors": [
          {
            "name": "Guillaume Ross",
            "handle": "GuillaumeRoss",
            "avatarUrl": "https://avatars.githubusercontent.com/u/73836008?v=4",
            "htmlUrl": "https://github.com/GuillaumeRoss"
          }
        ],
        "platform": "darwin,linux,windows",
        "kind": "policy",
        "slug": "ssh-keys-encrypted"
      }
    ],
    "queryLibraryYmlRepoPath": "docs/01-Using-Fleet/standard-query-library/standard-query-library.yml",
    "compiledPagePartialsAppPath": "views/partials/built-from-markdown"
  }
}
