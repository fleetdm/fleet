{
  "generators": {
    "modules": {}
  },
  "_generatedWith": {
    "sails": "1.2.5",
    "sails-generate": "2.0.0"
  },
  "builtStaticContent": {
    "markdownPages": [
      {
        "url": "/todo-docs-neilcodefleetdocsREADMEmd-7326173",
        "title": "README.md",
        "lastModifiedAt": 1622239584943
      },
      {
        "url": "/todo-docs-ntribution1-Building-Fleetmd-3707410",
        "title": "Building fleet.md",
        "lastModifiedAt": 1622239584944
      },
      {
        "url": "/todo-docs-cs4-Contribution2-Testingmd-8941932",
        "title": "Testing.md",
        "lastModifiedAt": 1622239584944
      },
      {
        "url": "/todo-docs-4-Contribution3-Migrationsmd-5474508",
        "title": "Migrations.md",
        "lastModifiedAt": 1622239584944
      },
      {
        "url": "/todo-docs-bution4-Committing-Changesmd-9835502",
        "title": "Committing changes.md",
        "lastModifiedAt": 1622239584945
      },
      {
        "url": "/todo-docs-tribution5-Releasing-Fleetmd-8213092",
        "title": "Releasing fleet.md",
        "lastModifiedAt": 1622239584945
      },
      {
        "url": "/todo-docs-docs4-ContributionREADMEmd-5088958",
        "title": "README.md",
        "lastModifiedAt": 1622239584945
      },
      {
        "url": "/todo-docs-eetdocs4-ContributionFAQmd-2888255",
        "title": "FAQ.md",
        "lastModifiedAt": 1622239584945
      },
      {
        "url": "/todo-docs-docs2-Orbit-osqueryREADMEmd-3234472",
        "title": "README.md",
        "lastModifiedAt": 1622239584945
      },
      {
        "url": "/todo-docs-3-Deployment1-Installationmd-8799996",
        "title": "Installation.md",
        "lastModifiedAt": 1622239584945
      },
      {
        "url": "/todo-docs--Deployment2-Configurationmd-2652515",
        "title": "Configuration.md",
        "lastModifiedAt": 1622239584945
      },
      {
        "url": "/todo-docs-3-Deployment3-Adding-hostsmd-983924",
        "title": "Adding hosts.md",
        "lastModifiedAt": 1622239584945
      },
      {
        "url": "/todo-docs-xample-deployment-scenariosmd-3875146",
        "title": "Example deployment scenarios.md",
        "lastModifiedAt": 1622239584946
      },
      {
        "url": "/todo-docs-nt4-fleetctl-agent-updatesmd-8784348",
        "title": "Fleetctl agent updates.md",
        "lastModifiedAt": 1622239584946
      },
      {
        "url": "/todo-docs-fleetdocs3-DeploymentFAQmd-7281834",
        "title": "FAQ.md",
        "lastModifiedAt": 1622239584946
      },
      {
        "url": "/todo-docs-etdocs3-DeploymentREADMEmd-7203098",
        "title": "README.md",
        "lastModifiedAt": 1622239584946
      },
      {
        "url": "/todo-docs-imagesadd-new-host-modalpng-5050143",
        "title": "Add new host modal.png",
        "lastModifiedAt": 1622239584946
      },
      {
        "url": "/todo-docs-docsimagesadmin-settingspng-2529619",
        "title": "Admin settings.png",
        "lastModifiedAt": 1622239584946
      },
      {
        "url": "/todo-docs-ew-query-with-local-filterpng-753757",
        "title": "Distributed new query with local filter.png",
        "lastModifiedAt": 1622239584946
      },
      {
        "url": "/todo-docs-ed-query-with-local-filterpng-9246511",
        "title": "Distributed saved query with local filter.png",
        "lastModifiedAt": 1622239584946
      },
      {
        "url": "/todo-docs-simagesedit-pack-targetspng-8124160",
        "title": "Edit pack targets.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-simagesmanage-hosts-gridpng-4283298",
        "title": "Manage hosts grid.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-simagesmanage-hosts-listpng-5655669",
        "title": "Manage hosts list.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-gesmanage-osquery-optionspng-5723430",
        "title": "Manage osquery options.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-e-packs-with-pack-selectedpng-4147851",
        "title": "Manage packs with pack selected.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-tdocsimagesmanage-packspng-9215266",
        "title": "Manage packs.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-docsimagesmanage-queriespng-1539641",
        "title": "Manage queries.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-tdocsimagesmanage-userspng-7375628",
        "title": "Manage users.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-ocsimagesmy-account-pagepng-7286040",
        "title": "My account page.png",
        "lastModifiedAt": 1622239584947
      },
      {
        "url": "/todo-docs-docsimagesokta-idp-setuppng-1374739",
        "title": "Okta idp setup.png",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs-magessalesforce-idp-setuppng-6575149",
        "title": "Salesforce idp setup.png",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs-gesschedule-query-sidebarpng-7540501",
        "title": "Schedule query sidebar.png",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs-leetdocsimagessso-setuppng-1640949",
        "title": "Sso setup.png",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs-cs1-Using-Fleet1-Fleet-UImd-4050363",
        "title": "Fleet uI.md",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs-ng-Fleet5-Monitoring-Fleetmd-2717623",
        "title": "Monitoring fleet.md",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs-t6-Security-best-practicesmd-4278353",
        "title": "Security best practices.md",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs-cs1-Using-Fleet3-REST-APImd-6424149",
        "title": "REST aPI.md",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs--Using-Fleet2-fleetctl-CLImd-9454682",
        "title": "Fleetctl cLI.md",
        "lastModifiedAt": 1622239584948
      },
      {
        "url": "/todo-docs--Using-Fleet4-Osquery-logsmd-9663611",
        "title": "Osquery logs.md",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-sing-Fleet7-Updating-Fleetmd-3684829",
        "title": "Updating fleet.md",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-tdocs1-Using-FleetREADMEmd-4172287",
        "title": "README.md",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-leetdocs1-Using-FleetFAQmd-7107500",
        "title": "FAQ.md",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-configuration-filesREADMEmd-7179743",
        "title": "README.md",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-andard-query-libraryREADMEmd-1867213",
        "title": "README.md",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-single-file-configurationyml-8303903",
        "title": "Single file configuration.yml",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-arystandard-query-libraryyml-1105217",
        "title": "Standard query library.yml",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-onfigurationagent-optionsyml-6158506",
        "title": "Agent options.yml",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs-nfigurationenroll-secretsyml-7111000",
        "title": "Enroll secrets.yml",
        "lastModifiedAt": 1622239584949
      },
      {
        "url": "/todo-docs--file-configurationlabelsyml-8086509",
        "title": "Labels.yml",
        "lastModifiedAt": 1622239584950
      },
      {
        "url": "/todo-docs-file-configurationqueriesyml-6394135",
        "title": "Queries.yml",
        "lastModifiedAt": 1622239584950
      },
      {
        "url": "/todo-docs-ubernetesfleet-deploymentyml-3195277",
        "title": "Fleet deployment.yml",
        "lastModifiedAt": 1622239584950
      },
      {
        "url": "/todo-docs-ubernetesfleet-migrationsyml-4622939",
        "title": "Fleet migrations.yml",
        "lastModifiedAt": 1622239584950
      },
      {
        "url": "/todo-docs-skubernetesfleet-serviceyml-2920382",
        "title": "Fleet service.yml",
        "lastModifiedAt": 1622239584950
      },
      {
        "url": "/todo-docs-npacksosquery-monitoringyml-7964101",
        "title": "Osquery monitoring.yml",
        "lastModifiedAt": 1622239584950
      },
      {
        "url": "/todo-handbook-codefleethandbookREADMEmd-4743983",
        "title": "README.md",
        "lastModifiedAt": 1622239584951
      },
      {
        "url": "/todo-handbook-odefleethandbookbenefitsmd-4900298",
        "title": "Benefits.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook-defleethandbookmanual-qamd-9551023",
        "title": "Manual qa.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook-ethandbookrelease-processmd-5197317",
        "title": "Release process.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook-eethandbookqueriesREADMEmd-2134802",
        "title": "README.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook-pple-applications-installedmd-6944330",
        "title": "Count apple applications installed.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook-nerable-versions-of-opensslmd-3338755",
        "title": "Detect hosts with high severity vulnerable versions of openssl.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook--with-the-firewall-disabledmd-4332572",
        "title": "Detect hosts with the firewall disabled.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook-es-with-gatekeeper-disabledmd-9174453",
        "title": "Detect machines with gatekeeper disabled.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook-ence-of-authorized-ssh-keysmd-2299015",
        "title": "Detect presence of authorized ssh keys.md",
        "lastModifiedAt": 1622239584952
      },
      {
        "url": "/todo-handbook-queriesget-authorized-keysmd-3323130",
        "title": "Get authorized keys.md",
        "lastModifiedAt": 1622239584953
      },
      {
        "url": "/todo-handbook-andbookqueriesget-crashesmd-1048480",
        "title": "Get crashes.md",
        "lastModifiedAt": 1622239584953
      },
      {
        "url": "/todo-handbook-installed-chrome-extensionsmd-7385230",
        "title": "Get installed chrome extensions.md",
        "lastModifiedAt": 1622239584953
      },
      {
        "url": "/todo-handbook--installed-freebsd-softwaremd-4108779",
        "title": "Get installed freebsd software.md",
        "lastModifiedAt": 1622239584953
      },
      {
        "url": "/todo-handbook-installed-homebrew-packagesmd-2733237",
        "title": "Get installed homebrew packages.md",
        "lastModifiedAt": 1622239584953
      },
      {
        "url": "/todo-handbook-et-installed-linux-softwaremd-3967603",
        "title": "Get installed linux software.md",
        "lastModifiedAt": 1622239584953
      },
      {
        "url": "/todo-handbook-et-installed-macos-softwaremd-6531575",
        "title": "Get installed macos software.md",
        "lastModifiedAt": 1622239584954
      },
      {
        "url": "/todo-handbook-installed-safari-extensionsmd-3067918",
        "title": "Get installed safari extensions.md",
        "lastModifiedAt": 1622239584954
      },
      {
        "url": "/todo-handbook--installed-windows-softwaremd-7808313",
        "title": "Get installed windows software.md",
        "lastModifiedAt": 1622239584954
      },
      {
        "url": "/todo-handbook-tops-with-failing-batteriesmd-6286552",
        "title": "Get laptops with failing batteries.md",
        "lastModifiedAt": 1622239584954
      },
      {
        "url": "/todo-handbook--disk-free-space-percentagemd-7325153",
        "title": "Get macos disk free space percentage.md",
        "lastModifiedAt": 1622239584954
      },
      {
        "url": "/todo-handbook-handbookqueriesget-mountsmd-1057319",
        "title": "Get mounts.md",
        "lastModifiedAt": 1622239584954
      },
      {
        "url": "/todo-handbook-bookqueriesget-os-versionmd-9770996",
        "title": "Get os version.md",
        "lastModifiedAt": 1622239584954
      },
      {
        "url": "/todo-handbook-kqueriesget-platform-infomd-4748041",
        "title": "Get platform info.md",
        "lastModifiedAt": 1622239584954
      },
      {
        "url": "/todo-handbook-kqueriesget-startup-itemsmd-723267",
        "title": "Get startup items.md",
        "lastModifiedAt": 1622239584955
      },
      {
        "url": "/todo-handbook-t-system-logins-and-logoutsmd-9086095",
        "title": "Get system logins and logouts.md",
        "lastModifiedAt": 1622239584955
      },
      {
        "url": "/todo-handbook-kqueriesget-system-uptimemd-7215907",
        "title": "Get system uptime.md",
        "lastModifiedAt": 1622239584955
      },
      {
        "url": "/todo-handbook-ookqueriesget-usb-devicesmd-2682596",
        "title": "Get usb devices.md",
        "lastModifiedAt": 1622239584955
      },
      {
        "url": "/todo-handbook-ookqueriesget-wifi-statusmd-7711218",
        "title": "Get wifi status.md",
        "lastModifiedAt": 1622239584955
      },
      {
        "url": "/todo-handbook-with-unencrypted-hard-disksmd-5654903",
        "title": "Get windows machines with unencrypted hard disks.md",
        "lastModifiedAt": 1622239584955
      },
      {
        "url": "/todo-handbook-dard-query-library-templatemd-7131129",
        "title": "Standard query library template.md",
        "lastModifiedAt": 1622239584955
      }
    ],
    "queries": [
      {
        "name": "Count Apple applications installed",
        "platforms": "macOS",
        "description": "Count the number of Apple applications installed on the machine.",
        "query": "SELECT COUNT(*) FROM apps WHERE bundle_identifier LIKE 'com.apple.%';",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "mike-j-thomas,noahtalerman,mikermcneil",
        "slug": "count-apple-applications-installed"
      },
      {
        "name": "Detect Linux hosts with high severity vulnerable versions of OpenSSL",
        "platforms": "Linux",
        "description": "Retrieves the OpenSSL version.",
        "query": "SELECT name AS name, version AS version, 'deb_packages' AS source FROM deb_packages WHERE name LIKE 'openssl%' UNION SELECT name AS name, version AS version, 'apt_sources' AS source FROM apt_sources WHERE name LIKE 'openssl%' UNION SELECT name AS name, version AS version, 'rpm_packages' AS source FROM rpm_packages WHERE name LIKE 'openssl%';",
        "purpose": "Detection",
        "remediation": "N/A",
        "slug": "detect-linux-hosts-with-high-severity-vulnerable-versions-of-open-ssl"
      },
      {
        "name": "Detect machines with Gatekeeper disabled",
        "platforms": "macOS",
        "description": "Gatekeeper tries to ensure only trusted software is run on a mac machine.",
        "query": "SELECT * FROM gatekeeper WHERE assessments_enabled = 0;",
        "purpose": "Detection",
        "remediation": "N/A",
        "slug": "detect-machines-with-gatekeeper-disabled"
      },
      {
        "name": "Detect presence of authorized SSH keys",
        "platforms": "macOS, Linux",
        "description": "Presence of authorized SSH keys may be unusual on laptops. Could be completely normal on servers, but may be worth auditing for unusual keys and/or changes.",
        "query": "SELECT username, authorized_keys. * FROM users CROSS JOIN authorized_keys USING (uid);",
        "purpose": "Detection",
        "remediation": "Check out the linked table (https://github.com/fleetdm/fleet/blob/32b4d53e7f1428ce43b0f9fa52838cbe7b413eed/handbook/queries/detect-hosts-with-high-severity-vulnerable-versions-of-openssl.md#table-of-vulnerable-openssl-versions) to determine if the installed version is a high severity vulnerability and view the corresponding CVE(s)",
        "slug": "detect-presence-of-authorized-ssh-keys"
      },
      {
        "name": "Get authorized keys for Local Accounts",
        "platforms": "macOS, Linux",
        "description": "List authorized_keys for each user on the system.",
        "query": "SELECT * FROM users CROSS JOIN authorized_keys USING (uid);",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-authorized-keys-for-local-accounts"
      },
      {
        "name": "Get authorized keys for Domain Joined Accounts",
        "platforms": "macOS, Linux",
        "description": "List authorized_keys for each user on the system.",
        "query": "SELECT *  FROM users CROSS JOIN  authorized_keys USING(uid) WHERE  username IN (SELECT distinct(username) FROM last);",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-authorized-keys-for-domain-joined-accounts"
      },
      {
        "name": "Get crashes",
        "platforms": "macOS",
        "description": "Retrieve application, system, and mobile app crash logs.",
        "query": "SELECT uid, datetime, responsible, exception_type, identifier, version, crash_path FROM users CROSS JOIN crashes USING (uid);",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-crashes"
      },
      {
        "name": "Get installed Chrome Extensions",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "List installed Chrome Extensions for all users.",
        "query": "SELECT uid, datetime, responsible, exception_type, identifier, version, crash_path FROM users CROSS JOIN crashes USING (uid);",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-installed-chrome-extensions"
      },
      {
        "name": "Get installed FreeBSD software",
        "platforms": "FreeBSD",
        "description": "Get all software installed on a FreeBSD computer, including browser plugins and installed packages. Note, this does not included other running processes in the processes table.",
        "query": "SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Package (pkg)' AS type, 'pkg_packages' AS source FROM pkg_packages;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-installed-free-bsd-software"
      },
      {
        "name": "Get Homebrew Packages",
        "platforms": "macOS",
        "description": "Get the installed homebrew package database.",
        "query": "SELECT * FROM homebrew_packages;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-homebrew-packages"
      },
      {
        "name": "Get installed Linux software",
        "platforms": "Linux",
        "description": "Get all software installed on a Linux computer, including browser plugins and installed packages. Note, this does not included other running processes in the processes table.",
        "query": "SELECT name AS name, version AS version, 'Package (APT)' AS type, 'apt_sources' AS source FROM apt_sources UNION SELECT name AS name, version AS version, 'Package (deb)' AS type, 'deb_packages' AS source FROM deb_packages UNION SELECT package AS name, version AS version, 'Package (Portage)' AS type, 'portage_packages' AS source FROM portage_packages UNION SELECT name AS name, version AS version, 'Package (RPM)' AS type, 'rpm_packages' AS source FROM rpm_packages UNION SELECT name AS name, '' AS version, 'Package (YUM)' AS type, 'yum_sources' AS source FROM yum_sources UNION SELECT name AS name, version AS version, 'Package (NPM)' AS type, 'npm_packages' AS source FROM npm_packages UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-installed-linux-software"
      },
      {
        "name": "Get installed macOS software",
        "platforms": "macOS",
        "description": "Get all software installed on a macOS computer, including apps, browser plugins, and installed packages. Note, this does not included other running processes in the processes table.",
        "query": "SELECT name AS name, bundle_short_version AS version, 'Application (macOS)' AS type, 'apps' AS source FROM apps UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name As name, version AS version, 'Browser plugin (Safari)' AS type, 'safari_extensions' AS source FROM safari_extensions UNION SELECT name AS name, version AS version, 'Package (Homebrew)' AS type, 'homebrew_packages' AS source FROM homebrew_packages;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-installed-mac-os-software"
      },
      {
        "name": "Get installed Safari extensions",
        "platforms": "macOS",
        "description": "Retrieves the list of installed Safari Extensions for all users in the target system.",
        "query": "SELECT safari_extensions.* FROM users join safari_extensions USING (uid);",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-installed-safari-extensions"
      },
      {
        "name": "Get installed Windows software",
        "platforms": "Windows",
        "description": "Get all software installed on a Windows computer, including programs, browser plugins, and installed packages. Note, this does not included other running processes in the processes table.",
        "query": "SELECT name AS name, version AS version, 'Program (Windows)' AS type, 'programs' AS source FROM programs UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Browser plugin (IE)' AS type, 'ie_extensions' AS source FROM ie_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name AS name, version AS version, 'Package (Chocolatey)' AS type, 'chocolatey_packages' AS source FROM chocolatey_packages UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-installed-windows-software"
      },
      {
        "name": "Get laptops with failing batteries",
        "platforms": "macOS",
        "description": null,
        "query": "SELECT * FROM battery WHERE health != 'Good' AND condition NOT IN ('', 'Normal');",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-laptops-with-failing-batteries"
      },
      {
        "name": "Get macOS disk free space percentage",
        "platforms": "macOS",
        "description": "Displays the percentage of free space available on the primary disk partition.",
        "query": "SELECT (blocks_available * 100 / blocks) AS pct, * FROM mounts WHERE path = '/';",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-mac-os-disk-free-space-percentage"
      },
      {
        "name": "Get mounts",
        "platforms": "macOS, Linux",
        "description": "Shows system mounted devices and filesystems (not process specific).",
        "query": "SELECT device, device_alias, path, type, blocks_size FROM mounts;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-mounts"
      },
      {
        "name": "Get the version of the resident operating system",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Shows system mounted devices and filesystems (not process specific).",
        "query": "SELECT * FROM os_version;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-the-version-of-the-resident-operating-system"
      },
      {
        "name": "Get platform info",
        "platforms": "macOS",
        "description": "Shows information about the host platform",
        "query": "SELECT vendor, version, date, revision from platform_info;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-platform-info"
      },
      {
        "name": "Get startup items",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Shows applications and binaries set as user/login startup items.",
        "query": "SELECT * FROM startup_items;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-startup-items"
      },
      {
        "name": "Get system logins and logouts",
        "platforms": "macOS",
        "description": "Get a list of system logins and logouts.",
        "query": "SELECT * FROM last;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-system-logins-and-logouts"
      },
      {
        "name": "Get current users with active shell/console on the system",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Get current users with active shell/console on the system and associated process",
        "query": "SELECT user,host,time, p.name, p.cmdline, p.cwd, p.root FROM logged_in_users liu, processes p WHERE liu.pid = p.pid and liu.type='user' and liu.user <> '' ORDER BY time;",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-current-users-with-active-shell-console-on-the-system"
      },
      {
        "name": "Get system uptime",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Shows the system uptime.",
        "query": "SELECT * FROM uptime;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-system-uptime"
      },
      {
        "name": "Get USB devices",
        "platforms": "macOS, Linux",
        "description": "Shows all USB devices that are actively plugged into the host system.",
        "query": "SELECT * FROM usb_devices;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-usb-devices"
      },
      {
        "name": "Get wifi status",
        "platforms": "macOS",
        "description": "Shows information about the wifi network that a host is currently connected to.",
        "query": "SELECT * FROM wifi_status;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-wifi-status"
      },
      {
        "name": "Get Windows machines with unencrypted hard disks",
        "platforms": "Windows",
        "description": null,
        "query": "SELECT * FROM bitlocker_info WHERE protection_status = 0;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-windows-machines-with-unencrypted-hard-disks"
      },
      {
        "name": "Get disk encryption status",
        "platforms": "macOS, Linux",
        "description": "Disk encryption status and information.",
        "query": "SELECT * FROM disk_encryption;",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-disk-encryption-status"
      },
      {
        "name": "Detect unencrypted SSH keys for local accounts",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Identify SSH keys created without a passphrase which can be used in Lateral Movement (MITRE. TA0008)",
        "query": "SELECT uid, username, description, path, encrypted FROM users CROSS JOIN user_ssh_keys using (uid) WHERE encrypted=0;",
        "purpose": "Detection",
        "remediation": [
          "User awareness about the impact of SSH Keys",
          "Rotate the identified Keys"
        ],
        "contributors": "anelshaer",
        "slug": "detect-unencrypted-ssh-keys-for-local-accounts"
      },
      {
        "name": "Detect unencrypted SSH keys for domain joined accounts",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Identify SSH keys created without a passphrase which can be used in Lateral Movement (MITRE. TA0008)",
        "query": "SELECT uid, username, description, path, encrypted FROM users CROSS JOIN user_ssh_keys using (uid) WHERE encrypted=0 and username in (SELECT distinct(username) FROM last);",
        "purpose": "Detection",
        "remediation": [
          "User awareness about the impact of SSH Keys",
          "Rotate the identified Keys"
        ],
        "contributors": "anelshaer",
        "slug": "detect-unencrypted-ssh-keys-for-domain-joined-accounts"
      },
      {
        "name": "Get crontab jobs",
        "platforms": "macOS, Linux",
        "description": "Line parsed values from system and user cron/tab.",
        "query": "SELECT * FROM crontab;",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-crontab-jobs"
      },
      {
        "name": "Get suid binaries",
        "platforms": "macOS, Linux",
        "description": "suid binaries in common locations.",
        "query": "SELECT * FROM suid_bin;",
        "purpose": "Informational",
        "remediation": "N/A",
        "slug": "get-suid-binaries"
      },
      {
        "name": "Detect dynamic linker hijacking on Linux (MITRE. T1574.006)",
        "platforms": "Linux",
        "description": "Detect any processes that run with LD_PRELOAD environment variable",
        "query": "SELECT env.pid, env.key, env.value, p.name,p.path, p.cmdline, p.cwd FROM process_envs env join processes p USING (pid) WHERE key='LD_PRELOAD';",
        "purpose": "Detection",
        "remediation": [
          "Identify the process/binary detected",
          "Confirm with system owner"
        ],
        "contributors": "anelshaer",
        "slug": "detect-dynamic-linker-hijacking-on-linux-mitre-t-1574-006"
      },
      {
        "name": "Detect dynamic linker hijacking on macOS (MITRE. T1574.006)",
        "platforms": "macOS",
        "description": "Detect any processes that run with DYLD_INSERT_LIBRARIES environment variable",
        "query": "SELECT env.pid, env.key, env.value, p.name,p.path, p.cmdline, p.cwd FROM process_envs env join processes p USING (pid) WHERE key='DYLD_INSERT_LIBRARIES';",
        "purpose": "Detection",
        "remediation": [
          "Identify the process/binary detected",
          "Confirm with system owner"
        ],
        "contributors": "anelshaer",
        "slug": "detect-dynamic-linker-hijacking-on-mac-os-mitre-t-1574-006"
      },
      {
        "name": "Get etc hosts entries",
        "platforms": "macOS, Linux",
        "description": "Line-parsed /etc/hosts",
        "query": "SELECT * FROM etc_hosts WHERE address not in ('127.0.0.1', '::1');",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-etc-hosts-entries"
      },
      {
        "name": "Get network interfaces",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Network interfaces MAC address",
        "query": "SELECT a.interface, a.address, d.mac FROM interface_addresses a JOIN interface_details d USING (interface) WHERE address not in ('127.0.0.1', '::1');",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-network-interfaces"
      },
      {
        "name": "Get local user accounts",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Local user accounts (including domain accounts that have logged on locally (Windows)).",
        "query": "SELECT uid, gid, username, description,directory, shell FROM users;",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-local-user-accounts"
      },
      {
        "name": "Detect active user accounts on servers",
        "platforms": "Linux",
        "description": "Domain Joined environment normally have root or other service account only and users are SSH-ing using their Domain Accounts.",
        "query": "SELECT * FROM shadow WHERE password_status='active' and username!='root';",
        "purpose": "Detection",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "detect-active-user-accounts-on-servers"
      },
      {
        "name": "Detect Nmap scanner",
        "platforms": "macOS, Linux, Windows, FreeBSD",
        "description": "Detect Nmap scanner process, identify the user, parent, process details.",
        "query": "SELECT p.pid, name, p.path, cmdline, cwd, start_time, parent, (SELECT name FROM processes WHERE pid=p.parent) AS parent_name, (SELECT username FROM users WHERE uid=p.uid) AS username FROM processes as p WHERE cmdline like 'nmap%';",
        "purpose": "Detection",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "detect-nmap-scanner"
      },
      {
        "name": "Get docker images on a system",
        "platforms": "macOS, Linux",
        "description": "Docker images information, can be used on normal system or a kubenode.",
        "query": "SELECT * FROM docker_images;",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-docker-images-on-a-system"
      },
      {
        "name": "Get docker running containers on a system",
        "platforms": "macOS, Linux",
        "description": "Docker containers information, can be used on normal system or a kubenode.",
        "query": "SELECT * FROM docker_containers;",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-docker-running-containers-on-a-system"
      },
      {
        "name": "Get docker running process on a system",
        "platforms": "macOS, Linux",
        "description": "Docker containers Processes, can be used on normal system or a kubenode.",
        "query": "SELECT c.id, c.name, c.image, c.image_id, c.command, c.created, c.state, c.status, p.cmdline  FROM docker_containers c CROSS JOIN docker_container_processes p using(id);",
        "purpose": "Informational",
        "remediation": "N/A",
        "contributors": "anelshaer",
        "slug": "get-docker-running-process-on-a-system"
      }
    ],
    "queryLibraryYmlRepoPath": "docs/1-Using-Fleet/standard-query-library/standard-query-library.yml"
  }
}
