{{- $apiIsStable := eq (include "fleet.ingress.isStable" .) "true" -}}
{{- $ingressSupportsPathType := eq (include "fleet.ingress.supportsPathType" .) "true" -}}
{{- if .Values.createIngress }}
apiVersion: {{ include "fleet.ingress.apiVersion" . }}
kind: Ingress
metadata:
{{- if or .Values.ingressAnnotations .Values.gke.useGKEIngress }}
  annotations:
{{- range $key, $value := $.Values.ingressAnnotations }}
    {{ $key }}: {{ $value | quote }}
{{- end }}
  {{- if .Values.gke.ingress.useGKEIngress }}
    kubernetes.io/ingress.class: gce
    {{- if .Values.gke.ingress.useManagedCertificate }}
    kubernetes.io/ingress.allow-http: "false"
    networking.gke.io/managed-certificates: fleet
    {{- end }}
  {{- end }}
{{- end }}
  labels:
    app: fleet
    chart: fleet
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ .Values.fleetName }}
  namespace: {{ .Release.Namespace }}
spec:
  rules:
  - host: {{ .Values.hostName }}
    http:
      paths:
      - path: /*
        {{- if $ingressSupportsPathType }}
        pathType: Exact
        {{- end }}
        backend:
        {{- if $apiIsStable }}
          service:
            name: {{ .Values.fleetName }}
            port:
              number: {{ .Values.fleet.listenPort }}
        {{- else }}
          serviceName: {{ .Values.fleetName }}
          servicePort: {{ .Values.fleetName }}
        {{- end }}
{{- end }}
