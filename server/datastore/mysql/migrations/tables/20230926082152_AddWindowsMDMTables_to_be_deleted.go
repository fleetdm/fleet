package tables

import (
	"database/sql"
	"fmt"
)

func init() {
	MigrationClient.AddMigration(Up_20230926082152, Down_20230926082152)
}

func Up_20230926082152(tx *sql.Tx) error {
	_, err := tx.Exec(`
CREATE TABLE old_windows_mdm_pending_commands (
    -- The table windows_mdm_pending_commands contains the stateless commands enqueued into the MDM pending commands table from fleetctl or fleet Server.
    -- These commands contain operations to be performed on a given device.
    -- They don't yet have the MessageID, SessionID, and CmdId information as this data gets populated during the response
    -- to a given MDM management request.

    -- command uuid is fleet-generated, so that a command has a unique id as
    -- soon as it is enqueued. Note that a UUID is 36 chars, but for
    -- consistency with nano_mdm_commands we use 127 here.
    command_uuid    VARCHAR(127) NOT NULL,

    -- the device_id is the unique identifier for the device
    device_id       VARCHAR(255) NOT NULL,

    -- cmd_verb is e.g. Add, Exec, Get, etc.
    cmd_verb        VARCHAR(20)  NOT NULL,

    -- setting_uri is the target OMADM URI for the command
    setting_uri     VARCHAR(255) NOT NULL,

    -- setting_value is the value to be set for the given setting_uri
    setting_value   VARCHAR(255) NOT NULL,

    -- data_type is the data format of the setting_value
    data_type       VARCHAR(255) NOT NULL,

    -- system_origin represents whether the command was generated from the system or from the user
    system_origin   TINYINT(1) NOT NULL DEFAULT FALSE,

    created_at      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    PRIMARY KEY (command_uuid, device_id)
)`)
	if err != nil {
		return fmt.Errorf("failed to create windows_mdm_commands table: %w", err)
	}

	_, err = tx.Exec(`
CREATE TABLE old_windows_mdm_commands (
    -- The windows_mdm_commands table represents the stateful commands that were actually sent over the wire.
    -- These commands include the MessageID, SessionID, and CmdId as they were sent to the device.
    -- They are stored in the commands table for error code tracking purposes.
    -- Additionally, this table can contain commands that were not part of the windows_mdm_pending_commands table and
    -- were generated by the Fleet server in response to an incoming MDM command.

    -- command uuid is fleet-generated, so that a command has a unique id as
    -- soon as it is enqueued. Note that a UUID is 36 chars, but for
    -- consistency with nano_mdm_commands we use 127 here.
    command_uuid    VARCHAR(127) NOT NULL,

    -- the device_id is the unique identifier for the device
    device_id       VARCHAR(255) NOT NULL,

    -- session_id specifies the identifier of the SyncML session that is associated with the SyncML message  (Section 2.2.3.8 on MS-MDM spec)
    session_id      VARCHAR(255) NOT NULL,

    -- message_id specifies a unique SyncML session identifier for the SyncML message (Section 2.2.3.6 on MS-MDM spec)
    message_id      VARCHAR(255) NOT NULL,

    -- command_id specifies a unique command identifier for the SyncML message (Section 2.2.3.2 on MS-MDM spec)
    command_id      VARCHAR(255) NOT NULL,

    -- cmd_verb is e.g. Add, Exec, Get, etc.
    cmd_verb        VARCHAR(20)  NOT NULL,

    -- setting_uri is the target OMADM URI for the command
    setting_uri     VARCHAR(255) NOT NULL,

    -- setting_value is the value to be set for the given setting_uri
    setting_value   VARCHAR(255) NOT NULL,

    -- system_origin represents whether the command was generated from the system or from the user
    system_origin   TINYINT(1) NOT NULL DEFAULT FALSE,

    -- this is the error code returned from the MDM Client Stack through Status/Results cmds
    -- empty field means that no response has been received for the command
    rx_error_code   VARCHAR(20) NOT NULL,

    -- this is the result value for a given protocol operation returned from the MDM Client Stack through Results cmd
    -- empty field means that no response has been received for the command
    rx_cmd_result   VARCHAR(255) NOT NULL,

    created_at      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

    PRIMARY KEY (command_uuid, device_id)
)`)
	if err != nil {
		return fmt.Errorf("failed to create windows_mdm_command_results table: %w", err)
	}

	return nil
}

func Down_20230926082152(tx *sql.Tx) error {
	return nil
}
