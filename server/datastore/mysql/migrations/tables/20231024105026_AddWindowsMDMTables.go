package tables

import (
	"database/sql"
	"fmt"
)

func init() {
	MigrationClient.AddMigration(Up_20231024105026, Down_20231024105026)
}

func Up_20231024105026(tx *sql.Tx) error {
	_, err := tx.Exec(`
-- This table contains the commands, which may target multiple devices.
CREATE TABLE windows_mdm_commands (
	-- managed and generated by Fleet, and used as CmdID in the MSMDM messages.
	command_uuid     VARCHAR(127) NOT NULL,
	-- the raw XML of the command
	raw_command      MEDIUMTEXT NOT NULL,
	-- whether the command was generated from the system or from a user
	system_origin    TINYINT(1) NOT NULL DEFAULT FALSE,
	-- the target OMADM URI for the command
	target_loc_uri   VARCHAR(255) NOT NULL,

	created_at       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at       TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY (command_uuid)
)`)
	if err != nil {
		return fmt.Errorf("failed to create windows_mdm_commands table: %w", err)
	}

	_, err = tx.Exec(`
CREATE TABLE windows_mdm_command_queue (
	host_uuid    VARCHAR(255) NOT NULL,
	command_uuid VARCHAR(127) NOT NULL,

	-- whether the command should be processed or not (can be deactivated to be ignored)
	active       BOOLEAN NOT NULL DEFAULT 1,

	created_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	updated_at   TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,

	PRIMARY KEY (host_uuid, command_uuid),

	-- NOTE: no foreign key added for host_uuid, we don't add FKs to the hosts table.

	FOREIGN KEY (command_uuid)
		REFERENCES windows_mdm_commands (command_uuid)
		ON DELETE CASCADE ON UPDATE CASCADE
)`)
	if err != nil {
		return fmt.Errorf("failed to create windows_mdm_command_queue table: %w", err)
	}

	_, err = tx.Exec(`
CREATE TABLE windows_mdm_responses (
	id           INT(10) UNSIGNED NOT NULL AUTO_INCREMENT,
	-- the host that sent the response
	host_uuid    VARCHAR(255) NOT NULL,
	-- the full SyncML, potentially containing results for multiple commands
	raw_response MEDIUMTEXT NOT NULL,

	PRIMARY KEY (id)
)`)
	if err != nil {
		return fmt.Errorf("failed to create windows_mdm_responses table: %w", err)
	}

	_, err = tx.Exec(`
CREATE TABLE windows_mdm_command_results (
	host_uuid    VARCHAR(255) NOT NULL,
	command_uuid VARCHAR(127) NOT NULL,

	-- TODO: what is that? If it's the <Status><Data>200</Data></Status> then
	-- seems like it would be a duplicate of the rx_error_code (now status_code)?
	status       VARCHAR(31)  NOT NULL,

	-- the raw <Results> XML segment for that command, may be empty if the
	-- command had no results to be returned by the device.
	raw_result   MEDIUMTEXT NOT NULL,

	-- FK to the full SyncML response containing this command's result and/or
	-- status.
	response_id  INT(10) UNSIGNED NOT NULL,

	-- this is the status code returned from the MDM device in the
	-- <Status> element corresponding to this command.
	status_code  VARCHAR(31)  NOT NULL, -- TODO: should we go ahead and make that INT? Seems like it's always HTTP-like codes.

	PRIMARY KEY (host_uuid, command_uuid),

	FOREIGN KEY (command_uuid)
		REFERENCES windows_mdm_commands (command_uuid)
		ON DELETE CASCADE ON UPDATE CASCADE,

	FOREIGN KEY (response_id)
		REFERENCES windows_mdm_responses (id)
		ON DELETE CASCADE ON UPDATE CASCADE
)`)
	if err != nil {
		return fmt.Errorf("failed to create windows_mdm_command_results table: %w", err)
	}

	return nil
}

func Down_20231024105026(tx *sql.Tx) error {
	return nil
}
