// Automatically generated by mockimpl. DO NOT EDIT!

package mock

import (
	"context"
	"sync"
	"time"

	"github.com/fleetdm/fleet/v4/server/fleet"
	"github.com/fleetdm/fleet/v4/server/mdm/nanodep/client"
	"github.com/fleetdm/fleet/v4/server/mdm/nanomdm/mdm"
)

var _ fleet.MDMAppleStore = (*MDMAppleStore)(nil)

type RetrieveAuthTokensFunc func(ctx context.Context, name string) (*client.OAuth1Tokens, error)

type RetrieveConfigFunc func(p0 context.Context, p1 string) (*client.Config, error)

type RetrieveAssignerProfileFunc func(ctx context.Context, name string) (profileUUID string, modTime time.Time, err error)

type RetrieveCursorFunc func(ctx context.Context, name string) (cursor string, modTime time.Time, err error)

type StoreCursorFunc func(ctx context.Context, name string, cursor string) error

type StoreAuthTokensFunc func(ctx context.Context, name string, tokens *client.OAuth1Tokens) error

type StoreConfigFunc func(ctx context.Context, name string, config *client.Config) error

type StoreTokenPKIFunc func(ctx context.Context, name string, pemCert []byte, pemKey []byte) error

type RetrieveTokenPKIFunc func(ctx context.Context, name string) (pemCert []byte, pemKey []byte, err error)

type StoreAssignerProfileFunc func(ctx context.Context, name string, profileUUID string) error

type EnqueueDeviceLockCommandFunc func(ctx context.Context, host *fleet.Host, cmd *mdm.Command, pin string) error

type MDMAppleStore struct {
	RetrieveAuthTokensFunc        RetrieveAuthTokensFunc
	RetrieveAuthTokensFuncInvoked bool

	RetrieveConfigFunc        RetrieveConfigFunc
	RetrieveConfigFuncInvoked bool

	RetrieveAssignerProfileFunc        RetrieveAssignerProfileFunc
	RetrieveAssignerProfileFuncInvoked bool

	RetrieveCursorFunc        RetrieveCursorFunc
	RetrieveCursorFuncInvoked bool

	StoreCursorFunc        StoreCursorFunc
	StoreCursorFuncInvoked bool

	StoreAuthTokensFunc        StoreAuthTokensFunc
	StoreAuthTokensFuncInvoked bool

	StoreConfigFunc        StoreConfigFunc
	StoreConfigFuncInvoked bool

	StoreTokenPKIFunc        StoreTokenPKIFunc
	StoreTokenPKIFuncInvoked bool

	RetrieveTokenPKIFunc        RetrieveTokenPKIFunc
	RetrieveTokenPKIFuncInvoked bool

	StoreAssignerProfileFunc        StoreAssignerProfileFunc
	StoreAssignerProfileFuncInvoked bool

	EnqueueDeviceLockCommandFunc        EnqueueDeviceLockCommandFunc
	EnqueueDeviceLockCommandFuncInvoked bool

	mu sync.Mutex
}

func (fs *MDMAppleStore) RetrieveAuthTokens(ctx context.Context, name string) (*client.OAuth1Tokens, error) {
	fs.mu.Lock()
	fs.RetrieveAuthTokensFuncInvoked = true
	fs.mu.Unlock()
	return fs.RetrieveAuthTokensFunc(ctx, name)
}

func (fs *MDMAppleStore) RetrieveConfig(p0 context.Context, p1 string) (*client.Config, error) {
	fs.mu.Lock()
	fs.RetrieveConfigFuncInvoked = true
	fs.mu.Unlock()
	return fs.RetrieveConfigFunc(p0, p1)
}

func (fs *MDMAppleStore) RetrieveAssignerProfile(ctx context.Context, name string) (profileUUID string, modTime time.Time, err error) {
	fs.mu.Lock()
	fs.RetrieveAssignerProfileFuncInvoked = true
	fs.mu.Unlock()
	return fs.RetrieveAssignerProfileFunc(ctx, name)
}

func (fs *MDMAppleStore) RetrieveCursor(ctx context.Context, name string) (cursor string, modTime time.Time, err error) {
	fs.mu.Lock()
	fs.RetrieveCursorFuncInvoked = true
	fs.mu.Unlock()
	return fs.RetrieveCursorFunc(ctx, name)
}

func (fs *MDMAppleStore) StoreCursor(ctx context.Context, name string, cursor string) error {
	fs.mu.Lock()
	fs.StoreCursorFuncInvoked = true
	fs.mu.Unlock()
	return fs.StoreCursorFunc(ctx, name, cursor)
}

func (fs *MDMAppleStore) StoreAuthTokens(ctx context.Context, name string, tokens *client.OAuth1Tokens) error {
	fs.mu.Lock()
	fs.StoreAuthTokensFuncInvoked = true
	fs.mu.Unlock()
	return fs.StoreAuthTokensFunc(ctx, name, tokens)
}

func (fs *MDMAppleStore) StoreConfig(ctx context.Context, name string, config *client.Config) error {
	fs.mu.Lock()
	fs.StoreConfigFuncInvoked = true
	fs.mu.Unlock()
	return fs.StoreConfigFunc(ctx, name, config)
}

func (fs *MDMAppleStore) StoreTokenPKI(ctx context.Context, name string, pemCert []byte, pemKey []byte) error {
	fs.mu.Lock()
	fs.StoreTokenPKIFuncInvoked = true
	fs.mu.Unlock()
	return fs.StoreTokenPKIFunc(ctx, name, pemCert, pemKey)
}

func (fs *MDMAppleStore) RetrieveTokenPKI(ctx context.Context, name string) (pemCert []byte, pemKey []byte, err error) {
	fs.mu.Lock()
	fs.RetrieveTokenPKIFuncInvoked = true
	fs.mu.Unlock()
	return fs.RetrieveTokenPKIFunc(ctx, name)
}

func (fs *MDMAppleStore) StoreAssignerProfile(ctx context.Context, name string, profileUUID string) error {
	fs.mu.Lock()
	fs.StoreAssignerProfileFuncInvoked = true
	fs.mu.Unlock()
	return fs.StoreAssignerProfileFunc(ctx, name, profileUUID)
}

func (fs *MDMAppleStore) EnqueueDeviceLockCommand(ctx context.Context, host *fleet.Host, cmd *mdm.Command, pin string) error {
	fs.mu.Lock()
	fs.EnqueueDeviceLockCommandFuncInvoked = true
	fs.mu.Unlock()
	return fs.EnqueueDeviceLockCommandFunc(ctx, host, cmd, pin)
}
