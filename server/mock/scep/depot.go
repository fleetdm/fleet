// Automatically generated by mockimpl. DO NOT EDIT!

package mock

import (
	"crypto/rsa"
	"crypto/x509"
	"math/big"
	"sync"

	"github.com/fleetdm/fleet/v4/server/mdm/scep/depot"
)

var _ depot.Depot = (*Depot)(nil)

type CAFunc func(pass []byte) ([]*x509.Certificate, *rsa.PrivateKey, error)

type PutFunc func(name string, crt *x509.Certificate) error

type SerialFunc func() (*big.Int, error)

type HasCNFunc func(cn string, allowTime int, cert *x509.Certificate, revokeOldCertificate bool) (bool, error)

type Depot struct {
	CAFunc        CAFunc
	CAFuncInvoked bool

	PutFunc        PutFunc
	PutFuncInvoked bool

	SerialFunc        SerialFunc
	SerialFuncInvoked bool

	HasCNFunc        HasCNFunc
	HasCNFuncInvoked bool

	mu sync.Mutex
}

func (d *Depot) CA(pass []byte) ([]*x509.Certificate, *rsa.PrivateKey, error) {
	d.mu.Lock()
	d.CAFuncInvoked = true
	d.mu.Unlock()
	return d.CAFunc(pass)
}

func (d *Depot) Put(name string, crt *x509.Certificate) error {
	d.mu.Lock()
	d.PutFuncInvoked = true
	d.mu.Unlock()
	return d.PutFunc(name, crt)
}

func (d *Depot) Serial() (*big.Int, error) {
	d.mu.Lock()
	d.SerialFuncInvoked = true
	d.mu.Unlock()
	return d.SerialFunc()
}

func (d *Depot) HasCN(cn string, allowTime int, cert *x509.Certificate, revokeOldCertificate bool) (bool, error) {
	d.mu.Lock()
	d.HasCNFuncInvoked = true
	d.mu.Unlock()
	return d.HasCNFunc(cn, allowTime, cert, revokeOldCertificate)
}
