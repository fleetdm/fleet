// Automatically generated by mockimpl. DO NOT EDIT!

package mock

import (
	"context"
	"sync"

	"github.com/fleetdm/fleet/v4/server/mdm/android"
	"google.golang.org/api/androidmanagement/v1"
)

var _ android.Proxy = (*Proxy)(nil)

type SignupURLsCreateFunc func(callbackURL string) (*android.SignupDetails, error)

type EnterprisesCreateFunc func(ctx context.Context, req android.ProxyEnterprisesCreateRequest) (string, string, error)

type EnterprisesPoliciesPatchFunc func(enterpriseID string, policyName string, policy *androidmanagement.Policy) error

type EnterprisesEnrollmentTokensCreateFunc func(enterpriseName string, token *androidmanagement.EnrollmentToken) (*androidmanagement.EnrollmentToken, error)

type EnterpriseDeleteFunc func(enterpriseID string) error

type Proxy struct {
	SignupURLsCreateFunc        SignupURLsCreateFunc
	SignupURLsCreateFuncInvoked bool

	EnterprisesCreateFunc        EnterprisesCreateFunc
	EnterprisesCreateFuncInvoked bool

	EnterprisesPoliciesPatchFunc        EnterprisesPoliciesPatchFunc
	EnterprisesPoliciesPatchFuncInvoked bool

	EnterprisesEnrollmentTokensCreateFunc        EnterprisesEnrollmentTokensCreateFunc
	EnterprisesEnrollmentTokensCreateFuncInvoked bool

	EnterpriseDeleteFunc        EnterpriseDeleteFunc
	EnterpriseDeleteFuncInvoked bool

	mu sync.Mutex
}

func (s *Proxy) SignupURLsCreate(callbackURL string) (*android.SignupDetails, error) {
	s.mu.Lock()
	s.SignupURLsCreateFuncInvoked = true
	s.mu.Unlock()
	return s.SignupURLsCreateFunc(callbackURL)
}

func (s *Proxy) EnterprisesCreate(ctx context.Context, req android.ProxyEnterprisesCreateRequest) (string, string, error) {
	s.mu.Lock()
	s.EnterprisesCreateFuncInvoked = true
	s.mu.Unlock()
	return s.EnterprisesCreateFunc(ctx, req)
}

func (s *Proxy) EnterprisesPoliciesPatch(enterpriseID string, policyName string, policy *androidmanagement.Policy) error {
	s.mu.Lock()
	s.EnterprisesPoliciesPatchFuncInvoked = true
	s.mu.Unlock()
	return s.EnterprisesPoliciesPatchFunc(enterpriseID, policyName, policy)
}

func (s *Proxy) EnterprisesEnrollmentTokensCreate(enterpriseName string, token *androidmanagement.EnrollmentToken) (*androidmanagement.EnrollmentToken, error) {
	s.mu.Lock()
	s.EnterprisesEnrollmentTokensCreateFuncInvoked = true
	s.mu.Unlock()
	return s.EnterprisesEnrollmentTokensCreateFunc(enterpriseName, token)
}

func (s *Proxy) EnterpriseDelete(enterpriseID string) error {
	s.mu.Lock()
	s.EnterpriseDeleteFuncInvoked = true
	s.mu.Unlock()
	return s.EnterpriseDeleteFunc(enterpriseID)
}
