package kolide

type CarveStore interface {
	NewCarve(metadata *CarveMetadata) (*CarveMetadata, error)
	CarveBySessionId(sessionId string) (*CarveMetadata, error)
	NewBlock(metadtaId int64, blockId int, data []byte) error
}

type CarveMetadata struct {
	// ID is the DB auto-increment ID for the carve.
	ID int64 `json:"id" db:"id"`
	// BlockCount is the number of blocks in the carve.
	BlockCount int `json:"block_count" db:"block_count"`
	// BlcokSize is the size of each block in the carve.
	BlockSize int `json:"block_size" db:"block_size"`
	// CarveSize is the total size of the carve.
	CarveSize int `json:"carve_size" db:"carve_size"`
	// CarveId is a uuid generated by osquery for the carve.
	CarveId string `json:"carve_id" db:"carve_id"`
	// RequestId is the name of the query that kicked off this carve.
	RequestId string `json:"request_id" db:"request_id"`
	// SessionId is generated by Fleet and used by osquery to identify blocks.
	SessionId string `json:"session_id" db:"session_id"`

	// MaxBlock is the highest block number currently stored for this carve.
	// This value is not stored directly, but generated from the carve_blocks
	// table.
	MaxBlock int `json:"max_block" db:"max_block"`
}
