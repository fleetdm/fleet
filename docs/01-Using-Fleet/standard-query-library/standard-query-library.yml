---
apiVersion: v1
kind: query
spec:
  name: Get OpenSSL versions
  platforms: Linux
  description: Retrieves the OpenSSL version.
  query: SELECT name AS name, version AS version, 'deb_packages' AS source FROM deb_packages WHERE name LIKE 'openssl%' UNION SELECT name AS name, version AS version, 'apt_sources' AS source FROM apt_sources WHERE name LIKE 'openssl%' UNION SELECT name AS name, version AS version, 'rpm_packages' AS source FROM rpm_packages WHERE name LIKE 'openssl%';
  purpose: Informational
  tags: inventory
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get authorized SSH keys
  platforms: macOS, Linux
  description: Presence of authorized SSH keys may be unusual on laptops. Could be completely normal on servers, but may be worth auditing for unusual keys and/or changes.
  query: SELECT username, authorized_keys. * FROM users CROSS JOIN authorized_keys USING (uid);
  purpose: Informational
  remediation: Check out the linked table (https://github.com/fleetdm/fleet/blob/32b4d53e7f1428ce43b0f9fa52838cbe7b413eed/handbook/queries/detect-hosts-with-high-severity-vulnerable-versions-of-openssl.md#table-of-vulnerable-openssl-versions) to determine if the installed version is a high severity vulnerability and view the corresponding CVE(s)
  tags: built-in, ssh
  contributors: mike-j-thomas
---
apiVersion: v1
kind: query
spec:
  name: Get authorized keys for Domain Joined Accounts
  platforms: macOS, Linux
  description: List authorized_keys for each user on the system.
  query: SELECT *  FROM users CROSS JOIN  authorized_keys USING(uid) WHERE  username IN (SELECT distinct(username) FROM last);
  purpose: Informational
  tags: active directory, ssh
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get crashes
  platforms: macOS
  description: Retrieve application, system, and mobile app crash logs.
  query: SELECT uid, datetime, responsible, exception_type, identifier, version, crash_path FROM users CROSS JOIN crashes USING (uid);
  purpose: Informational
  tags: troubleshooting
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get installed Chrome Extensions
  platforms: macOS, Linux, Windows, FreeBSD
  description: List installed Chrome Extensions for all users.
  query: SELECT * FROM users CROSS JOIN chrome_extensions USING (uid);
  purpose: Informational
  tags: browser, built-in, inventory
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get installed FreeBSD software
  platforms: FreeBSD
  description: Get all software installed on a FreeBSD computer, including browser plugins and installed packages. Note that this does not include other running processes in the processes table.
  query: SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Package (pkg)' AS type, 'pkg_packages' AS source FROM pkg_packages;
  purpose: Informational
  tags: inventory
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get installed Linux software
  platforms: Linux
  description: Get all software installed on a Linux computer, including browser plugins and installed packages. Note that this does not include other running processes in the processes table.
  query: SELECT name AS name, version AS version, 'Package (APT)' AS type, 'apt_sources' AS source FROM apt_sources UNION SELECT name AS name, version AS version, 'Package (deb)' AS type, 'deb_packages' AS source FROM deb_packages UNION SELECT package AS name, version AS version, 'Package (Portage)' AS type, 'portage_packages' AS source FROM portage_packages UNION SELECT name AS name, version AS version, 'Package (RPM)' AS type, 'rpm_packages' AS source FROM rpm_packages UNION SELECT name AS name, '' AS version, 'Package (YUM)' AS type, 'yum_sources' AS source FROM yum_sources UNION SELECT name AS name, version AS version, 'Package (NPM)' AS type, 'npm_packages' AS source FROM npm_packages UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages;
  purpose: Informational
  tags: inventory, built-in
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get installed macOS software
  platforms: macOS
  description: Get all software installed on a macOS computer, including apps, browser plugins, and installed packages. Note that this does not include other running processes in the processes table.
  query: SELECT name AS name, bundle_short_version AS version, 'Application (macOS)' AS type, 'apps' AS source FROM apps UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name As name, version AS version, 'Browser plugin (Safari)' AS type, 'safari_extensions' AS source FROM safari_extensions UNION SELECT name AS name, version AS version, 'Package (Homebrew)' AS type, 'homebrew_packages' AS source FROM homebrew_packages;
  purpose: Informational
  tags: inventory, built-in
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get installed Safari extensions
  platforms: macOS
  description: Retrieves the list of installed Safari Extensions for all users in the target system.
  query: SELECT safari_extensions.* FROM users join safari_extensions USING (uid);
  purpose: Informational
  tags: browser, built-in, inventory
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get installed Windows software
  platforms: Windows
  description: Get all software installed on a Windows computer, including programs, browser plugins, and installed packages. Note that this does not include other running processes in the processes table.
  query: SELECT name AS name, version AS version, 'Program (Windows)' AS type, 'programs' AS source FROM programs UNION SELECT name AS name, version AS version, 'Package (Python)' AS type, 'python_packages' AS source FROM python_packages UNION SELECT name AS name, version AS version, 'Browser plugin (IE)' AS type, 'ie_extensions' AS source FROM ie_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Chrome)' AS type, 'chrome_extensions' AS source FROM chrome_extensions UNION SELECT name AS name, version AS version, 'Browser plugin (Firefox)' AS type, 'firefox_addons' AS source FROM firefox_addons UNION SELECT name AS name, version AS version, 'Package (Chocolatey)' AS type, 'chocolatey_packages' AS source FROM chocolatey_packages UNION SELECT name AS name, version AS version, 'Package (Atom)' AS type, 'atom_packages' AS source FROM atom_packages;
  purpose: Informational
  tags: inventory, built-in
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get laptops with failing batteries
  platforms: macOS
  description: Lists all laptops with under-performing or failing batteries.
  query: SELECT * FROM battery WHERE health != 'Good' AND condition NOT IN ('', 'Normal');
  purpose: Informational
  tags: troubleshooting, hardware, inventory
  contributors: zwass
---
apiVersion: v1
kind: query
spec:
  name: Get current users with active shell/console on the system
  platforms: macOS, Linux, Windows, FreeBSD
  description: Get current users with active shell/console on the system and associated process
  query: SELECT user,host,time, p.name, p.cmdline, p.cwd, p.root FROM logged_in_users liu, processes p WHERE liu.pid = p.pid and liu.type='user' and liu.user <> '' ORDER BY time;
  purpose: Informational
  tags: hunting, built-in
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get unencrypted SSH keys for local accounts
  platforms: macOS, Linux, Windows, FreeBSD
  description: Identify SSH keys created without a passphrase which can be used in Lateral Movement (MITRE. TA0008)
  query: SELECT uid, username, description, path, encrypted FROM users CROSS JOIN user_ssh_keys using (uid) WHERE encrypted=0;
  purpose: Informational
  tags: inventory, compliance, ssh, built-in
  remediation: First, make the user aware about the impact of SSH keys.  Then rotate the unencrypted keys detected.
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get unencrypted SSH keys for domain-joined accounts
  platforms: macOS, Linux, Windows, FreeBSD
  description: Identify SSH keys created without a passphrase which can be used in Lateral Movement (MITRE. TA0008)
  query: SELECT uid, username, description, path, encrypted FROM users CROSS JOIN user_ssh_keys using (uid) WHERE encrypted=0 and username in (SELECT distinct(username) FROM last);
  purpose: Informational
  tags: inventory, compliance, ssh, active directory
  remediation: First, make the user aware about the impact of SSH keys.  Then rotate the unencrypted keys detected.
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get dynamic linker hijacking on Linux (MITRE. T1574.006)
  platforms: Linux
  description: Detect any processes that run with LD_PRELOAD environment variable
  query: SELECT env.pid, env.key, env.value, p.name,p.path, p.cmdline, p.cwd FROM process_envs env join processes p USING (pid) WHERE key='LD_PRELOAD';
  purpose: Informational
  tags: hunting, ATTACK, t1574
  remediation: Identify the process/binary detected and confirm with the system's owner.
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get dynamic linker hijacking on macOS (MITRE. T1574.006)
  platforms: macOS
  description: Detect any processes that run with DYLD_INSERT_LIBRARIES environment variable
  query: SELECT env.pid, env.key, env.value, p.name,p.path, p.cmdline, p.cwd FROM process_envs env join processes p USING (pid) WHERE key='DYLD_INSERT_LIBRARIES';
  purpose: Informational
  tags: hunting, ATTACK, t1574
  remediation: Identify the process/binary detected and confirm with the system's owner.
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get etc hosts entries
  platforms: macOS, Linux
  description: Line-parsed /etc/hosts
  query: SELECT * FROM etc_hosts WHERE address not in ('127.0.0.1', '::1');
  purpose: informational
  tags: hunting, inventory
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get network interfaces
  platforms: macOS, Linux, Windows, FreeBSD
  description: Network interfaces MAC address
  query: SELECT a.interface, a.address, d.mac FROM interface_addresses a JOIN interface_details d USING (interface) WHERE address not in ('127.0.0.1', '::1');
  purpose: informational
  tags: hunting, inventory
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get local user accounts
  platforms: macOS, Linux, Windows, FreeBSD
  description: Local user accounts (including domain accounts that have logged on locally (Windows)).
  query: SELECT uid, gid, username, description, directory, shell FROM users;
  purpose: informational
  tags: hunting, inventory
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get active user accounts on servers
  platforms: Linux
  description: Domain Joined environments normally have root or other service only accounts and users are SSH-ing using their Domain Accounts.
  query: SELECT * FROM shadow WHERE password_status='active' and username!='root';
  purpose: informational
  tags: hunting, inventory, Active Directory
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get Nmap scanner
  platforms: macOS, Linux, Windows, FreeBSD
  description: Get Nmap scanner process, as well as its user, parent, and process details.
  query: SELECT p.pid, name, p.path, cmdline, cwd, start_time, parent,
    (SELECT name FROM processes WHERE pid=p.parent) AS parent_name,
    (SELECT username FROM users WHERE uid=p.uid) AS username
    FROM processes as p WHERE cmdline like 'nmap%';
  purpose: Informational
  tags: hunting, ATTACK, t1046
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get Docker contained processes on a system
  platforms: macOS, Linux
  description: Docker containers Processes, can be used on normal systems or a kubenode.
  query: SELECT c.id, c.name, c.image, c.image_id, c.command, c.created, c.state, c.status, p.cmdline  FROM docker_containers c CROSS JOIN docker_container_processes p using(id);
  purpose: Informational
  tags: built-in, containers, inventory
  contributors: anelshaer
---
apiVersion: v1
kind: query
spec:
  name: Get Windows print spooler remote code execution vulnerability
  platforms: Windows
  description: Detects devices that are potentially vulnerable to CVE-2021-1675 because the print spooler service is not disabled.
  query: SELECT CASE cnt WHEN 2 THEN "TRUE" ELSE "FALSE" END "Vulnerable" FROM (SELECT name start_type, COUNT(name) AS cnt FROM services WHERE name = 'NTDS' or (name = 'Spooler' and start_type <> 'DISABLED')) WHERE cnt = 2;
  purpose: Informational
  tags: vulnerability
  contributors: maravedi
---
apiVersion: v1
kind: query
spec:
  name: Get local users and their privileges
  platforms: macOS, Linux, Windows
  description: Collects the local user accounts and their respective user group.
  query: SELECT uid, username, type, groupname FROM users u JOIN groups g ON g.gid = u.gid;
  purpose: informational
  tags: inventory
  contributors: noahtalerman
---
apiVersion: v1
kind: query
spec:
  name: Get processes that no longer exist on disk
  platforms: Linux, macOS, Windows
  description: Lists all processes of which the binary which launched them no longer exists on disk. Attackers often delete files from disk after launching a process to mask presence.
  query: SELECT name, path, pid FROM processes WHERE on_disk = 0;
  purpose: Incident response
  tags: hunting, built-in
  contributors: alphabrevity
---
apiVersion: v1
kind: query
spec:
  name: Get user files matching a specific hash
  platforms: macOS, Linux
  description: Looks for specific hash in the Users/ directories for files that are less than 50MB (osquery file size limitation.)
  query: SELECT path, sha256 FROM hash WHERE path IN (SELECT path FROM file WHERE size < 50000000 AND path LIKE '/Users/%/Documents/%%') AND sha256 = '16d28cd1d78b823c4f961a6da78d67a8975d66cde68581798778ed1f98a56d75';
  purpose: Informational
  tags: hunting, built-in
  contributors: alphabrevity
---
apiVersion: v1
kind: query
spec:
  name: Get local administrator accounts on macOS
  platforms: macOS
  description: The query allows you to check macOS systems for local administrator accounts.
  query: SELECT uid, username, type, group name FROM users u JOIN groups g ON g.gid = u.gid;
  purpose: Informational
  tags: hunting, inventory
  contributors: alphabrevity
---
apiVersion: v1
kind: query
spec:
  name: Get all listening ports, by process
  platforms: Linux, macOS, Windows
  description: List ports that are listening on all interfaces, along with the process to which they are attached.
  query: SELECT lp.address, lp.pid, lp.port, lp.protocol, p.name, p.path, p.cmdline FROM listening_ports lp JOIN processes p ON lp.pid = p.pid WHERE lp.address = "0.0.0.0";
  purpose: Informational
  tags: hunting, network
  contributors: alphabrevity
---
apiVersion: v1
kind: query
spec:
  name: Get whether TeamViewer is installed/running
  platforms: Windows
  description: Looks for the TeamViewer service running on machines. This is often used when attackers gain access to a machine, running TeamViewer to allow them to access a machine.
  query: SELECT display_name,status,s.pid,p.path FROM services AS s JOIN processes AS p USING(pid) WHERE s.name LIKE "%teamviewer%";
  purpose: Informational
  tags: hunting, inventory
  contributors: alphabrevity
---
apiVersion: v1
kind: query
spec:
  name: Get malicious Python backdoors
  platforms: macOS, Linux, Windows
  description: Watches for the backdoored Python packages installed on the system. See (http://www.nbu.gov.sk/skcsirt-sa-20170909-pypi/index.html)
  query: SELECT CASE cnt WHEN 0 THEN "NONE_INSTALLED" ELSE "INSTALLED" END AS "Malicious Python Packages", package_name, package_version FROM (SELECT COUNT(name) AS cnt, name AS package_name, version AS package_version, path AS package_path FROM python_packages WHERE package_name IN ('acquisition', 'apidev-coop', 'bzip', 'crypt', 'django-server', 'pwd', 'setup-tools', 'telnet', 'urlib3', 'urllib'));
  purpose: Informational
  tags: hunting, inventory, malware
  contributors: alphabrevity
---
apiVersion: v1
kind: query
spec:
  name: Check for artifacts of the Floxif trojan
  platforms: Windows
  description: Checks for artifacts from the Floxif trojan on Windows machines.
  query: SELECT * FROM registry WHERE path LIKE 'HKEY_LOCAL_MACHINE\\SOFTWARE\\Piriform\\Agomo%';
  purpose: Informational
  tags: hunting, malware
  contributors: micheal-o
---
apiVersion: v1
kind: query
spec:
  name: Get Shimcache table
  platforms: Windows
  description: Returns forensic data showing evidence of likely file execution, in addition to the last modified timestamp of the file, order of execution, full file path order of execution, and the order in which files were executed.
  query: select * from Shimcache
  purpose: Informational
  tags: hunting
  contributors: puffyCid
---
apiVersion: v1
kind: query
spec:
  name: Get running docker containers
  platforms: macOS, Linux
  description: Returns the running Docker containers
  query: SELECT id, name, image, image_id, state, status FROM docker_containers WHERE state = "running";
  purpose: Informational
  tags: containers, inventory
  contributors: DominusKelvin
---
apiVersion: v1
kind: query
spec:
  name: Get applications hogging memory
  platforms: macOS, Linux, Windows
  description: Returns top 10 applications or processes hogging memory the most.
  query: SELECT pid, name, ROUND((total_size * '10e-7'), 2) AS memory_used FROM processes ORDER BY total_size DESC LIMIT 10;
  purpose: Informational
  tags: troubleshooting
  contributors: DominusKelvin
---
apiVersion: v1
kind: query
spec:
  name: Get servers with root login in the last 24 hours
  platforms: macOS, Linux, Windows
  description: Returns servers with root login in the last 24 hours and the time the users were logged in.
  query: SELECT * FROM last WHERE username = "root" AND time > (( SELECT unix_time FROM time ) - 86400 );
  purpose: Informational
  tags: hunting
  contributors: DominusKelvin
---
apiVersion: v1
kind: query
spec:
  name: Detect active processes with Log4j running
  platforms: macOS, Linux
  description: "Returns a list of active processes and the Jar paths which are using Log4j. Version numbers are usually within the Jar filename. Note: This query is resource intensive and has caused problems on systems with limited swap space. Test on some systems before running this widely."
  query: |
    WITH target_jars AS (
      SELECT DISTINCT path
      FROM (
          WITH split(word, str) AS(
            SELECT '', cmdline || ' '
            FROM processes
            UNION ALL
            SELECT substr(str, 0, instr(str, ' ')), substr(str, instr(str, ' ') + 1)
            FROM split
            WHERE str != '')
          SELECT word AS path
          FROM split
          WHERE word LIKE '%.jar'
        UNION ALL
          SELECT path
          FROM process_open_files
          WHERE path LIKE '%.jar'
      )
    )
    SELECT path, matches
    FROM yara
    WHERE path IN (SELECT path FROM target_jars)
      AND count > 0
      AND sigrule IN (
        'rule log4jJndiLookup {
          strings:
            $jndilookup = "JndiLookup"
          condition:
            $jndilookup
        }',
        'rule log4jJavaClass {
          strings:
            $javaclass = "org/apache/logging/log4j"
          condition:
            $javaclass
        }'
      );
  purpose: Detection
  tags: vulnerability
  contributors: zwass,tgauda
---
apiVersion: v1
kind: query
spec:
  name: Get applications that were opened within the last 24 hours
  platforms: macOS
  description: Returns applications that were opened within the last 24 hours starting with the last opened application.
  query: SELECT * FROM apps WHERE last_opened_time > (( SELECT unix_time FROM time ) - 86400 ) ORDER BY last_opened_time DESC;
  purpose: Informational
  tags: inventory
  contributors: DominusKelvin
---
apiVersion: v1
kind: query
spec:
  name: Get applications that are not in the Applications directory
  platforms: macOS
  description: Returns applications that are not in the `/Applications` directory
  query: SELECT * FROM apps WHERE path NOT LIKE '/Applications/%';
  purpose: Informational
  tags: hunting, inventory
  contributors: DominusKelvin
---
apiVersion: v1
kind: query
spec:
  name: Get subscription-based applications that have not been opened for the last 30 days
  platforms: macOS
  description: Returns applications that are subscription-based and have not been opened for the last 30 days. You can replace the list of applications with those specific to your use case.
  query: SELECT * FROM apps WHERE path LIKE '/Applications/%' AND name IN ("Photoshop.app", "Adobe XD.app", "Sketch.app", "Illustrator.app") AND last_opened_time < (( SELECT unix_time FROM time ) - 2592000000000 );
  purpose: Informational
  tags: inventory
  contributors: DominusKelvin
---
apiVersion: v1
kind: query
spec:
  name: Get operating system information
  platforms: macOS, Windows, Linux
  description: Returns the operating system name and version on the device.
  query: SELECT name, version FROM os_version;
  purpose: Informational
  tags: inventory, built-in
  contributors: noahtalerman
---
apiVersion: v1
kind: policy
spec:
  name: Gatekeeper enabled (macOS)
  query: SELECT 1 FROM gatekeeper WHERE assessments_enabled = 1;
  description: Checks to make sure that the Gatekeeper feature is enabled on macOS devices. Gatekeeper tries to ensure only trusted software is run on a mac machine.
  resolution: "To enable Gatekeeper, on the failing device, run the following command in the Terminal app: /usr/sbin/spctl --master-enable."
  platforms: macOS
  tags: compliance, hardening, built-in
  platform: darwin
  contributors: groob
---
apiVersion: v1
kind: policy
spec:
  name: Full disk encryption enabled (Windows)
  query: SELECT 1 FROM bitlocker_info WHERE drive_letter='C:' AND protection_status=1;
  description: Checks to make sure that full disk encryption is enabled on Windows devices.
  resolution:
    "To get additional information, run the following osquery query on the failing device: SELECT * FROM bitlocker_info. In the
    query results, if protection_status is 2, then the status cannot be determined. If it is 0, it is
    considered unprotected. Use the additional results (percent_encrypted, conversion_status, etc.) to
    help narrow down the specific reason why Windows considers the volume unprotected."
  platforms: Windows
  platform: windows
  tags: compliance, hardening, built-in
  contributors: defensivedepth
---
apiVersion: v1
kind: policy
spec:
  name: Full disk encryption enabled (macOS)
  query: SELECT 1 FROM disk_encryption WHERE user_uuid IS NOT "" AND filevault_status = 'on' LIMIT 1;
  description: Checks to make sure that full disk encryption (FileVault) is enabled on macOS devices.
  resolution: To enable full disk encryption, on the failing device, select System Preferences > Security & Privacy > FileVault > Turn On FileVault.
  platforms: macOS
  tags: compliance, hardening, built-in
  platform: darwin
  contributors: groob
---
apiVersion: v1
kind: policy
spec:
  name: Full disk encryption enabled (Linux)
  query: SELECT 1 FROM disk_encryption WHERE encrypted=1 AND name LIKE '/dev/dm-1';
  description: Checks if the root drive is encrypted. There are many ways to encrypt Linux systems. This is the default on distributions such as Ubuntu.
  resolution: "Ensure the image deployed to your Linux workstation includes full disk encryption."
  platforms: Linux
  platform: linux
  tags: compliance, hardening, built-in
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: System Integrity Protection enabled (macOS)
  query: SELECT 1 FROM sip_config WHERE config_flag = 'sip' AND enabled = 1;
  description: Checks to make sure that the System Integrity Protection feature is enabled.
  resolution: "To enable System Integrity Protection, on the failing device, run the following command in the Terminal app: /usr/sbin/spctl --master-enable."
  platforms: macOS
  tags: compliance, malware, hardening, built-in
  platform: darwin
  contributors: groob
---
apiVersion: v1
kind: policy
spec:
  name: Automatic login disabled (macOS)
  query: SELECT 1 FROM managed_policies WHERE domain = 'com.apple.loginwindow' AND name = 'com.apple.login.mcx.DisableAutoLoginClient' AND value = 1 LIMIT 1;
  description: "Required: You’re already enforcing a policy via Mobile Device Management (MDM). Checks to make sure that the device user cannot log in to the device without a password."
  resolution: "The following example profile includes a setting to disable automatic login: https://github.com/gregneagle/profiles/blob/fecc73d66fa17b6fa78b782904cb47cdc1913aeb/loginwindow.mobileconfig#L64-L65."
  platforms: macOS
  tags: compliance, hardening, built-in
  platform: darwin
  contributors: groob
---
apiVersion: v1
kind: policy
spec:
  name: Guest users disabled (macOS)
  query: SELECT 1 FROM managed_policies WHERE domain = 'com.apple.loginwindow' AND name = 'DisableGuestAccount' AND value = 1 LIMIT 1;
  description: "Required: You’re already enforcing a policy via Mobile Device Management (MDM). Checks to make sure that guest accounts cannot be used to log in to the device without a password."
  resolution: "The following example profile includes a setting to disable guest users: https://github.com/gregneagle/profiles/blob/fecc73d66fa17b6fa78b782904cb47cdc1913aeb/loginwindow.mobileconfig#L68-L71."
  platforms: macOS
  tags: compliance, hardening, built-in
  platform: darwin
  contributors: groob
---
apiVersion: v1
kind: policy
spec:
  name: Secure keyboard entry for Terminal.app enabled (macOS)
  query: SELECT 1 FROM managed_policies WHERE domain = 'com.apple.Terminal' AND name = 'SecureKeyboardEntry' AND value = 1 LIMIT 1;
  description: "Required: You’re already enforcing a policy via Mobile Device Management (MDM). Checks to make sure that the Secure Keyboard Entry setting is enabled."
  platforms: macOS
  tags: compliance, hardening, built-in
  platform: darwin
  contributors: groob
---
apiVersion: v1
kind: query
spec:
  name: Get built-in antivirus status on macOS
  platforms: macOS
  query: SELECT path, value AS version FROM plist WHERE (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/MRT.app/Contents/Info.plist') OR (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/XProtect.bundle/Contents/Info.plist');
  description: Reads the version numbers from the Malware Removal Tool (MRT) and built-in antivirus (XProtect) plists
  purpose: Informational
  tags: compliance, malware, hardening, built-in
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: query
spec:
  name: Get antivirus status from the Windows Security Center
  platforms: Windows
  query: SELECT antivirus, signatures_up_to_date from windows_security_center CROSS JOIN windows_security_products WHERE type = 'Antivirus';
  description: Selects the antivirus and signatures status from Windows Security Center.
  purpose: Informational
  tags: compliance, malware, hardening, built-in
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: query
spec:
  name: Get antivirus (ClamAV/clamd) and updater (freshclam) process status
  platforms: Linux
  query: SELECT pid, state, cmdline, name FROM processes WHERE name='clamd' OR name='freshclam';
  description: Selects the clamd and freshclam processes to ensure AV and its updater are running
  purpose: Informational
  tags: compliance, malware, hardening, built-in
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Antivirus healthy (macOS)
  query: SELECT score FROM (SELECT case when COUNT(*) = 2 then 1 ELSE 0 END AS score FROM plist WHERE (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/XProtect.bundle/Contents/Info.plist' AND value>=2155) OR (key = 'CFBundleShortVersionString' AND path = '/Library/Apple/System/Library/CoreServices/MRT.app/Contents/Info.plist' and value>=1.88)) WHERE score == 1;
  description: Checks the version of Malware Removal Tool (MRT) and the built-in macOS AV (Xprotect). Replace version numbers with the latest version regularly.
  resolution:
    To enable automatic security definition updates, on the failing device, select System
    Preferences > Software Update > Advanced > Turn on Install system data files and security
    updates.
  platforms: macOS
  tags: compliance, malware, hardening, built-in
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Antivirus healthy (Windows)
  query: SELECT 1 from windows_security_center wsc CROSS JOIN windows_security_products wsp WHERE antivirus = 'Good' AND type = 'Antivirus' AND signatures_up_to_date=1;
  description: Checks the status of antivirus and signature updates from the Windows Security Center.
  resolution: "Ensure Windows Defender or your third-party antivirus is running, up to date, and visible in the Windows Security Center."
  platforms: Windows
  tags: compliance, malware, hardening, built-in
  platform: windows
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Antivirus healthy (Linux)
  query: SELECT score FROM (SELECT case when COUNT(*) = 2 then 1 ELSE 0 END AS score FROM processes WHERE (name = 'clamd') OR (name = 'freshclam')) WHERE score == 1;
  description: Checks that both ClamAV's daemon and its updater service (freshclam) are running.
  resolution: "Ensure ClamAV and Freshclam are installed and running."
  platforms: Linux
  tags: compliance, malware, hardening, built-in
  platform: linux
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: MDM Enrolled (macOS)
  query: SELECT 1 from mdm WHERE enrolled='true';
  description: "Required: osquery deployed with Orbit, or manual installation of macadmins/osquery-extension. Checks that a mac is enrolled to MDM. Add a AND on identity_certificate_uuid to check for a specific MDM."
  resolution: "Enroll device to MDM"
  platforms: macOS
  tags: compliance, hardening, built-in
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Application is up to date or not present (macOS)
  query: SELECT 1 WHERE EXISTS (SELECT 1 FROM apps a1 WHERE a1.bundle_identifier = 'com.electron.dockerdesktop' AND a1.bundle_short_version>='4.6.1') OR NOT EXISTS (SELECT 1 FROM apps a2 WHERE a2.bundle_identifier = 'com.electron.dockerdesktop');
  description: "Checks if the application (Docker Desktop example) is installed and up to date, or not installed. Fails if the application is installed and on a lower version. You can copy this query and replace the bundle_identifier and bundle_version values to apply the same type of policy to other applications."
  resolution: "Update Docker or remove it if not used."
  platforms: macOS
  tags: inventory, vulnerability, built-in
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: SSH keys encrypted
  query: SELECT 1 WHERE NOT EXISTS (SELECT 1 FROM users CROSS JOIN user_ssh_keys USING (uid) WHERE encrypted='0');
  description: "Required: osquery must have Full Disk Access. Policy passes if all keys are encrypted, including if no keys are present."
  resolution: "Use this command to encrypt existing SSH keys by providing the path to the file: ssh-keygen -o -p -f /path/to/file"
  platforms: macOS, Linux, Windows
  tags: compliance, ssh, built-in
  contributors: GuillaumeRoss
  platform: darwin,linux,windows
---
apiVersion: v1
kind: policy
spec:
  name: Suspicious autostart (Windows)
  query: SELECT 1 WHERE NOT EXISTS (SELECT 1 FROM startup_items WHERE path = "regsvr32" AND args LIKE "%http%");
  description: "Checks for an autostart that is attempting to load a dynamic link library (DLL) from the internet."
  resolution: "Remove the suspicious startup entry."
  platforms: Windows
  tags: malware, hunting
  platform: windows
  contributors: kswagler-rh
---
apiVersion: v1
kind: policy
spec:
  name: Firewall enabled (macOS)
  query: SELECT 1 FROM alf WHERE global_state >= 1;
  description: "Checks if the firewall is enabled."
  resolution: "In System Preferences, open Security & Privacy, navigate to the Firewall tab and click Turn On Firewall."
  platforms: macOS
  tags: hardening, compliance, built-in
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Screen lock enabled via MDM profile (macOS)
  query: SELECT 1 FROM managed_policies WHERE name='askForPassword' AND value='1';
  description: "Checks that a MDM profile configures the screen lock."
  resolution: "Contact your IT administrator to help you enroll your computer in your organization's MDM. If already enrolled, ask your IT administrator to enable the screen lock feature in the profile configuration."
  platforms: macOS
  tags: compliance, hardening, built-in
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Screen lock enabled (Windows)
  query: SELECT 1 FROM registry WHERE path = 'HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Policies\System\InactivityTimeoutSecs' AND CAST(data as INTEGER) <= 1800;
  description: "Checks if the screen lock is enabled and configured to lock the system within 30 minutes or less."
  resolution: "Ask your IT administrator to enable the Interactive Logon: Machine inactivity limit setting with a value of 1800 seconds or lower."
  platforms: Windows
  tags: compliance, hardening, built-in
  platform: windows
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Password requires 10 or more characters (macOS)
  query: SELECT 1 FROM (SELECT cast(lengthtxt as integer(2)) minlength FROM (SELECT SUBSTRING(length, 1, 2) AS lengthtxt FROM (SELECT policy_description, policy_identifier, split(policy_content, '{', 1) AS length FROM password_policy WHERE policy_identifier LIKE '%minLength')) WHERE minlength >= 10);
  description: "Checks that the password policy requires at least 10 characters. Requires osquery 5.4.0 or newer."
  resolution: "Contact your IT administrator to make sure your Mac is receiving configuration profiles for password length."
  platforms: macOS
  tags: compliance, hardening, built-in
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Operating system up to date (macOS)
  query: SELECT 1 FROM os_version WHERE version >= '12.5.1';
  description: "Checks that the operating system is up to date."
  resolution: "From the Apple menu () in the corner of your screen choose System Preferences. Then select Software Update and select Upgrade Now. You might be asked to restart or enter your password."
  platforms: macOS
  tags: compliance, CIS, template, CIS1.1
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Automatic updates enabled (macOS)
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.SoftwareUpdate' AND name='AutomaticCheckEnabled' AND value=1 LIMIT 1;
  description: "Checks that a mobile device management (MDM) solution configures the operating system to automatically check for updates."
  resolution: "Contact your IT administrator to ensure your Mac is receiving a profile that enables automatic updates."
  platforms: macOS
  tags: compliance, CIS, CIS1.2
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Automatic update downloads enabled (macOS)
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.SoftwareUpdate' AND name='AutomaticDownload' AND value=1 LIMIT 1;
  description: "Checks that a mobile device management (MDM) solution configures the operating system to automatically download updates."
  resolution: "Contact your IT administrator to ensure your Mac is receiving a profile that enables automatic update downloads."
  platforms: macOS
  tags: compliance, CIS, CIS1.3
  platform: darwin
  contributors: GuillaumeRoss
---
apiVersion: v1
kind: policy
spec:
  name: Automatic installation of application updates is enabled (macOS)
  query: SELECT 1 FROM managed_policies WHERE domain='com.apple.SoftwareUpdate' AND name='AutomaticallyInstallAppUpdates' AND value=1 LIMIT 1;
  description: "Checks that a mobile device management (MDM) solution configures the operating system to automatically install updates to App Store applications."
  resolution: "Contact your IT administrator to ensure your Mac is receiving a profile that enables automatic installation of application updates."
  platforms: macOS
  tags: compliance, CIS, CIS1.4
  platform: darwin
  contributors: GuillaumeRoss