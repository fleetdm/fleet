on: [push, pull_request]
name: Run Tests
jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Checkout code
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: '**/node_modules'
        key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

    - name: Install Dependencies
      run: make deps-go && yarn install --prefer-offline

    - name: Build JS
      run: |
        export PATH=$PATH:$(go env GOPATH)/bin
        make generate

    - name: Run Go Tests
      run: |
        make test-go

    - name: Run Go Linting
      run: |
        make lint-go

    - name: Run JS Tests
      run: |
        make test-js
      
    - name: Run JS Linting
      run: |
        make lint-js

    - name: Build Fleet
      run: make

    - name: Run e2e tests
      run: |
        docker-compose up -d
        sleep 10
        ./build/fleet prepare db --dev
        timeout 60s ./build/fleet serve --dev &
        ./build/fleetctl config set --address https://localhost:8080
        ./build/fleetctl config set --tls-skip-verify true
        ./build/fleetctl setup --email=test@fleetdm.com --username=test --password=admin123# --org-name='Fleet Test'
        yarn cypress run

        

