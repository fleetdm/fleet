name: Deploy Dogfood Environment (AWS)

on:
  push:
    branches:
      - main
  pull_request:


jobs:
  check-secrets:
    environment: Docker Hub
    runs-on: ubuntu-latest
    outputs:
      available: ${{ steps.check-secrets.outputs.available }}
    steps:
      - name: Check Secrets availability
        id: check-secrets
        run: |
          if [ ! -z "${{ secrets.AWS_ACCESS_KEY_ID }}" ]; then
            echo "::set-output name=available::true"
          fi
  plan:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: tools/terraform
    needs:
      - check-secrets
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Workspace
        id: workspace
        run: terraform workspace new fleet && terraform workspace select fleet
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Validation 🤖\`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
  deploy:
    defaults:
      run:
        working-directory: tools/terraform
    needs:
      - check-secrets
    if: ${{ needs.check-secrets.outputs.available == 'true' }} && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    environment: Docker Hub
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Configure AWS credentials from Dogfood Account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.4
      - name: Terraform Init
        id: init
        run: terraform init
      - name: Terraform Workspace
        id: workspace
        run: terraform workspace new fleet && terraform workspace select fleet
      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true


          # at some point run `aws ecs describe-task-definition --task-definition fleet-migrate --query taskDefinition > task-definition.json` to get the latest task def
